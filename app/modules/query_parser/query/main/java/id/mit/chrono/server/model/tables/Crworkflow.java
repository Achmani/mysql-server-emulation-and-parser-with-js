/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrworkflowRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crworkflow extends TableImpl<CrworkflowRecord> {

    private static final long serialVersionUID = 492150348;

    /**
     * The reference instance of <code>chrono.crworkflow</code>
     */
    public static final Crworkflow CRWORKFLOW = new Crworkflow();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrworkflowRecord> getRecordType() {
        return CrworkflowRecord.class;
    }

    /**
     * The column <code>chrono.crworkflow.workflow_id</code>.
     */
    public final TableField<CrworkflowRecord, Integer> WORKFLOW_ID = createField("workflow_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_code</code>.
     */
    public final TableField<CrworkflowRecord, String> WORKFLOW_CODE = createField("workflow_code", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_vendor</code>.
     */
    public final TableField<CrworkflowRecord, Integer> WORKFLOW_VENDOR = createField("workflow_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_datagroup</code>.
     */
    public final TableField<CrworkflowRecord, Integer> WORKFLOW_DATAGROUP = createField("workflow_datagroup", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_datasourcetype</code>.
     */
    public final TableField<CrworkflowRecord, Integer> WORKFLOW_DATASOURCETYPE = createField("workflow_datasourcetype", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_entitygroup</code>.
     */
    public final TableField<CrworkflowRecord, String> WORKFLOW_ENTITYGROUP = createField("workflow_entitygroup", org.jooq.impl.SQLDataType.CHAR(10), this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_entity</code>.
     */
    public final TableField<CrworkflowRecord, String> WORKFLOW_ENTITY = createField("workflow_entity", org.jooq.impl.SQLDataType.CHAR(24), this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_phase</code>.
     */
    public final TableField<CrworkflowRecord, Integer> WORKFLOW_PHASE = createField("workflow_phase", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_identitypattern</code>.
     */
    public final TableField<CrworkflowRecord, String> WORKFLOW_IDENTITYPATTERN = createField("workflow_identitypattern", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_dependencies</code>.
     */
    public final TableField<CrworkflowRecord, String> WORKFLOW_DEPENDENCIES = createField("workflow_dependencies", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_localdir</code>.
     */
    public final TableField<CrworkflowRecord, String> WORKFLOW_LOCALDIR = createField("workflow_localdir", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_class</code>.
     */
    public final TableField<CrworkflowRecord, String> WORKFLOW_CLASS = createField("workflow_class", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_description</code>.
     */
    public final TableField<CrworkflowRecord, String> WORKFLOW_DESCRIPTION = createField("workflow_description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crworkflow.workflow_enabled</code>.
     */
    public final TableField<CrworkflowRecord, Byte> WORKFLOW_ENABLED = createField("workflow_enabled", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>chrono.crworkflow</code> table reference
     */
    public Crworkflow() {
        this(DSL.name("crworkflow"), null);
    }

    /**
     * Create an aliased <code>chrono.crworkflow</code> table reference
     */
    public Crworkflow(String alias) {
        this(DSL.name(alias), CRWORKFLOW);
    }

    /**
     * Create an aliased <code>chrono.crworkflow</code> table reference
     */
    public Crworkflow(Name alias) {
        this(alias, CRWORKFLOW);
    }

    private Crworkflow(Name alias, Table<CrworkflowRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crworkflow(Name alias, Table<CrworkflowRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrworkflowRecord> getPrimaryKey() {
        return Keys.KEY_CRWORKFLOW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrworkflowRecord>> getKeys() {
        return Arrays.<UniqueKey<CrworkflowRecord>>asList(Keys.KEY_CRWORKFLOW_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crworkflow as(String alias) {
        return new Crworkflow(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crworkflow as(Name alias) {
        return new Crworkflow(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crworkflow rename(String name) {
        return new Crworkflow(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crworkflow rename(Name name) {
        return new Crworkflow(name, null);
    }
}
