/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.HwgtrxRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hwgtrx extends TableImpl<HwgtrxRecord> {

    private static final long serialVersionUID = -1541981411;

    /**
     * The reference instance of <code>chrono.hwgtrx</code>
     */
    public static final Hwgtrx HWGTRX = new Hwgtrx();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HwgtrxRecord> getRecordType() {
        return HwgtrxRecord.class;
    }

    /**
     * The column <code>chrono.hwgtrx.hwgtrx_id</code>.
     */
    public final TableField<HwgtrxRecord, ULong> HWGTRX_ID = createField("hwgtrx_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwgtrx.hwgtrx_crcollectortaskfiles</code>.
     */
    public final TableField<HwgtrxRecord, ULong> HWGTRX_CRCOLLECTORTASKFILES = createField("hwgtrx_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwgtrx.hwgtrx_date</code>.
     */
    public final TableField<HwgtrxRecord, UInteger> HWGTRX_DATE = createField("hwgtrx_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwgtrx.hwgtrx_datefrom</code>.
     */
    public final TableField<HwgtrxRecord, Integer> HWGTRX_DATEFROM = createField("hwgtrx_datefrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwgtrx.hwgtrx_hwbsc</code>.
     */
    public final TableField<HwgtrxRecord, ULong> HWGTRX_HWBSC = createField("hwgtrx_hwbsc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwgtrx.hwgtrx_hwbts</code>.
     */
    public final TableField<HwgtrxRecord, ULong> HWGTRX_HWBTS = createField("hwgtrx_hwbts", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.hwgtrx.hwgtrx_hwgcell</code>.
     */
    public final TableField<HwgtrxRecord, ULong> HWGTRX_HWGCELL = createField("hwgtrx_hwgcell", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.hwgtrx.TRXID</code>.
     */
    public final TableField<HwgtrxRecord, String> TRXID = createField("TRXID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwgtrx.TRXNAME</code>.
     */
    public final TableField<HwgtrxRecord, String> TRXNAME = createField("TRXNAME", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.hwgtrx.FDN</code>.
     */
    public final TableField<HwgtrxRecord, String> FDN = createField("FDN", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwgtrx.FREQ</code>.
     */
    public final TableField<HwgtrxRecord, String> FREQ = createField("FREQ", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwgtrx.TRXNO</code>.
     */
    public final TableField<HwgtrxRecord, String> TRXNO = createField("TRXNO", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwgtrx.CELLID</code>.
     */
    public final TableField<HwgtrxRecord, String> CELLID = createField("CELLID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwgtrx.ISMAINBCCH</code>.
     */
    public final TableField<HwgtrxRecord, String> ISMAINBCCH = createField("ISMAINBCCH", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwgtrx.ACTSTATUS</code>.
     */
    public final TableField<HwgtrxRecord, String> ACTSTATUS = createField("ACTSTATUS", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwgtrx.MOINDEX</code>.
     */
    public final TableField<HwgtrxRecord, String> MOINDEX = createField("MOINDEX", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwgtrx.NEID</code>.
     */
    public final TableField<HwgtrxRecord, String> NEID = createField("NEID", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * Create a <code>chrono.hwgtrx</code> table reference
     */
    public Hwgtrx() {
        this(DSL.name("hwgtrx"), null);
    }

    /**
     * Create an aliased <code>chrono.hwgtrx</code> table reference
     */
    public Hwgtrx(String alias) {
        this(DSL.name(alias), HWGTRX);
    }

    /**
     * Create an aliased <code>chrono.hwgtrx</code> table reference
     */
    public Hwgtrx(Name alias) {
        this(alias, HWGTRX);
    }

    private Hwgtrx(Name alias, Table<HwgtrxRecord> aliased) {
        this(alias, aliased, null);
    }

    private Hwgtrx(Name alias, Table<HwgtrxRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HWGTRX_HWGTRX_DATE, Indexes.HWGTRX_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HwgtrxRecord> getPrimaryKey() {
        return Keys.KEY_HWGTRX_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HwgtrxRecord>> getKeys() {
        return Arrays.<UniqueKey<HwgtrxRecord>>asList(Keys.KEY_HWGTRX_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwgtrx as(String alias) {
        return new Hwgtrx(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwgtrx as(Name alias) {
        return new Hwgtrx(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwgtrx rename(String name) {
        return new Hwgtrx(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwgtrx rename(Name name) {
        return new Hwgtrx(name, null);
    }
}
