/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.HwbscRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hwbsc extends TableImpl<HwbscRecord> {

    private static final long serialVersionUID = -599453246;

    /**
     * The reference instance of <code>chrono.hwbsc</code>
     */
    public static final Hwbsc HWBSC = new Hwbsc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HwbscRecord> getRecordType() {
        return HwbscRecord.class;
    }

    /**
     * The column <code>chrono.hwbsc.hwbsc_id</code>.
     */
    public final TableField<HwbscRecord, ULong> HWBSC_ID = createField("hwbsc_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbsc.hwbsc_crcollectortaskfiles</code>.
     */
    public final TableField<HwbscRecord, ULong> HWBSC_CRCOLLECTORTASKFILES = createField("hwbsc_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.hwbsc.hwbsc_date</code>.
     */
    public final TableField<HwbscRecord, UInteger> HWBSC_DATE = createField("hwbsc_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbsc.hwbsc_datefrom</code>.
     */
    public final TableField<HwbscRecord, Integer> HWBSC_DATEFROM = createField("hwbsc_datefrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.hwbsc_node</code>.
     */
    public final TableField<HwbscRecord, Integer> HWBSC_NODE = createField("hwbsc_node", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.hwbsc_vendor</code>.
     */
    public final TableField<HwbscRecord, Integer> HWBSC_VENDOR = createField("hwbsc_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.BSCNAME</code>.
     */
    public final TableField<HwbscRecord, String> BSCNAME = createField("BSCNAME", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.hwbsc.TOTALSUBRACK</code>.
     */
    public final TableField<HwbscRecord, Integer> TOTALSUBRACK = createField("TOTALSUBRACK", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.TOTALBRD</code>.
     */
    public final TableField<HwbscRecord, Integer> TOTALBRD = createField("TOTALBRD", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.TOTALBTS</code>.
     */
    public final TableField<HwbscRecord, Integer> TOTALBTS = createField("TOTALBTS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.TOTALTRXCAP</code>.
     */
    public final TableField<HwbscRecord, Integer> TOTALTRXCAP = createField("TOTALTRXCAP", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.TOTALTRX</code>.
     */
    public final TableField<HwbscRecord, Integer> TOTALTRX = createField("TOTALTRX", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.TRXOCCUP</code>.
     */
    public final TableField<HwbscRecord, Double> TRXOCCUP = createField("TRXOCCUP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.hwbsc.TOTALCELL</code>.
     */
    public final TableField<HwbscRecord, Integer> TOTALCELL = createField("TOTALCELL", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsc.FDN</code>.
     */
    public final TableField<HwbscRecord, String> FDN = createField("FDN", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.IP</code>.
     */
    public final TableField<HwbscRecord, String> IP = createField("IP", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.MOINDEX</code>.
     */
    public final TableField<HwbscRecord, String> MOINDEX = createField("MOINDEX", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.MATCHVERSION</code>.
     */
    public final TableField<HwbscRecord, String> MATCHVERSION = createField("MATCHVERSION", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.hwbsc.MEMO</code>.
     */
    public final TableField<HwbscRecord, String> MEMO = createField("MEMO", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.hwbsc.NEID</code>.
     */
    public final TableField<HwbscRecord, String> NEID = createField("NEID", org.jooq.impl.SQLDataType.CHAR(12), this, "");

    /**
     * The column <code>chrono.hwbsc.NETYPE</code>.
     */
    public final TableField<HwbscRecord, String> NETYPE = createField("NETYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.NEVERSION</code>.
     */
    public final TableField<HwbscRecord, String> NEVERSION = createField("NEVERSION", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.USERLABEL</code>.
     */
    public final TableField<HwbscRecord, String> USERLABEL = createField("USERLABEL", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.VENDORNAME</code>.
     */
    public final TableField<HwbscRecord, String> VENDORNAME = createField("VENDORNAME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.TIMEZONE</code>.
     */
    public final TableField<HwbscRecord, String> TIMEZONE = createField("TIMEZONE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.hwbsc_remark</code>.
     */
    public final TableField<HwbscRecord, String> HWBSC_REMARK = createField("hwbsc_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.hwbsc.EXTPROP1</code>.
     */
    public final TableField<HwbscRecord, String> EXTPROP1 = createField("EXTPROP1", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsc.EXTPROP2</code>.
     */
    public final TableField<HwbscRecord, Integer> EXTPROP2 = createField("EXTPROP2", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>chrono.hwbsc</code> table reference
     */
    public Hwbsc() {
        this(DSL.name("hwbsc"), null);
    }

    /**
     * Create an aliased <code>chrono.hwbsc</code> table reference
     */
    public Hwbsc(String alias) {
        this(DSL.name(alias), HWBSC);
    }

    /**
     * Create an aliased <code>chrono.hwbsc</code> table reference
     */
    public Hwbsc(Name alias) {
        this(alias, HWBSC);
    }

    private Hwbsc(Name alias, Table<HwbscRecord> aliased) {
        this(alias, aliased, null);
    }

    private Hwbsc(Name alias, Table<HwbscRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HWBSC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HwbscRecord> getPrimaryKey() {
        return Keys.KEY_HWBSC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HwbscRecord>> getKeys() {
        return Arrays.<UniqueKey<HwbscRecord>>asList(Keys.KEY_HWBSC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwbsc as(String alias) {
        return new Hwbsc(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwbsc as(Name alias) {
        return new Hwbsc(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwbsc rename(String name) {
        return new Hwbsc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwbsc rename(Name name) {
        return new Hwbsc(name, null);
    }
}
