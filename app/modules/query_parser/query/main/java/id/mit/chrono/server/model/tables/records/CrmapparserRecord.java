/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crmapparser;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrmapparserRecord extends UpdatableRecordImpl<CrmapparserRecord> implements Record10<Integer, Integer, Integer, Integer, String, String, String, String, String, Byte> {

    private static final long serialVersionUID = 91474408;

    /**
     * Setter for <code>chrono.crmapparser.mapparser_id</code>.
     */
    public void setMapparserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_id</code>.
     */
    public Integer getMapparserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_vendor</code>.
     */
    public void setMapparserVendor(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_vendor</code>.
     */
    public Integer getMapparserVendor() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_datagroup</code>.
     */
    public void setMapparserDatagroup(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_datagroup</code>.
     */
    public Integer getMapparserDatagroup() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_datasourcetype</code>.
     */
    public void setMapparserDatasourcetype(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_datasourcetype</code>.
     */
    public Integer getMapparserDatasourcetype() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_pattern</code>.
     */
    public void setMapparserPattern(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_pattern</code>.
     */
    public String getMapparserPattern() {
        return (String) get(4);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_identitypattern</code>.
     */
    public void setMapparserIdentitypattern(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_identitypattern</code>.
     */
    public String getMapparserIdentitypattern() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_dependencies</code>.
     */
    public void setMapparserDependencies(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_dependencies</code>.
     */
    public String getMapparserDependencies() {
        return (String) get(6);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_class</code>.
     */
    public void setMapparserClass(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_class</code>.
     */
    public String getMapparserClass() {
        return (String) get(7);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_description</code>.
     */
    public void setMapparserDescription(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_description</code>.
     */
    public String getMapparserDescription() {
        return (String) get(8);
    }

    /**
     * Setter for <code>chrono.crmapparser.mapparser_enabled</code>.
     */
    public void setMapparserEnabled(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.crmapparser.mapparser_enabled</code>.
     */
    public Byte getMapparserEnabled() {
        return (Byte) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Integer, Integer, String, String, String, String, String, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Integer, Integer, String, String, String, String, String, Byte> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_VENDOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_DATAGROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_DATASOURCETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_PATTERN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_IDENTITYPATTERN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_DEPENDENCIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return Crmapparser.CRMAPPARSER.MAPPARSER_ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getMapparserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getMapparserVendor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getMapparserDatagroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getMapparserDatasourcetype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getMapparserPattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getMapparserIdentitypattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getMapparserDependencies();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getMapparserClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getMapparserDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component10() {
        return getMapparserEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getMapparserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getMapparserVendor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getMapparserDatagroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getMapparserDatasourcetype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getMapparserPattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getMapparserIdentitypattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getMapparserDependencies();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getMapparserClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getMapparserDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getMapparserEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value1(Integer value) {
        setMapparserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value2(Integer value) {
        setMapparserVendor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value3(Integer value) {
        setMapparserDatagroup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value4(Integer value) {
        setMapparserDatasourcetype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value5(String value) {
        setMapparserPattern(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value6(String value) {
        setMapparserIdentitypattern(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value7(String value) {
        setMapparserDependencies(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value8(String value) {
        setMapparserClass(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value9(String value) {
        setMapparserDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord value10(Byte value) {
        setMapparserEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmapparserRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, String value6, String value7, String value8, String value9, Byte value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrmapparserRecord
     */
    public CrmapparserRecord() {
        super(Crmapparser.CRMAPPARSER);
    }

    /**
     * Create a detached, initialised CrmapparserRecord
     */
    public CrmapparserRecord(Integer mapparserId, Integer mapparserVendor, Integer mapparserDatagroup, Integer mapparserDatasourcetype, String mapparserPattern, String mapparserIdentitypattern, String mapparserDependencies, String mapparserClass, String mapparserDescription, Byte mapparserEnabled) {
        super(Crmapparser.CRMAPPARSER);

        set(0, mapparserId);
        set(1, mapparserVendor);
        set(2, mapparserDatagroup);
        set(3, mapparserDatasourcetype);
        set(4, mapparserPattern);
        set(5, mapparserIdentitypattern);
        set(6, mapparserDependencies);
        set(7, mapparserClass);
        set(8, mapparserDescription);
        set(9, mapparserEnabled);
    }
}
