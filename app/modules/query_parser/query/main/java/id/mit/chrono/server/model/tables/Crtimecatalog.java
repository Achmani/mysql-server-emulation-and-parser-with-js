/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrtimecatalogRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crtimecatalog extends TableImpl<CrtimecatalogRecord> {

    private static final long serialVersionUID = -488204856;

    /**
     * The reference instance of <code>chrono.crtimecatalog</code>
     */
    public static final Crtimecatalog CRTIMECATALOG = new Crtimecatalog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrtimecatalogRecord> getRecordType() {
        return CrtimecatalogRecord.class;
    }

    /**
     * The column <code>chrono.crtimecatalog.timecatalog_id</code>.
     */
    public final TableField<CrtimecatalogRecord, Integer> TIMECATALOG_ID = createField("timecatalog_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crtimecatalog.timecatalog_datagroup</code>.
     */
    public final TableField<CrtimecatalogRecord, Integer> TIMECATALOG_DATAGROUP = createField("timecatalog_datagroup", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crtimecatalog.timecatalog_date</code>.
     */
    public final TableField<CrtimecatalogRecord, Integer> TIMECATALOG_DATE = createField("timecatalog_date", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crtimecatalog.timecatalog_active</code>.
     */
    public final TableField<CrtimecatalogRecord, Byte> TIMECATALOG_ACTIVE = createField("timecatalog_active", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.crtimecatalog.timecatalog_adminonly</code>.
     */
    public final TableField<CrtimecatalogRecord, Byte> TIMECATALOG_ADMINONLY = createField("timecatalog_adminonly", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>chrono.crtimecatalog</code> table reference
     */
    public Crtimecatalog() {
        this(DSL.name("crtimecatalog"), null);
    }

    /**
     * Create an aliased <code>chrono.crtimecatalog</code> table reference
     */
    public Crtimecatalog(String alias) {
        this(DSL.name(alias), CRTIMECATALOG);
    }

    /**
     * Create an aliased <code>chrono.crtimecatalog</code> table reference
     */
    public Crtimecatalog(Name alias) {
        this(alias, CRTIMECATALOG);
    }

    private Crtimecatalog(Name alias, Table<CrtimecatalogRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crtimecatalog(Name alias, Table<CrtimecatalogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrtimecatalogRecord> getPrimaryKey() {
        return Keys.KEY_CRTIMECATALOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrtimecatalogRecord>> getKeys() {
        return Arrays.<UniqueKey<CrtimecatalogRecord>>asList(Keys.KEY_CRTIMECATALOG_PRIMARY, Keys.KEY_CRTIMECATALOG_TIMECATALOG_DATAGROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crtimecatalog as(String alias) {
        return new Crtimecatalog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crtimecatalog as(Name alias) {
        return new Crtimecatalog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crtimecatalog rename(String name) {
        return new Crtimecatalog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crtimecatalog rename(Name name) {
        return new Crtimecatalog(name, null);
    }
}
