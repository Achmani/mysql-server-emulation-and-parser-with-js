/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.ZtebscextlcellRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ztebscextlcell extends TableImpl<ZtebscextlcellRecord> {

    private static final long serialVersionUID = -1874149483;

    /**
     * The reference instance of <code>chrono.ztebscextlcell</code>
     */
    public static final Ztebscextlcell ZTEBSCEXTLCELL = new Ztebscextlcell();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ZtebscextlcellRecord> getRecordType() {
        return ZtebscextlcellRecord.class;
    }

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_id</code>.
     */
    public final TableField<ZtebscextlcellRecord, ULong> ZTEBSCEXTLCELL_ID = createField("ztebscextlcell_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_crcollectortaskfiles</code>.
     */
    public final TableField<ZtebscextlcellRecord, ULong> ZTEBSCEXTLCELL_CRCOLLECTORTASKFILES = createField("ztebscextlcell_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_date</code>.
     */
    public final TableField<ZtebscextlcellRecord, UInteger> ZTEBSCEXTLCELL_DATE = createField("ztebscextlcell_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_datefrom</code>.
     */
    public final TableField<ZtebscextlcellRecord, UInteger> ZTEBSCEXTLCELL_DATEFROM = createField("ztebscextlcell_datefrom", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_ztebsc</code>.
     */
    public final TableField<ZtebscextlcellRecord, ULong> ZTEBSCEXTLCELL_ZTEBSC = createField("ztebscextlcell_ztebsc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_ztebts</code>.
     */
    public final TableField<ZtebscextlcellRecord, ULong> ZTEBSCEXTLCELL_ZTEBTS = createField("ztebscextlcell_ztebts", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_nodealias</code>.
     */
    public final TableField<ZtebscextlcellRecord, Integer> ZTEBSCEXTLCELL_NODEALIAS = createField("ztebscextlcell_nodealias", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_cell</code>.
     */
    public final TableField<ZtebscextlcellRecord, Integer> ZTEBSCEXTLCELL_CELL = createField("ztebscextlcell_cell", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_cellclass</code>.
     */
    public final TableField<ZtebscextlcellRecord, Integer> ZTEBSCEXTLCELL_CELLCLASS = createField("ztebscextlcell_cellclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_cellclassgroup</code>.
     */
    public final TableField<ZtebscextlcellRecord, Integer> ZTEBSCEXTLCELL_CELLCLASSGROUP = createField("ztebscextlcell_cellclassgroup", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_cellcoverage</code>.
     */
    public final TableField<ZtebscextlcellRecord, Integer> ZTEBSCEXTLCELL_CELLCOVERAGE = createField("ztebscextlcell_cellcoverage", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_revenueclass</code>.
     */
    public final TableField<ZtebscextlcellRecord, Integer> ZTEBSCEXTLCELL_REVENUECLASS = createField("ztebscextlcell_revenueclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_cellstatus</code>.
     */
    public final TableField<ZtebscextlcellRecord, Integer> ZTEBSCEXTLCELL_CELLSTATUS = createField("ztebscextlcell_cellstatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_vendor</code>.
     */
    public final TableField<ZtebscextlcellRecord, Integer> ZTEBSCEXTLCELL_VENDOR = createField("ztebscextlcell_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_latitude</code>.
     */
    public final TableField<ZtebscextlcellRecord, Double> ZTEBSCEXTLCELL_LATITUDE = createField("ztebscextlcell_latitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_longitude</code>.
     */
    public final TableField<ZtebscextlcellRecord, Double> ZTEBSCEXTLCELL_LONGITUDE = createField("ztebscextlcell_longitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ztebscextlcell_namingvalid</code>.
     */
    public final TableField<ZtebscextlcellRecord, Byte> ZTEBSCEXTLCELL_NAMINGVALID = createField("ztebscextlcell_namingvalid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.ztebscextlcell.MOI</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> MOI = createField("MOI", org.jooq.impl.SQLDataType.CHAR(92), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.SubNetwork</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> SUBNETWORK = createField("SubNetwork", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.MEID</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> MEID = createField("MEID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.GBssFunction</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> GBSSFUNCTION = createField("GBssFunction", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.GExternalEutranCell</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> GEXTERNALEUTRANCELL = createField("GExternalEutranCell", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.GExternalEutranCellTDD</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> GEXTERNALEUTRANCELLTDD = createField("GExternalEutranCellTDD", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.userLabel</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> USERLABEL = createField("userLabel", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.enbId</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> ENBID = createField("enbId", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.PCID</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> PCID = createField("PCID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ArfcnLTE</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> ARFCNLTE = createField("ArfcnLTE", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.TAC</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> TAC = createField("TAC", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.ENBInd</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> ENBIND = createField("ENBInd", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.measureBandwidth</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> MEASUREBANDWIDTH = createField("measureBandwidth", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebscextlcell.EUTRANID</code>.
     */
    public final TableField<ZtebscextlcellRecord, String> EUTRANID = createField("EUTRANID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.ztebscextlcell</code> table reference
     */
    public Ztebscextlcell() {
        this(DSL.name("ztebscextlcell"), null);
    }

    /**
     * Create an aliased <code>chrono.ztebscextlcell</code> table reference
     */
    public Ztebscextlcell(String alias) {
        this(DSL.name(alias), ZTEBSCEXTLCELL);
    }

    /**
     * Create an aliased <code>chrono.ztebscextlcell</code> table reference
     */
    public Ztebscextlcell(Name alias) {
        this(alias, ZTEBSCEXTLCELL);
    }

    private Ztebscextlcell(Name alias, Table<ZtebscextlcellRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ztebscextlcell(Name alias, Table<ZtebscextlcellRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ZtebscextlcellRecord> getPrimaryKey() {
        return Keys.KEY_ZTEBSCEXTLCELL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ZtebscextlcellRecord>> getKeys() {
        return Arrays.<UniqueKey<ZtebscextlcellRecord>>asList(Keys.KEY_ZTEBSCEXTLCELL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ztebscextlcell as(String alias) {
        return new Ztebscextlcell(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ztebscextlcell as(Name alias) {
        return new Ztebscextlcell(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ztebscextlcell rename(String name) {
        return new Ztebscextlcell(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ztebscextlcell rename(Name name) {
        return new Ztebscextlcell(name, null);
    }
}
