/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crdataexporttask2;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crdataexporttask2Record extends UpdatableRecordImpl<Crdataexporttask2Record> implements Record18<Integer, String, Integer, String, String, String, String, String, String, Byte, String, String, Integer, String, String, String, String, Byte> {

    private static final long serialVersionUID = 816685252;

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_id</code>.
     */
    public void setDataexporttaskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_id</code>.
     */
    public Integer getDataexporttaskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_code</code>.
     */
    public void setDataexporttaskCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_code</code>.
     */
    public String getDataexporttaskCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_dataexporttype</code>.
     */
    public void setDataexporttaskDataexporttype(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_dataexporttype</code>.
     */
    public Integer getDataexporttaskDataexporttype() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_location</code>.
     */
    public void setDataexporttaskLocation(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_location</code>.
     */
    public String getDataexporttaskLocation() {
        return (String) get(3);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_filename</code>.
     */
    public void setDataexporttaskFilename(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_filename</code>.
     */
    public String getDataexporttaskFilename() {
        return (String) get(4);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_extension</code>.
     */
    public void setDataexporttaskExtension(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_extension</code>.
     */
    public String getDataexporttaskExtension() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_sql</code>.
     */
    public void setDataexporttaskSql(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_sql</code>.
     */
    public String getDataexporttaskSql() {
        return (String) get(6);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_columns</code>.
     */
    public void setDataexporttaskColumns(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_columns</code>.
     */
    public String getDataexporttaskColumns() {
        return (String) get(7);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_delimiter</code>.
     */
    public void setDataexporttaskDelimiter(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_delimiter</code>.
     */
    public String getDataexporttaskDelimiter() {
        return (String) get(8);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_compress</code>.
     */
    public void setDataexporttaskCompress(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_compress</code>.
     */
    public Byte getDataexporttaskCompress() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_compressformat</code>.
     */
    public void setDataexporttaskCompressformat(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_compressformat</code>.
     */
    public String getDataexporttaskCompressformat() {
        return (String) get(10);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_sftphost</code>.
     */
    public void setDataexporttaskSftphost(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_sftphost</code>.
     */
    public String getDataexporttaskSftphost() {
        return (String) get(11);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_sftpport</code>.
     */
    public void setDataexporttaskSftpport(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_sftpport</code>.
     */
    public Integer getDataexporttaskSftpport() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_sftpuser</code>.
     */
    public void setDataexporttaskSftpuser(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_sftpuser</code>.
     */
    public String getDataexporttaskSftpuser() {
        return (String) get(13);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_sftppassword</code>.
     */
    public void setDataexporttaskSftppassword(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_sftppassword</code>.
     */
    public String getDataexporttaskSftppassword() {
        return (String) get(14);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_sftpdir</code>.
     */
    public void setDataexporttaskSftpdir(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_sftpdir</code>.
     */
    public String getDataexporttaskSftpdir() {
        return (String) get(15);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_localdir</code>.
     */
    public void setDataexporttaskLocaldir(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_localdir</code>.
     */
    public String getDataexporttaskLocaldir() {
        return (String) get(16);
    }

    /**
     * Setter for <code>chrono.crdataexporttask2.dataexporttask_enabled</code>.
     */
    public void setDataexporttaskEnabled(Byte value) {
        set(17, value);
    }

    /**
     * Getter for <code>chrono.crdataexporttask2.dataexporttask_enabled</code>.
     */
    public Byte getDataexporttaskEnabled() {
        return (Byte) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Integer, String, Integer, String, String, String, String, String, String, Byte, String, String, Integer, String, String, String, String, Byte> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Integer, String, Integer, String, String, String, String, String, String, Byte, String, String, Integer, String, String, String, String, Byte> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_DATAEXPORTTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_FILENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_EXTENSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_SQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_COLUMNS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_DELIMITER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_COMPRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_COMPRESSFORMAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_SFTPHOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_SFTPPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_SFTPUSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_SFTPPASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_SFTPDIR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_LOCALDIR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field18() {
        return Crdataexporttask2.CRDATAEXPORTTASK2.DATAEXPORTTASK_ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDataexporttaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDataexporttaskCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getDataexporttaskDataexporttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDataexporttaskLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDataexporttaskFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDataexporttaskExtension();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDataexporttaskSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getDataexporttaskColumns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getDataexporttaskDelimiter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component10() {
        return getDataexporttaskCompress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getDataexporttaskCompressformat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getDataexporttaskSftphost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getDataexporttaskSftpport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getDataexporttaskSftpuser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getDataexporttaskSftppassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getDataexporttaskSftpdir();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getDataexporttaskLocaldir();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component18() {
        return getDataexporttaskEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDataexporttaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDataexporttaskCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getDataexporttaskDataexporttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDataexporttaskLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDataexporttaskFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDataexporttaskExtension();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDataexporttaskSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDataexporttaskColumns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getDataexporttaskDelimiter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getDataexporttaskCompress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getDataexporttaskCompressformat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getDataexporttaskSftphost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getDataexporttaskSftpport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getDataexporttaskSftpuser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getDataexporttaskSftppassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getDataexporttaskSftpdir();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getDataexporttaskLocaldir();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value18() {
        return getDataexporttaskEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value1(Integer value) {
        setDataexporttaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value2(String value) {
        setDataexporttaskCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value3(Integer value) {
        setDataexporttaskDataexporttype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value4(String value) {
        setDataexporttaskLocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value5(String value) {
        setDataexporttaskFilename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value6(String value) {
        setDataexporttaskExtension(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value7(String value) {
        setDataexporttaskSql(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value8(String value) {
        setDataexporttaskColumns(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value9(String value) {
        setDataexporttaskDelimiter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value10(Byte value) {
        setDataexporttaskCompress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value11(String value) {
        setDataexporttaskCompressformat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value12(String value) {
        setDataexporttaskSftphost(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value13(Integer value) {
        setDataexporttaskSftpport(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value14(String value) {
        setDataexporttaskSftpuser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value15(String value) {
        setDataexporttaskSftppassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value16(String value) {
        setDataexporttaskSftpdir(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value17(String value) {
        setDataexporttaskLocaldir(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record value18(Byte value) {
        setDataexporttaskEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask2Record values(Integer value1, String value2, Integer value3, String value4, String value5, String value6, String value7, String value8, String value9, Byte value10, String value11, String value12, Integer value13, String value14, String value15, String value16, String value17, Byte value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Crdataexporttask2Record
     */
    public Crdataexporttask2Record() {
        super(Crdataexporttask2.CRDATAEXPORTTASK2);
    }

    /**
     * Create a detached, initialised Crdataexporttask2Record
     */
    public Crdataexporttask2Record(Integer dataexporttaskId, String dataexporttaskCode, Integer dataexporttaskDataexporttype, String dataexporttaskLocation, String dataexporttaskFilename, String dataexporttaskExtension, String dataexporttaskSql, String dataexporttaskColumns, String dataexporttaskDelimiter, Byte dataexporttaskCompress, String dataexporttaskCompressformat, String dataexporttaskSftphost, Integer dataexporttaskSftpport, String dataexporttaskSftpuser, String dataexporttaskSftppassword, String dataexporttaskSftpdir, String dataexporttaskLocaldir, Byte dataexporttaskEnabled) {
        super(Crdataexporttask2.CRDATAEXPORTTASK2);

        set(0, dataexporttaskId);
        set(1, dataexporttaskCode);
        set(2, dataexporttaskDataexporttype);
        set(3, dataexporttaskLocation);
        set(4, dataexporttaskFilename);
        set(5, dataexporttaskExtension);
        set(6, dataexporttaskSql);
        set(7, dataexporttaskColumns);
        set(8, dataexporttaskDelimiter);
        set(9, dataexporttaskCompress);
        set(10, dataexporttaskCompressformat);
        set(11, dataexporttaskSftphost);
        set(12, dataexporttaskSftpport);
        set(13, dataexporttaskSftpuser);
        set(14, dataexporttaskSftppassword);
        set(15, dataexporttaskSftpdir);
        set(16, dataexporttaskLocaldir);
        set(17, dataexporttaskEnabled);
    }
}
