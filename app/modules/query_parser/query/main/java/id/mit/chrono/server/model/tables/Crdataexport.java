/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrdataexportRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crdataexport extends TableImpl<CrdataexportRecord> {

    private static final long serialVersionUID = -1675208483;

    /**
     * The reference instance of <code>chrono.crdataexport</code>
     */
    public static final Crdataexport CRDATAEXPORT = new Crdataexport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrdataexportRecord> getRecordType() {
        return CrdataexportRecord.class;
    }

    /**
     * The column <code>chrono.crdataexport.dataexport_id</code>.
     */
    public final TableField<CrdataexportRecord, Integer> DATAEXPORT_ID = createField("dataexport_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_date</code>.
     */
    public final TableField<CrdataexportRecord, Integer> DATAEXPORT_DATE = createField("dataexport_date", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_dataexporttype</code>.
     */
    public final TableField<CrdataexportRecord, Integer> DATAEXPORT_DATAEXPORTTYPE = createField("dataexport_dataexporttype", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_filename</code>.
     */
    public final TableField<CrdataexportRecord, String> DATAEXPORT_FILENAME = createField("dataexport_filename", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_path</code>.
     */
    public final TableField<CrdataexportRecord, String> DATAEXPORT_PATH = createField("dataexport_path", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_size</code>.
     */
    public final TableField<CrdataexportRecord, Integer> DATAEXPORT_SIZE = createField("dataexport_size", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_totaldata</code>.
     */
    public final TableField<CrdataexportRecord, Integer> DATAEXPORT_TOTALDATA = createField("dataexport_totaldata", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_lastupdate</code>.
     */
    public final TableField<CrdataexportRecord, Integer> DATAEXPORT_LASTUPDATE = createField("dataexport_lastupdate", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_extension</code>.
     */
    public final TableField<CrdataexportRecord, String> DATAEXPORT_EXTENSION = createField("dataexport_extension", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_checksum</code>.
     */
    public final TableField<CrdataexportRecord, String> DATAEXPORT_CHECKSUM = createField("dataexport_checksum", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crdataexport.dataexport_totaldownload</code>.
     */
    public final TableField<CrdataexportRecord, Integer> DATAEXPORT_TOTALDOWNLOAD = createField("dataexport_totaldownload", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>chrono.crdataexport</code> table reference
     */
    public Crdataexport() {
        this(DSL.name("crdataexport"), null);
    }

    /**
     * Create an aliased <code>chrono.crdataexport</code> table reference
     */
    public Crdataexport(String alias) {
        this(DSL.name(alias), CRDATAEXPORT);
    }

    /**
     * Create an aliased <code>chrono.crdataexport</code> table reference
     */
    public Crdataexport(Name alias) {
        this(alias, CRDATAEXPORT);
    }

    private Crdataexport(Name alias, Table<CrdataexportRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crdataexport(Name alias, Table<CrdataexportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrdataexportRecord> getPrimaryKey() {
        return Keys.KEY_CRDATAEXPORT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrdataexportRecord>> getKeys() {
        return Arrays.<UniqueKey<CrdataexportRecord>>asList(Keys.KEY_CRDATAEXPORT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexport as(String alias) {
        return new Crdataexport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexport as(Name alias) {
        return new Crdataexport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crdataexport rename(String name) {
        return new Crdataexport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crdataexport rename(Name name) {
        return new Crdataexport(name, null);
    }
}
