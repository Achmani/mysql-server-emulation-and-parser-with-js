/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrenodebmmeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crenodebmme extends TableImpl<CrenodebmmeRecord> {

    private static final long serialVersionUID = -1536210102;

    /**
     * The reference instance of <code>chrono.crenodebmme</code>
     */
    public static final Crenodebmme CRENODEBMME = new Crenodebmme();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrenodebmmeRecord> getRecordType() {
        return CrenodebmmeRecord.class;
    }

    /**
     * The column <code>chrono.crenodebmme.enodebmme_id</code>.
     */
    public final TableField<CrenodebmmeRecord, Integer> ENODEBMME_ID = createField("enodebmme_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crenodebmme.enodebmme_crcollectortaskfiles</code>.
     */
    public final TableField<CrenodebmmeRecord, ULong> ENODEBMME_CRCOLLECTORTASKFILES = createField("enodebmme_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.crenodebmme.enodebmme_date</code>.
     */
    public final TableField<CrenodebmmeRecord, Integer> ENODEBMME_DATE = createField("enodebmme_date", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crenodebmme.enodebmme_vendor</code>.
     */
    public final TableField<CrenodebmmeRecord, Integer> ENODEBMME_VENDOR = createField("enodebmme_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crenodebmme.enodebmme_code</code>.
     */
    public final TableField<CrenodebmmeRecord, String> ENODEBMME_CODE = createField("enodebmme_code", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crenodebmme.enodebmme_enodebid</code>.
     */
    public final TableField<CrenodebmmeRecord, Integer> ENODEBMME_ENODEBID = createField("enodebmme_enodebid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crenodebmme.enodebmme_enodebipaddress</code>.
     */
    public final TableField<CrenodebmmeRecord, String> ENODEBMME_ENODEBIPADDRESS = createField("enodebmme_enodebipaddress", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crenodebmme.enodebmme_mmes</code>.
     */
    public final TableField<CrenodebmmeRecord, String> ENODEBMME_MMES = createField("enodebmme_mmes", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>chrono.crenodebmme</code> table reference
     */
    public Crenodebmme() {
        this(DSL.name("crenodebmme"), null);
    }

    /**
     * Create an aliased <code>chrono.crenodebmme</code> table reference
     */
    public Crenodebmme(String alias) {
        this(DSL.name(alias), CRENODEBMME);
    }

    /**
     * Create an aliased <code>chrono.crenodebmme</code> table reference
     */
    public Crenodebmme(Name alias) {
        this(alias, CRENODEBMME);
    }

    private Crenodebmme(Name alias, Table<CrenodebmmeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crenodebmme(Name alias, Table<CrenodebmmeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrenodebmmeRecord> getPrimaryKey() {
        return Keys.KEY_CRENODEBMME_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrenodebmmeRecord>> getKeys() {
        return Arrays.<UniqueKey<CrenodebmmeRecord>>asList(Keys.KEY_CRENODEBMME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crenodebmme as(String alias) {
        return new Crenodebmme(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crenodebmme as(Name alias) {
        return new Crenodebmme(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crenodebmme rename(String name) {
        return new Crenodebmme(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crenodebmme rename(Name name) {
        return new Crenodebmme(name, null);
    }
}
