/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crnodetype;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrnodetypeRecord extends UpdatableRecordImpl<CrnodetypeRecord> implements Record5<Integer, String, String, String, String> {

    private static final long serialVersionUID = -1061657914;

    /**
     * Setter for <code>chrono.crnodetype.nodetype_id</code>.
     */
    public void setNodetypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crnodetype.nodetype_id</code>.
     */
    public Integer getNodetypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crnodetype.nodetype_code</code>.
     */
    public void setNodetypeCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crnodetype.nodetype_code</code>.
     */
    public String getNodetypeCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chrono.crnodetype.nodetype_name</code>.
     */
    public void setNodetypeName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crnodetype.nodetype_name</code>.
     */
    public String getNodetypeName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chrono.crnodetype.nodetype_desc</code>.
     */
    public void setNodetypeDesc(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crnodetype.nodetype_desc</code>.
     */
    public String getNodetypeDesc() {
        return (String) get(3);
    }

    /**
     * Setter for <code>chrono.crnodetype.nodetype_sample</code>.
     */
    public void setNodetypeSample(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crnodetype.nodetype_sample</code>.
     */
    public String getNodetypeSample() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crnodetype.CRNODETYPE.NODETYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Crnodetype.CRNODETYPE.NODETYPE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Crnodetype.CRNODETYPE.NODETYPE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Crnodetype.CRNODETYPE.NODETYPE_DESC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Crnodetype.CRNODETYPE.NODETYPE_SAMPLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getNodetypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getNodetypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getNodetypeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getNodetypeDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getNodetypeSample();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getNodetypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNodetypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNodetypeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getNodetypeDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getNodetypeSample();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodetypeRecord value1(Integer value) {
        setNodetypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodetypeRecord value2(String value) {
        setNodetypeCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodetypeRecord value3(String value) {
        setNodetypeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodetypeRecord value4(String value) {
        setNodetypeDesc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodetypeRecord value5(String value) {
        setNodetypeSample(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodetypeRecord values(Integer value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrnodetypeRecord
     */
    public CrnodetypeRecord() {
        super(Crnodetype.CRNODETYPE);
    }

    /**
     * Create a detached, initialised CrnodetypeRecord
     */
    public CrnodetypeRecord(Integer nodetypeId, String nodetypeCode, String nodetypeName, String nodetypeDesc, String nodetypeSample) {
        super(Crnodetype.CRNODETYPE);

        set(0, nodetypeId);
        set(1, nodetypeCode);
        set(2, nodetypeName);
        set(3, nodetypeDesc);
        set(4, nodetypeSample);
    }
}
