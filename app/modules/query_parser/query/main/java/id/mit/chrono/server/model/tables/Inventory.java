/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.InventoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Inventory extends TableImpl<InventoryRecord> {

    private static final long serialVersionUID = -2062346055;

    /**
     * The reference instance of <code>chrono.inventory</code>
     */
    public static final Inventory INVENTORY = new Inventory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InventoryRecord> getRecordType() {
        return InventoryRecord.class;
    }

    /**
     * The column <code>chrono.inventory.inventory_id</code>.
     */
    public final TableField<InventoryRecord, UInteger> INVENTORY_ID = createField("inventory_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.inventory.inventory_collectortaskfiles</code>.
     */
    public final TableField<InventoryRecord, Integer> INVENTORY_COLLECTORTASKFILES = createField("inventory_collectortaskfiles", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.inventory.inventory_inventorytype</code>.
     */
    public final TableField<InventoryRecord, Integer> INVENTORY_INVENTORYTYPE = createField("inventory_inventorytype", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.inventory.inventory_site</code>.
     */
    public final TableField<InventoryRecord, Integer> INVENTORY_SITE = createField("inventory_site", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.inventory.inventory_brand</code>.
     */
    public final TableField<InventoryRecord, Integer> INVENTORY_BRAND = createField("inventory_brand", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.inventory.inventory_serialnumber</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_SERIALNUMBER = createField("inventory_serialnumber", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.inventory.inventory_sitename</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_SITENAME = createField("inventory_sitename", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.inventory.inventory_siteid</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_SITEID = createField("inventory_siteid", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.inventory.inventory_devicename</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_DEVICENAME = createField("inventory_devicename", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.inventory.inventory_module</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_MODULE = createField("inventory_module", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.inventory.inventory_region</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_REGION = createField("inventory_region", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.inventory.inventory_pid</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_PID = createField("inventory_pid", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.inventory.inventory_vid</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_VID = createField("inventory_vid", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.inventory.inventory_latitude</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_LATITUDE = createField("inventory_latitude", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.inventory.inventory_longitude</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_LONGITUDE = createField("inventory_longitude", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.inventory.inventory_description</code>.
     */
    public final TableField<InventoryRecord, String> INVENTORY_DESCRIPTION = createField("inventory_description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.inventory.inventory_inserttime</code>.
     */
    public final TableField<InventoryRecord, Timestamp> INVENTORY_INSERTTIME = createField("inventory_inserttime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>chrono.inventory</code> table reference
     */
    public Inventory() {
        this(DSL.name("inventory"), null);
    }

    /**
     * Create an aliased <code>chrono.inventory</code> table reference
     */
    public Inventory(String alias) {
        this(DSL.name(alias), INVENTORY);
    }

    /**
     * Create an aliased <code>chrono.inventory</code> table reference
     */
    public Inventory(Name alias) {
        this(alias, INVENTORY);
    }

    private Inventory(Name alias, Table<InventoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Inventory(Name alias, Table<InventoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InventoryRecord> getPrimaryKey() {
        return Keys.KEY_INVENTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InventoryRecord>> getKeys() {
        return Arrays.<UniqueKey<InventoryRecord>>asList(Keys.KEY_INVENTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Inventory as(String alias) {
        return new Inventory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Inventory as(Name alias) {
        return new Inventory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Inventory rename(String name) {
        return new Inventory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Inventory rename(Name name) {
        return new Inventory(name, null);
    }
}
