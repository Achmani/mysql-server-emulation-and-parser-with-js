/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.HwbscbrdRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hwbscbrd extends TableImpl<HwbscbrdRecord> {

    private static final long serialVersionUID = -1970331251;

    /**
     * The reference instance of <code>chrono.hwbscbrd</code>
     */
    public static final Hwbscbrd HWBSCBRD = new Hwbscbrd();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HwbscbrdRecord> getRecordType() {
        return HwbscbrdRecord.class;
    }

    /**
     * The column <code>chrono.hwbscbrd.hwbscbrd_id</code>.
     */
    public final TableField<HwbscbrdRecord, ULong> HWBSCBRD_ID = createField("hwbscbrd_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbscbrd.hwbscbrd_crcollectortaskfiles</code>.
     */
    public final TableField<HwbscbrdRecord, ULong> HWBSCBRD_CRCOLLECTORTASKFILES = createField("hwbscbrd_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.hwbscbrd.hwbscbrd_date</code>.
     */
    public final TableField<HwbscbrdRecord, UInteger> HWBSCBRD_DATE = createField("hwbscbrd_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbscbrd.hwbscbrd_datefrom</code>.
     */
    public final TableField<HwbscbrdRecord, Integer> HWBSCBRD_DATEFROM = createField("hwbscbrd_datefrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbscbrd.hwbscbrd_hwbsc</code>.
     */
    public final TableField<HwbscbrdRecord, ULong> HWBSCBRD_HWBSC = createField("hwbscbrd_hwbsc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbscbrd.EXPORTTIME</code>.
     */
    public final TableField<HwbscbrdRecord, String> EXPORTTIME = createField("EXPORTTIME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbscbrd.SRN</code>.
     */
    public final TableField<HwbscbrdRecord, String> SRN = createField("SRN", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwbscbrd.SN</code>.
     */
    public final TableField<HwbscbrdRecord, String> SN = createField("SN", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwbscbrd.BRDCLASS</code>.
     */
    public final TableField<HwbscbrdRecord, String> BRDCLASS = createField("BRDCLASS", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.hwbscbrd.BRDTYPE</code>.
     */
    public final TableField<HwbscbrdRecord, String> BRDTYPE = createField("BRDTYPE", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.hwbscbrd.LGCAPPTYPE</code>.
     */
    public final TableField<HwbscbrdRecord, String> LGCAPPTYPE = createField("LGCAPPTYPE", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.hwbscbrd.RED</code>.
     */
    public final TableField<HwbscbrdRecord, String> RED = createField("RED", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwbscbrd.MPUSUBRACK</code>.
     */
    public final TableField<HwbscbrdRecord, String> MPUSUBRACK = createField("MPUSUBRACK", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwbscbrd.MPUSLOT</code>.
     */
    public final TableField<HwbscbrdRecord, String> MPUSLOT = createField("MPUSLOT", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwbscbrd.ISTCBRD</code>.
     */
    public final TableField<HwbscbrdRecord, String> ISTCBRD = createField("ISTCBRD", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwbscbrd.AUTOADDSRCON</code>.
     */
    public final TableField<HwbscbrdRecord, String> AUTOADDSRCON = createField("AUTOADDSRCON", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwbscbrd.LGCUSAGETYPE</code>.
     */
    public final TableField<HwbscbrdRecord, String> LGCUSAGETYPE = createField("LGCUSAGETYPE", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * Create a <code>chrono.hwbscbrd</code> table reference
     */
    public Hwbscbrd() {
        this(DSL.name("hwbscbrd"), null);
    }

    /**
     * Create an aliased <code>chrono.hwbscbrd</code> table reference
     */
    public Hwbscbrd(String alias) {
        this(DSL.name(alias), HWBSCBRD);
    }

    /**
     * Create an aliased <code>chrono.hwbscbrd</code> table reference
     */
    public Hwbscbrd(Name alias) {
        this(alias, HWBSCBRD);
    }

    private Hwbscbrd(Name alias, Table<HwbscbrdRecord> aliased) {
        this(alias, aliased, null);
    }

    private Hwbscbrd(Name alias, Table<HwbscbrdRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HWBSCBRD_HWBSCBRD_DATE, Indexes.HWBSCBRD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HwbscbrdRecord> getPrimaryKey() {
        return Keys.KEY_HWBSCBRD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HwbscbrdRecord>> getKeys() {
        return Arrays.<UniqueKey<HwbscbrdRecord>>asList(Keys.KEY_HWBSCBRD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwbscbrd as(String alias) {
        return new Hwbscbrd(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwbscbrd as(Name alias) {
        return new Hwbscbrd(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwbscbrd rename(String name) {
        return new Hwbscbrd(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwbscbrd rename(Name name) {
        return new Hwbscbrd(name, null);
    }
}
