/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.TempCrsiteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TempCrsite extends TableImpl<TempCrsiteRecord> {

    private static final long serialVersionUID = -634667748;

    /**
     * The reference instance of <code>chrono.temp_crsite</code>
     */
    public static final TempCrsite TEMP_CRSITE = new TempCrsite();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TempCrsiteRecord> getRecordType() {
        return TempCrsiteRecord.class;
    }

    /**
     * The column <code>chrono.temp_crsite.regional</code>.
     */
    public final TableField<TempCrsiteRecord, String> REGIONAL = createField("regional", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.temp_crsite.siteareaid</code>.
     */
    public final TableField<TempCrsiteRecord, Integer> SITEAREAID = createField("siteareaid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.temp_crsite.area</code>.
     */
    public final TableField<TempCrsiteRecord, String> AREA = createField("area", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.temp_crsite.siteid</code>.
     */
    public final TableField<TempCrsiteRecord, String> SITEID = createField("siteid", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.temp_crsite.sitename</code>.
     */
    public final TableField<TempCrsiteRecord, String> SITENAME = createField("sitename", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.temp_crsite.nsa</code>.
     */
    public final TableField<TempCrsiteRecord, String> NSA = createField("nsa", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.rtp</code>.
     */
    public final TableField<TempCrsiteRecord, String> RTP = createField("rtp", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.rtpalias</code>.
     */
    public final TableField<TempCrsiteRecord, String> RTPALIAS = createField("rtpalias", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.longitude</code>.
     */
    public final TableField<TempCrsiteRecord, String> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.latitude</code>.
     */
    public final TableField<TempCrsiteRecord, String> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.alamat</code>.
     */
    public final TableField<TempCrsiteRecord, String> ALAMAT = createField("alamat", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.temp_crsite.kelurahan</code>.
     */
    public final TableField<TempCrsiteRecord, String> KELURAHAN = createField("kelurahan", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.kecamatan</code>.
     */
    public final TableField<TempCrsiteRecord, String> KECAMATAN = createField("kecamatan", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.kota</code>.
     */
    public final TableField<TempCrsiteRecord, String> KOTA = createField("kota", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.provinsi</code>.
     */
    public final TableField<TempCrsiteRecord, String> PROVINSI = createField("provinsi", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_crsite.exist</code>.
     */
    public final TableField<TempCrsiteRecord, Integer> EXIST = createField("exist", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.temp_crsite.test</code>.
     */
    public final TableField<TempCrsiteRecord, Integer> TEST = createField("test", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.temp_crsite.flag</code>.
     */
    public final TableField<TempCrsiteRecord, Integer> FLAG = createField("flag", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>chrono.temp_crsite</code> table reference
     */
    public TempCrsite() {
        this(DSL.name("temp_crsite"), null);
    }

    /**
     * Create an aliased <code>chrono.temp_crsite</code> table reference
     */
    public TempCrsite(String alias) {
        this(DSL.name(alias), TEMP_CRSITE);
    }

    /**
     * Create an aliased <code>chrono.temp_crsite</code> table reference
     */
    public TempCrsite(Name alias) {
        this(alias, TEMP_CRSITE);
    }

    private TempCrsite(Name alias, Table<TempCrsiteRecord> aliased) {
        this(alias, aliased, null);
    }

    private TempCrsite(Name alias, Table<TempCrsiteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TempCrsiteRecord>> getKeys() {
        return Arrays.<UniqueKey<TempCrsiteRecord>>asList(Keys.KEY_TEMP_CRSITE_SITEID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TempCrsite as(String alias) {
        return new TempCrsite(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TempCrsite as(Name alias) {
        return new TempCrsite(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TempCrsite rename(String name) {
        return new TempCrsite(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TempCrsite rename(Name name) {
        return new TempCrsite(name, null);
    }
}
