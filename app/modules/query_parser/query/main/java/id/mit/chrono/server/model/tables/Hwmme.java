/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.HwmmeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hwmme extends TableImpl<HwmmeRecord> {

    private static final long serialVersionUID = 631615295;

    /**
     * The reference instance of <code>chrono.hwmme</code>
     */
    public static final Hwmme HWMME = new Hwmme();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HwmmeRecord> getRecordType() {
        return HwmmeRecord.class;
    }

    /**
     * The column <code>chrono.hwmme.hwmme_id</code>.
     */
    public final TableField<HwmmeRecord, ULong> HWMME_ID = createField("hwmme_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwmme.hwmme_crcollectortaskfiles</code>.
     */
    public final TableField<HwmmeRecord, ULong> HWMME_CRCOLLECTORTASKFILES = createField("hwmme_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.hwmme.hwmme_date</code>.
     */
    public final TableField<HwmmeRecord, UInteger> HWMME_DATE = createField("hwmme_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwmme.hwmme_datefrom</code>.
     */
    public final TableField<HwmmeRecord, Integer> HWMME_DATEFROM = createField("hwmme_datefrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwmme.hwmme_node</code>.
     */
    public final TableField<HwmmeRecord, Integer> HWMME_NODE = createField("hwmme_node", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwmme.hwmme_vendor</code>.
     */
    public final TableField<HwmmeRecord, Integer> HWMME_VENDOR = createField("hwmme_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwmme.MMENAME</code>.
     */
    public final TableField<HwmmeRecord, String> MMENAME = createField("MMENAME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwmme.TOTALENODEB</code>.
     */
    public final TableField<HwmmeRecord, Integer> TOTALENODEB = createField("TOTALENODEB", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwmme.hwmme_remark</code>.
     */
    public final TableField<HwmmeRecord, String> HWMME_REMARK = createField("hwmme_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>chrono.hwmme</code> table reference
     */
    public Hwmme() {
        this(DSL.name("hwmme"), null);
    }

    /**
     * Create an aliased <code>chrono.hwmme</code> table reference
     */
    public Hwmme(String alias) {
        this(DSL.name(alias), HWMME);
    }

    /**
     * Create an aliased <code>chrono.hwmme</code> table reference
     */
    public Hwmme(Name alias) {
        this(alias, HWMME);
    }

    private Hwmme(Name alias, Table<HwmmeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Hwmme(Name alias, Table<HwmmeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HwmmeRecord> getPrimaryKey() {
        return Keys.KEY_HWMME_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HwmmeRecord>> getKeys() {
        return Arrays.<UniqueKey<HwmmeRecord>>asList(Keys.KEY_HWMME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwmme as(String alias) {
        return new Hwmme(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwmme as(Name alias) {
        return new Hwmme(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwmme rename(String name) {
        return new Hwmme(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwmme rename(Name name) {
        return new Hwmme(name, null);
    }
}
