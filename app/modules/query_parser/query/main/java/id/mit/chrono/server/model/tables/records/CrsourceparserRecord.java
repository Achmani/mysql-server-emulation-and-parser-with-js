/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crsourceparser;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrsourceparserRecord extends UpdatableRecordImpl<CrsourceparserRecord> implements Record10<Integer, Integer, Integer, Integer, String, String, String, String, String, Byte> {

    private static final long serialVersionUID = 1567368942;

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_id</code>.
     */
    public void setSourceparserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_id</code>.
     */
    public Integer getSourceparserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_vendor</code>.
     */
    public void setSourceparserVendor(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_vendor</code>.
     */
    public Integer getSourceparserVendor() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_datagroup</code>.
     */
    public void setSourceparserDatagroup(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_datagroup</code>.
     */
    public Integer getSourceparserDatagroup() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_datasourcetype</code>.
     */
    public void setSourceparserDatasourcetype(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_datasourcetype</code>.
     */
    public Integer getSourceparserDatasourcetype() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_pattern</code>.
     */
    public void setSourceparserPattern(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_pattern</code>.
     */
    public String getSourceparserPattern() {
        return (String) get(4);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_identitypattern</code>.
     */
    public void setSourceparserIdentitypattern(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_identitypattern</code>.
     */
    public String getSourceparserIdentitypattern() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_dependencies</code>.
     */
    public void setSourceparserDependencies(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_dependencies</code>.
     */
    public String getSourceparserDependencies() {
        return (String) get(6);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_class</code>.
     */
    public void setSourceparserClass(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_class</code>.
     */
    public String getSourceparserClass() {
        return (String) get(7);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_description</code>.
     */
    public void setSourceparserDescription(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_description</code>.
     */
    public String getSourceparserDescription() {
        return (String) get(8);
    }

    /**
     * Setter for <code>chrono.crsourceparser.sourceparser_enabled</code>.
     */
    public void setSourceparserEnabled(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.crsourceparser.sourceparser_enabled</code>.
     */
    public Byte getSourceparserEnabled() {
        return (Byte) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Integer, Integer, String, String, String, String, String, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Integer, Integer, String, String, String, String, String, Byte> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_VENDOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_DATAGROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_DATASOURCETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_PATTERN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_IDENTITYPATTERN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_DEPENDENCIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return Crsourceparser.CRSOURCEPARSER.SOURCEPARSER_ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getSourceparserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getSourceparserVendor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getSourceparserDatagroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getSourceparserDatasourcetype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSourceparserPattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSourceparserIdentitypattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getSourceparserDependencies();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSourceparserClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getSourceparserDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component10() {
        return getSourceparserEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSourceparserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getSourceparserVendor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSourceparserDatagroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getSourceparserDatasourcetype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSourceparserPattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSourceparserIdentitypattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSourceparserDependencies();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSourceparserClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getSourceparserDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getSourceparserEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value1(Integer value) {
        setSourceparserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value2(Integer value) {
        setSourceparserVendor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value3(Integer value) {
        setSourceparserDatagroup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value4(Integer value) {
        setSourceparserDatasourcetype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value5(String value) {
        setSourceparserPattern(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value6(String value) {
        setSourceparserIdentitypattern(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value7(String value) {
        setSourceparserDependencies(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value8(String value) {
        setSourceparserClass(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value9(String value) {
        setSourceparserDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord value10(Byte value) {
        setSourceparserEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrsourceparserRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, String value6, String value7, String value8, String value9, Byte value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrsourceparserRecord
     */
    public CrsourceparserRecord() {
        super(Crsourceparser.CRSOURCEPARSER);
    }

    /**
     * Create a detached, initialised CrsourceparserRecord
     */
    public CrsourceparserRecord(Integer sourceparserId, Integer sourceparserVendor, Integer sourceparserDatagroup, Integer sourceparserDatasourcetype, String sourceparserPattern, String sourceparserIdentitypattern, String sourceparserDependencies, String sourceparserClass, String sourceparserDescription, Byte sourceparserEnabled) {
        super(Crsourceparser.CRSOURCEPARSER);

        set(0, sourceparserId);
        set(1, sourceparserVendor);
        set(2, sourceparserDatagroup);
        set(3, sourceparserDatasourcetype);
        set(4, sourceparserPattern);
        set(5, sourceparserIdentitypattern);
        set(6, sourceparserDependencies);
        set(7, sourceparserClass);
        set(8, sourceparserDescription);
        set(9, sourceparserEnabled);
    }
}
