/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrsiteflagsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crsiteflags extends TableImpl<CrsiteflagsRecord> {

    private static final long serialVersionUID = -2083886285;

    /**
     * The reference instance of <code>chrono.crsiteflags</code>
     */
    public static final Crsiteflags CRSITEFLAGS = new Crsiteflags();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrsiteflagsRecord> getRecordType() {
        return CrsiteflagsRecord.class;
    }

    /**
     * The column <code>chrono.crsiteflags.site_flags_id</code>.
     */
    public final TableField<CrsiteflagsRecord, Long> SITE_FLAGS_ID = createField("site_flags_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>chrono.crsiteflags.site_id</code>.
     */
    public final TableField<CrsiteflagsRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crsiteflags.site_flags_flag</code>.
     */
    public final TableField<CrsiteflagsRecord, Integer> SITE_FLAGS_FLAG = createField("site_flags_flag", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crsiteflags.site_flags_value</code>.
     */
    public final TableField<CrsiteflagsRecord, String> SITE_FLAGS_VALUE = createField("site_flags_value", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crsiteflags.site_flags_lastupdate</code>.
     */
    public final TableField<CrsiteflagsRecord, Timestamp> SITE_FLAGS_LASTUPDATE = createField("site_flags_lastupdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>chrono.crsiteflags</code> table reference
     */
    public Crsiteflags() {
        this(DSL.name("crsiteflags"), null);
    }

    /**
     * Create an aliased <code>chrono.crsiteflags</code> table reference
     */
    public Crsiteflags(String alias) {
        this(DSL.name(alias), CRSITEFLAGS);
    }

    /**
     * Create an aliased <code>chrono.crsiteflags</code> table reference
     */
    public Crsiteflags(Name alias) {
        this(alias, CRSITEFLAGS);
    }

    private Crsiteflags(Name alias, Table<CrsiteflagsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crsiteflags(Name alias, Table<CrsiteflagsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrsiteflagsRecord> getPrimaryKey() {
        return Keys.KEY_CRSITEFLAGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrsiteflagsRecord>> getKeys() {
        return Arrays.<UniqueKey<CrsiteflagsRecord>>asList(Keys.KEY_CRSITEFLAGS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crsiteflags as(String alias) {
        return new Crsiteflags(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crsiteflags as(Name alias) {
        return new Crsiteflags(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crsiteflags rename(String name) {
        return new Crsiteflags(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crsiteflags rename(Name name) {
        return new Crsiteflags(name, null);
    }
}
