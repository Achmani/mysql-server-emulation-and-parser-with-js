/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Nokbts;

import javax.annotation.Generated;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NokbtsRecord extends UpdatableRecordImpl<NokbtsRecord> {

    private static final long serialVersionUID = -318674457;

    /**
     * Setter for <code>chrono.nokbts.nokbts_id</code>.
     */
    public void setNokbtsId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_id</code>.
     */
    public ULong getNokbtsId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_crcollectortaskfiles</code>.
     */
    public void setNokbtsCrcollectortaskfiles(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_crcollectortaskfiles</code>.
     */
    public ULong getNokbtsCrcollectortaskfiles() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_date</code>.
     */
    public void setNokbtsDate(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_date</code>.
     */
    public UInteger getNokbtsDate() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_datefrom</code>.
     */
    public void setNokbtsDatefrom(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_datefrom</code>.
     */
    public UInteger getNokbtsDatefrom() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_nokbsc</code>.
     */
    public void setNokbtsNokbsc(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_nokbsc</code>.
     */
    public ULong getNokbtsNokbsc() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_node</code>.
     */
    public void setNokbtsNode(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_node</code>.
     */
    public Integer getNokbtsNode() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_nodephysical</code>.
     */
    public void setNokbtsNodephysical(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_nodephysical</code>.
     */
    public Integer getNokbtsNodephysical() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_nodestatus</code>.
     */
    public void setNokbtsNodestatus(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_nodestatus</code>.
     */
    public Integer getNokbtsNodestatus() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_revenueclass</code>.
     */
    public void setNokbtsRevenueclass(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_revenueclass</code>.
     */
    public Integer getNokbtsRevenueclass() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_vendor</code>.
     */
    public void setNokbtsVendor(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_vendor</code>.
     */
    public Integer getNokbtsVendor() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_namingvalid</code>.
     */
    public void setNokbtsNamingvalid(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_namingvalid</code>.
     */
    public Byte getNokbtsNamingvalid() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>chrono.nokbts.TOTALCELL</code>.
     */
    public void setTotalcell(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>chrono.nokbts.TOTALCELL</code>.
     */
    public Integer getTotalcell() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>chrono.nokbts.TOTALTRX</code>.
     */
    public void setTotaltrx(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>chrono.nokbts.TOTALTRX</code>.
     */
    public Integer getTotaltrx() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>chrono.nokbts.BTSNAME</code>.
     */
    public void setBtsname(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>chrono.nokbts.BTSNAME</code>.
     */
    public String getBtsname() {
        return (String) get(13);
    }

    /**
     * Setter for <code>chrono.nokbts.BTSID</code>.
     */
    public void setBtsid(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>chrono.nokbts.BTSID</code>.
     */
    public Integer getBtsid() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>chrono.nokbts.distName</code>.
     */
    public void setDistname(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>chrono.nokbts.distName</code>.
     */
    public String getDistname() {
        return (String) get(15);
    }

    /**
     * Setter for <code>chrono.nokbts.version</code>.
     */
    public void setVersion(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>chrono.nokbts.version</code>.
     */
    public String getVersion() {
        return (String) get(16);
    }

    /**
     * Setter for <code>chrono.nokbts.linkedMrsiteDN</code>.
     */
    public void setLinkedmrsitedn(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>chrono.nokbts.linkedMrsiteDN</code>.
     */
    public String getLinkedmrsitedn() {
        return (String) get(17);
    }

    /**
     * Setter for <code>chrono.nokbts.siteId</code>.
     */
    public void setSiteid(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>chrono.nokbts.siteId</code>.
     */
    public String getSiteid() {
        return (String) get(18);
    }

    /**
     * Setter for <code>chrono.nokbts.siteCId</code>.
     */
    public void setSitecid(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>chrono.nokbts.siteCId</code>.
     */
    public String getSitecid() {
        return (String) get(19);
    }

    /**
     * Setter for <code>chrono.nokbts.name</code>.
     */
    public void setName(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>chrono.nokbts.name</code>.
     */
    public String getName() {
        return (String) get(20);
    }

    /**
     * Setter for <code>chrono.nokbts.abisInterfaceConnectionType</code>.
     */
    public void setAbisinterfaceconnectiontype(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>chrono.nokbts.abisInterfaceConnectionType</code>.
     */
    public String getAbisinterfaceconnectiontype() {
        return (String) get(21);
    }

    /**
     * Setter for <code>chrono.nokbts.adminState</code>.
     */
    public void setAdminstate(String value) {
        set(22, value);
    }

    /**
     * Getter for <code>chrono.nokbts.adminState</code>.
     */
    public String getAdminstate() {
        return (String) get(22);
    }

    /**
     * Setter for <code>chrono.nokbts.autoConfig</code>.
     */
    public void setAutoconfig(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>chrono.nokbts.autoConfig</code>.
     */
    public String getAutoconfig() {
        return (String) get(23);
    }

    /**
     * Setter for <code>chrono.nokbts.bcfType</code>.
     */
    public void setBcftype(String value) {
        set(24, value);
    }

    /**
     * Getter for <code>chrono.nokbts.bcfType</code>.
     */
    public String getBcftype() {
        return (String) get(24);
    }

    /**
     * Setter for <code>chrono.nokbts.bcfUpToDate</code>.
     */
    public void setBcfuptodate(String value) {
        set(25, value);
    }

    /**
     * Getter for <code>chrono.nokbts.bcfUpToDate</code>.
     */
    public String getBcfuptodate() {
        return (String) get(25);
    }

    /**
     * Setter for <code>chrono.nokbts.btsCuPlaneIpAddress</code>.
     */
    public void setBtscuplaneipaddress(String value) {
        set(26, value);
    }

    /**
     * Getter for <code>chrono.nokbts.btsCuPlaneIpAddress</code>.
     */
    public String getBtscuplaneipaddress() {
        return (String) get(26);
    }

    /**
     * Setter for <code>chrono.nokbts.btsIpv4SubnetMasklengthCUplane</code>.
     */
    public void setBtsipv4subnetmasklengthcuplane(String value) {
        set(27, value);
    }

    /**
     * Getter for <code>chrono.nokbts.btsIpv4SubnetMasklengthCUplane</code>.
     */
    public String getBtsipv4subnetmasklengthcuplane() {
        return (String) get(27);
    }

    /**
     * Setter for <code>chrono.nokbts.btsIpv4SubnetMasklengthMplane</code>.
     */
    public void setBtsipv4subnetmasklengthmplane(String value) {
        set(28, value);
    }

    /**
     * Getter for <code>chrono.nokbts.btsIpv4SubnetMasklengthMplane</code>.
     */
    public String getBtsipv4subnetmasklengthmplane() {
        return (String) get(28);
    }

    /**
     * Setter for <code>chrono.nokbts.btsMPlaneIpAddress</code>.
     */
    public void setBtsmplaneipaddress(String value) {
        set(29, value);
    }

    /**
     * Getter for <code>chrono.nokbts.btsMPlaneIpAddress</code>.
     */
    public String getBtsmplaneipaddress() {
        return (String) get(29);
    }

    /**
     * Setter for <code>chrono.nokbts.btsSiteSubtype</code>.
     */
    public void setBtssitesubtype(String value) {
        set(30, value);
    }

    /**
     * Getter for <code>chrono.nokbts.btsSiteSubtype</code>.
     */
    public String getBtssitesubtype() {
        return (String) get(30);
    }

    /**
     * Setter for <code>chrono.nokbts.clockSource</code>.
     */
    public void setClocksource(String value) {
        set(31, value);
    }

    /**
     * Getter for <code>chrono.nokbts.clockSource</code>.
     */
    public String getClocksource() {
        return (String) get(31);
    }

    /**
     * Setter for <code>chrono.nokbts.lapdLinkName</code>.
     */
    public void setLapdlinkname(String value) {
        set(32, value);
    }

    /**
     * Getter for <code>chrono.nokbts.lapdLinkName</code>.
     */
    public String getLapdlinkname() {
        return (String) get(32);
    }

    /**
     * Setter for <code>chrono.nokbts.lapdLinkNumber</code>.
     */
    public void setLapdlinknumber(String value) {
        set(33, value);
    }

    /**
     * Getter for <code>chrono.nokbts.lapdLinkNumber</code>.
     */
    public String getLapdlinknumber() {
        return (String) get(33);
    }

    /**
     * Setter for <code>chrono.nokbts.masterClockBcf</code>.
     */
    public void setMasterclockbcf(String value) {
        set(34, value);
    }

    /**
     * Getter for <code>chrono.nokbts.masterClockBcf</code>.
     */
    public String getMasterclockbcf() {
        return (String) get(34);
    }

    /**
     * Setter for <code>chrono.nokbts.usedCsUdpMuxPort</code>.
     */
    public void setUsedcsudpmuxport(String value) {
        set(35, value);
    }

    /**
     * Getter for <code>chrono.nokbts.usedCsUdpMuxPort</code>.
     */
    public String getUsedcsudpmuxport() {
        return (String) get(35);
    }

    /**
     * Setter for <code>chrono.nokbts.usedPsUdpMuxPort</code>.
     */
    public void setUsedpsudpmuxport(String value) {
        set(36, value);
    }

    /**
     * Getter for <code>chrono.nokbts.usedPsUdpMuxPort</code>.
     */
    public String getUsedpsudpmuxport() {
        return (String) get(36);
    }

    /**
     * Setter for <code>chrono.nokbts.vlanId</code>.
     */
    public void setVlanid(String value) {
        set(37, value);
    }

    /**
     * Getter for <code>chrono.nokbts.vlanId</code>.
     */
    public String getVlanid() {
        return (String) get(37);
    }

    /**
     * Setter for <code>chrono.nokbts.longitude</code>.
     */
    public void setLongitude(String value) {
        set(38, value);
    }

    /**
     * Getter for <code>chrono.nokbts.longitude</code>.
     */
    public String getLongitude() {
        return (String) get(38);
    }

    /**
     * Setter for <code>chrono.nokbts.latitude</code>.
     */
    public void setLatitude(String value) {
        set(39, value);
    }

    /**
     * Getter for <code>chrono.nokbts.latitude</code>.
     */
    public String getLatitude() {
        return (String) get(39);
    }

    /**
     * Setter for <code>chrono.nokbts.lon</code>.
     */
    public void setLon(Double value) {
        set(40, value);
    }

    /**
     * Getter for <code>chrono.nokbts.lon</code>.
     */
    public Double getLon() {
        return (Double) get(40);
    }

    /**
     * Setter for <code>chrono.nokbts.lat</code>.
     */
    public void setLat(Double value) {
        set(41, value);
    }

    /**
     * Getter for <code>chrono.nokbts.lat</code>.
     */
    public Double getLat() {
        return (Double) get(41);
    }

    /**
     * Setter for <code>chrono.nokbts.streetAddress</code>.
     */
    public void setStreetaddress(String value) {
        set(42, value);
    }

    /**
     * Getter for <code>chrono.nokbts.streetAddress</code>.
     */
    public String getStreetaddress() {
        return (String) get(42);
    }

    /**
     * Setter for <code>chrono.nokbts.nokbts_remark</code>.
     */
    public void setNokbtsRemark(String value) {
        set(43, value);
    }

    /**
     * Getter for <code>chrono.nokbts.nokbts_remark</code>.
     */
    public String getNokbtsRemark() {
        return (String) get(43);
    }

    /**
     * Setter for <code>chrono.nokbts.EXTPROP1</code>.
     */
    public void setExtprop1(Integer value) {
        set(44, value);
    }

    /**
     * Getter for <code>chrono.nokbts.EXTPROP1</code>.
     */
    public Integer getExtprop1() {
        return (Integer) get(44);
    }

    /**
     * Setter for <code>chrono.nokbts.EXTPROP2</code>.
     */
    public void setExtprop2(String value) {
        set(45, value);
    }

    /**
     * Getter for <code>chrono.nokbts.EXTPROP2</code>.
     */
    public String getExtprop2() {
        return (String) get(45);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<ULong, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NokbtsRecord
     */
    public NokbtsRecord() {
        super(Nokbts.NOKBTS);
    }

    /**
     * Create a detached, initialised NokbtsRecord
     */
    public NokbtsRecord(ULong nokbtsId, ULong nokbtsCrcollectortaskfiles, UInteger nokbtsDate, UInteger nokbtsDatefrom, ULong nokbtsNokbsc, Integer nokbtsNode, Integer nokbtsNodephysical, Integer nokbtsNodestatus, Integer nokbtsRevenueclass, Integer nokbtsVendor, Byte nokbtsNamingvalid, Integer totalcell, Integer totaltrx, String btsname, Integer btsid, String distname, String version, String linkedmrsitedn, String siteid, String sitecid, String name, String abisinterfaceconnectiontype, String adminstate, String autoconfig, String bcftype, String bcfuptodate, String btscuplaneipaddress, String btsipv4subnetmasklengthcuplane, String btsipv4subnetmasklengthmplane, String btsmplaneipaddress, String btssitesubtype, String clocksource, String lapdlinkname, String lapdlinknumber, String masterclockbcf, String usedcsudpmuxport, String usedpsudpmuxport, String vlanid, String longitude, String latitude, Double lon, Double lat, String streetaddress, String nokbtsRemark, Integer extprop1, String extprop2) {
        super(Nokbts.NOKBTS);

        set(0, nokbtsId);
        set(1, nokbtsCrcollectortaskfiles);
        set(2, nokbtsDate);
        set(3, nokbtsDatefrom);
        set(4, nokbtsNokbsc);
        set(5, nokbtsNode);
        set(6, nokbtsNodephysical);
        set(7, nokbtsNodestatus);
        set(8, nokbtsRevenueclass);
        set(9, nokbtsVendor);
        set(10, nokbtsNamingvalid);
        set(11, totalcell);
        set(12, totaltrx);
        set(13, btsname);
        set(14, btsid);
        set(15, distname);
        set(16, version);
        set(17, linkedmrsitedn);
        set(18, siteid);
        set(19, sitecid);
        set(20, name);
        set(21, abisinterfaceconnectiontype);
        set(22, adminstate);
        set(23, autoconfig);
        set(24, bcftype);
        set(25, bcfuptodate);
        set(26, btscuplaneipaddress);
        set(27, btsipv4subnetmasklengthcuplane);
        set(28, btsipv4subnetmasklengthmplane);
        set(29, btsmplaneipaddress);
        set(30, btssitesubtype);
        set(31, clocksource);
        set(32, lapdlinkname);
        set(33, lapdlinknumber);
        set(34, masterclockbcf);
        set(35, usedcsudpmuxport);
        set(36, usedpsudpmuxport);
        set(37, vlanid);
        set(38, longitude);
        set(39, latitude);
        set(40, lon);
        set(41, lat);
        set(42, streetaddress);
        set(43, nokbtsRemark);
        set(44, extprop1);
        set(45, extprop2);
    }
}
