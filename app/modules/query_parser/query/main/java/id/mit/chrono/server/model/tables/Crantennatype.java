/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrantennatypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crantennatype extends TableImpl<CrantennatypeRecord> {

    private static final long serialVersionUID = -1030239378;

    /**
     * The reference instance of <code>chrono.crantennatype</code>
     */
    public static final Crantennatype CRANTENNATYPE = new Crantennatype();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrantennatypeRecord> getRecordType() {
        return CrantennatypeRecord.class;
    }

    /**
     * The column <code>chrono.crantennatype.antennatype_id</code>.
     */
    public final TableField<CrantennatypeRecord, Integer> ANTENNATYPE_ID = createField("antennatype_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crantennatype.antennatype_code</code>.
     */
    public final TableField<CrantennatypeRecord, String> ANTENNATYPE_CODE = createField("antennatype_code", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crantennatype.antennatype_name</code>.
     */
    public final TableField<CrantennatypeRecord, String> ANTENNATYPE_NAME = createField("antennatype_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>chrono.crantennatype.antennatype_beam</code>.
     */
    public final TableField<CrantennatypeRecord, Double> ANTENNATYPE_BEAM = createField("antennatype_beam", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crantennatype.antennatype_coverage</code>.
     */
    public final TableField<CrantennatypeRecord, Double> ANTENNATYPE_COVERAGE = createField("antennatype_coverage", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>chrono.crantennatype</code> table reference
     */
    public Crantennatype() {
        this(DSL.name("crantennatype"), null);
    }

    /**
     * Create an aliased <code>chrono.crantennatype</code> table reference
     */
    public Crantennatype(String alias) {
        this(DSL.name(alias), CRANTENNATYPE);
    }

    /**
     * Create an aliased <code>chrono.crantennatype</code> table reference
     */
    public Crantennatype(Name alias) {
        this(alias, CRANTENNATYPE);
    }

    private Crantennatype(Name alias, Table<CrantennatypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crantennatype(Name alias, Table<CrantennatypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRANTENNATYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrantennatypeRecord> getPrimaryKey() {
        return Keys.KEY_CRANTENNATYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrantennatypeRecord>> getKeys() {
        return Arrays.<UniqueKey<CrantennatypeRecord>>asList(Keys.KEY_CRANTENNATYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crantennatype as(String alias) {
        return new Crantennatype(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crantennatype as(Name alias) {
        return new Crantennatype(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crantennatype rename(String name) {
        return new Crantennatype(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crantennatype rename(Name name) {
        return new Crantennatype(name, null);
    }
}
