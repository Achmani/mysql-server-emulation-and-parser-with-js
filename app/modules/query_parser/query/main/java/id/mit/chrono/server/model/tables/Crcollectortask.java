/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrcollectortaskRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crcollectortask extends TableImpl<CrcollectortaskRecord> {

    private static final long serialVersionUID = -1967790944;

    /**
     * The reference instance of <code>chrono.crcollectortask</code>
     */
    public static final Crcollectortask CRCOLLECTORTASK = new Crcollectortask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrcollectortaskRecord> getRecordType() {
        return CrcollectortaskRecord.class;
    }

    /**
     * The column <code>chrono.crcollectortask.collectortask_id</code>.
     */
    public final TableField<CrcollectortaskRecord, Integer> COLLECTORTASK_ID = createField("collectortask_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crcollectortask.collectortask_datagroup</code>.
     */
    public final TableField<CrcollectortaskRecord, Integer> COLLECTORTASK_DATAGROUP = createField("collectortask_datagroup", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortask.collectortask_name</code>.
     */
    public final TableField<CrcollectortaskRecord, String> COLLECTORTASK_NAME = createField("collectortask_name", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crcollectortask.collectortask_epoch</code>.
     */
    public final TableField<CrcollectortaskRecord, Integer> COLLECTORTASK_EPOCH = createField("collectortask_epoch", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortask.collectortask_created</code>.
     */
    public final TableField<CrcollectortaskRecord, Integer> COLLECTORTASK_CREATED = createField("collectortask_created", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>chrono.crcollectortask</code> table reference
     */
    public Crcollectortask() {
        this(DSL.name("crcollectortask"), null);
    }

    /**
     * Create an aliased <code>chrono.crcollectortask</code> table reference
     */
    public Crcollectortask(String alias) {
        this(DSL.name(alias), CRCOLLECTORTASK);
    }

    /**
     * Create an aliased <code>chrono.crcollectortask</code> table reference
     */
    public Crcollectortask(Name alias) {
        this(alias, CRCOLLECTORTASK);
    }

    private Crcollectortask(Name alias, Table<CrcollectortaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crcollectortask(Name alias, Table<CrcollectortaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRCOLLECTORTASK_COLLECTORTASK_DATAGROUP, Indexes.CRCOLLECTORTASK_COLLECTORTASK_NAME, Indexes.CRCOLLECTORTASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrcollectortaskRecord> getPrimaryKey() {
        return Keys.KEY_CRCOLLECTORTASK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrcollectortaskRecord>> getKeys() {
        return Arrays.<UniqueKey<CrcollectortaskRecord>>asList(Keys.KEY_CRCOLLECTORTASK_PRIMARY, Keys.KEY_CRCOLLECTORTASK_COLLECTORTASK_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcollectortask as(String alias) {
        return new Crcollectortask(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcollectortask as(Name alias) {
        return new Crcollectortask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcollectortask rename(String name) {
        return new Crcollectortask(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcollectortask rename(Name name) {
        return new Crcollectortask(name, null);
    }
}
