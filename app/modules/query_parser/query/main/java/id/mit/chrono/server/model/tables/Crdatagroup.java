/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrdatagroupRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crdatagroup extends TableImpl<CrdatagroupRecord> {

    private static final long serialVersionUID = -1552818352;

    /**
     * The reference instance of <code>chrono.crdatagroup</code>
     */
    public static final Crdatagroup CRDATAGROUP = new Crdatagroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrdatagroupRecord> getRecordType() {
        return CrdatagroupRecord.class;
    }

    /**
     * The column <code>chrono.crdatagroup.datagroup_id</code>.
     */
    public final TableField<CrdatagroupRecord, Integer> DATAGROUP_ID = createField("datagroup_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crdatagroup.datagroup_code</code>.
     */
    public final TableField<CrdatagroupRecord, String> DATAGROUP_CODE = createField("datagroup_code", org.jooq.impl.SQLDataType.VARCHAR(24), this, "");

    /**
     * The column <code>chrono.crdatagroup.datagroup_name</code>.
     */
    public final TableField<CrdatagroupRecord, String> DATAGROUP_NAME = createField("datagroup_name", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>chrono.crdatagroup.datagroup_desc</code>.
     */
    public final TableField<CrdatagroupRecord, String> DATAGROUP_DESC = createField("datagroup_desc", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * Create a <code>chrono.crdatagroup</code> table reference
     */
    public Crdatagroup() {
        this(DSL.name("crdatagroup"), null);
    }

    /**
     * Create an aliased <code>chrono.crdatagroup</code> table reference
     */
    public Crdatagroup(String alias) {
        this(DSL.name(alias), CRDATAGROUP);
    }

    /**
     * Create an aliased <code>chrono.crdatagroup</code> table reference
     */
    public Crdatagroup(Name alias) {
        this(alias, CRDATAGROUP);
    }

    private Crdatagroup(Name alias, Table<CrdatagroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crdatagroup(Name alias, Table<CrdatagroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRDATAGROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrdatagroupRecord> getPrimaryKey() {
        return Keys.KEY_CRDATAGROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrdatagroupRecord>> getKeys() {
        return Arrays.<UniqueKey<CrdatagroupRecord>>asList(Keys.KEY_CRDATAGROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdatagroup as(String alias) {
        return new Crdatagroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdatagroup as(Name alias) {
        return new Crdatagroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crdatagroup rename(String name) {
        return new Crdatagroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crdatagroup rename(Name name) {
        return new Crdatagroup(name, null);
    }
}
