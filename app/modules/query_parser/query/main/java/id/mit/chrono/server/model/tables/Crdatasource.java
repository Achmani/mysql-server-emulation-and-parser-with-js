/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrdatasourceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crdatasource extends TableImpl<CrdatasourceRecord> {

    private static final long serialVersionUID = -1032623959;

    /**
     * The reference instance of <code>chrono.crdatasource</code>
     */
    public static final Crdatasource CRDATASOURCE = new Crdatasource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrdatasourceRecord> getRecordType() {
        return CrdatasourceRecord.class;
    }

    /**
     * The column <code>chrono.crdatasource.datasource_id</code>.
     */
    public final TableField<CrdatasourceRecord, Integer> DATASOURCE_ID = createField("datasource_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_datagroup</code>.
     */
    public final TableField<CrdatasourceRecord, Integer> DATASOURCE_DATAGROUP = createField("datasource_datagroup", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_vendor</code>.
     */
    public final TableField<CrdatasourceRecord, Integer> DATASOURCE_VENDOR = createField("datasource_vendor", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_code</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_CODE = createField("datasource_code", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_name</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_NAME = createField("datasource_name", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_alias</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_ALIAS = createField("datasource_alias", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_description</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_DESCRIPTION = createField("datasource_description", org.jooq.impl.SQLDataType.CHAR(255).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_protocol</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_PROTOCOL = createField("datasource_protocol", org.jooq.impl.SQLDataType.CHAR(12).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_protocol2</code>.
     */
    public final TableField<CrdatasourceRecord, Integer> DATASOURCE_PROTOCOL2 = createField("datasource_protocol2", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_ipaddress</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_IPADDRESS = createField("datasource_ipaddress", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_port</code>.
     */
    public final TableField<CrdatasourceRecord, Integer> DATASOURCE_PORT = createField("datasource_port", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_username</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_USERNAME = createField("datasource_username", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_password</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_PASSWORD = createField("datasource_password", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_locationinfo</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_LOCATIONINFO = createField("datasource_locationinfo", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_locationinfo2</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_LOCATIONINFO2 = createField("datasource_locationinfo2", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_excludelocationinfo</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_EXCLUDELOCATIONINFO = createField("datasource_excludelocationinfo", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_patterninfo</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_PATTERNINFO = createField("datasource_patterninfo", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_patterninfo2</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_PATTERNINFO2 = createField("datasource_patterninfo2", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_renameoutput</code>.
     */
    public final TableField<CrdatasourceRecord, Byte> DATASOURCE_RENAMEOUTPUT = createField("datasource_renameoutput", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_enabled</code>.
     */
    public final TableField<CrdatasourceRecord, Byte> DATASOURCE_ENABLED = createField("datasource_enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_dbipaddress</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_DBIPADDRESS = createField("datasource_dbipaddress", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_dbtype</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_DBTYPE = createField("datasource_dbtype", org.jooq.impl.SQLDataType.CHAR(12).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_dbport</code>.
     */
    public final TableField<CrdatasourceRecord, Integer> DATASOURCE_DBPORT = createField("datasource_dbport", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_dbservicename</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_DBSERVICENAME = createField("datasource_dbservicename", org.jooq.impl.SQLDataType.CHAR(12).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_dbschema</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_DBSCHEMA = createField("datasource_dbschema", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_dbusername</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_DBUSERNAME = createField("datasource_dbusername", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.crdatasource.datasource_dbpassword</code>.
     */
    public final TableField<CrdatasourceRecord, String> DATASOURCE_DBPASSWORD = createField("datasource_dbpassword", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * Create a <code>chrono.crdatasource</code> table reference
     */
    public Crdatasource() {
        this(DSL.name("crdatasource"), null);
    }

    /**
     * Create an aliased <code>chrono.crdatasource</code> table reference
     */
    public Crdatasource(String alias) {
        this(DSL.name(alias), CRDATASOURCE);
    }

    /**
     * Create an aliased <code>chrono.crdatasource</code> table reference
     */
    public Crdatasource(Name alias) {
        this(alias, CRDATASOURCE);
    }

    private Crdatasource(Name alias, Table<CrdatasourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crdatasource(Name alias, Table<CrdatasourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRDATASOURCE_DATASOURCE_DATAGROUP, Indexes.CRDATASOURCE_DATASOURCE_ENABLED, Indexes.CRDATASOURCE_DATASOURCE_VENDOR, Indexes.CRDATASOURCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrdatasourceRecord> getPrimaryKey() {
        return Keys.KEY_CRDATASOURCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrdatasourceRecord>> getKeys() {
        return Arrays.<UniqueKey<CrdatasourceRecord>>asList(Keys.KEY_CRDATASOURCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdatasource as(String alias) {
        return new Crdatasource(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdatasource as(Name alias) {
        return new Crdatasource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crdatasource rename(String name) {
        return new Crdatasource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crdatasource rename(Name name) {
        return new Crdatasource(name, null);
    }
}
