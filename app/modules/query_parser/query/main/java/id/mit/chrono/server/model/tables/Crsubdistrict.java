/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrsubdistrictRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crsubdistrict extends TableImpl<CrsubdistrictRecord> {

    private static final long serialVersionUID = 2138071979;

    /**
     * The reference instance of <code>chrono.crsubdistrict</code>
     */
    public static final Crsubdistrict CRSUBDISTRICT = new Crsubdistrict();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrsubdistrictRecord> getRecordType() {
        return CrsubdistrictRecord.class;
    }

    /**
     * The column <code>chrono.crsubdistrict.subdistrict_id</code>.
     */
    public final TableField<CrsubdistrictRecord, Integer> SUBDISTRICT_ID = createField("subdistrict_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crsubdistrict.subdistrict_country</code>.
     */
    public final TableField<CrsubdistrictRecord, Integer> SUBDISTRICT_COUNTRY = createField("subdistrict_country", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crsubdistrict.subdistrict_province</code>.
     */
    public final TableField<CrsubdistrictRecord, Integer> SUBDISTRICT_PROVINCE = createField("subdistrict_province", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crsubdistrict.subdistrict_city</code>.
     */
    public final TableField<CrsubdistrictRecord, Integer> SUBDISTRICT_CITY = createField("subdistrict_city", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crsubdistrict.subdistrict_code</code>.
     */
    public final TableField<CrsubdistrictRecord, String> SUBDISTRICT_CODE = createField("subdistrict_code", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crsubdistrict.subdistrict_name</code>.
     */
    public final TableField<CrsubdistrictRecord, String> SUBDISTRICT_NAME = createField("subdistrict_name", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>chrono.crsubdistrict.subdistrict_polygon</code>.
     */
    public final TableField<CrsubdistrictRecord, String> SUBDISTRICT_POLYGON = createField("subdistrict_polygon", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>chrono.crsubdistrict</code> table reference
     */
    public Crsubdistrict() {
        this(DSL.name("crsubdistrict"), null);
    }

    /**
     * Create an aliased <code>chrono.crsubdistrict</code> table reference
     */
    public Crsubdistrict(String alias) {
        this(DSL.name(alias), CRSUBDISTRICT);
    }

    /**
     * Create an aliased <code>chrono.crsubdistrict</code> table reference
     */
    public Crsubdistrict(Name alias) {
        this(alias, CRSUBDISTRICT);
    }

    private Crsubdistrict(Name alias, Table<CrsubdistrictRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crsubdistrict(Name alias, Table<CrsubdistrictRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRSUBDISTRICT_PRIMARY, Indexes.CRSUBDISTRICT_SUBDISTRICT_CITY, Indexes.CRSUBDISTRICT_SUBDISTRICT_CODE, Indexes.CRSUBDISTRICT_SUBDISTRICT_COUNTRY, Indexes.CRSUBDISTRICT_SUBDISTRICT_NAME, Indexes.CRSUBDISTRICT_SUBDISTRICT_PROVINCE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrsubdistrictRecord> getPrimaryKey() {
        return Keys.KEY_CRSUBDISTRICT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrsubdistrictRecord>> getKeys() {
        return Arrays.<UniqueKey<CrsubdistrictRecord>>asList(Keys.KEY_CRSUBDISTRICT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crsubdistrict as(String alias) {
        return new Crsubdistrict(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crsubdistrict as(Name alias) {
        return new Crsubdistrict(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crsubdistrict rename(String name) {
        return new Crsubdistrict(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crsubdistrict rename(Name name) {
        return new Crsubdistrict(name, null);
    }
}
