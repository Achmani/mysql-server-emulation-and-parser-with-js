/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrcollectortasksourcesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crcollectortasksources extends TableImpl<CrcollectortasksourcesRecord> {

    private static final long serialVersionUID = 1777852366;

    /**
     * The reference instance of <code>chrono.crcollectortasksources</code>
     */
    public static final Crcollectortasksources CRCOLLECTORTASKSOURCES = new Crcollectortasksources();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrcollectortasksourcesRecord> getRecordType() {
        return CrcollectortasksourcesRecord.class;
    }

    /**
     * The column <code>chrono.crcollectortasksources.collectortasksources_id</code>.
     */
    public final TableField<CrcollectortasksourcesRecord, Long> COLLECTORTASKSOURCES_ID = createField("collectortasksources_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>chrono.crcollectortasksources.collectortasksources_collectortask</code>.
     */
    public final TableField<CrcollectortasksourcesRecord, Integer> COLLECTORTASKSOURCES_COLLECTORTASK = createField("collectortasksources_collectortask", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortasksources.collectortasksources_datasource</code>.
     */
    public final TableField<CrcollectortasksourcesRecord, Integer> COLLECTORTASKSOURCES_DATASOURCE = createField("collectortasksources_datasource", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortasksources.collectortasksources_time</code>.
     */
    public final TableField<CrcollectortasksourcesRecord, Integer> COLLECTORTASKSOURCES_TIME = createField("collectortasksources_time", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortasksources.collectortasksources_totalfile</code>.
     */
    public final TableField<CrcollectortasksourcesRecord, Integer> COLLECTORTASKSOURCES_TOTALFILE = createField("collectortasksources_totalfile", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortasksources.collectortasksources_newfile</code>.
     */
    public final TableField<CrcollectortasksourcesRecord, Integer> COLLECTORTASKSOURCES_NEWFILE = createField("collectortasksources_newfile", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortasksources.collectortasksources_collectorstatus</code>.
     */
    public final TableField<CrcollectortasksourcesRecord, Integer> COLLECTORTASKSOURCES_COLLECTORSTATUS = createField("collectortasksources_collectorstatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortasksources.collectortasksources_statusreason</code>.
     */
    public final TableField<CrcollectortasksourcesRecord, String> COLLECTORTASKSOURCES_STATUSREASON = createField("collectortasksources_statusreason", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * Create a <code>chrono.crcollectortasksources</code> table reference
     */
    public Crcollectortasksources() {
        this(DSL.name("crcollectortasksources"), null);
    }

    /**
     * Create an aliased <code>chrono.crcollectortasksources</code> table reference
     */
    public Crcollectortasksources(String alias) {
        this(DSL.name(alias), CRCOLLECTORTASKSOURCES);
    }

    /**
     * Create an aliased <code>chrono.crcollectortasksources</code> table reference
     */
    public Crcollectortasksources(Name alias) {
        this(alias, CRCOLLECTORTASKSOURCES);
    }

    private Crcollectortasksources(Name alias, Table<CrcollectortasksourcesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crcollectortasksources(Name alias, Table<CrcollectortasksourcesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRCOLLECTORTASKSOURCES_COLLECTORTASK_ID, Indexes.CRCOLLECTORTASKSOURCES_COLLECTORTASK_SOURCES_DATASOURCE, Indexes.CRCOLLECTORTASKSOURCES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrcollectortasksourcesRecord> getPrimaryKey() {
        return Keys.KEY_CRCOLLECTORTASKSOURCES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrcollectortasksourcesRecord>> getKeys() {
        return Arrays.<UniqueKey<CrcollectortasksourcesRecord>>asList(Keys.KEY_CRCOLLECTORTASKSOURCES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcollectortasksources as(String alias) {
        return new Crcollectortasksources(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcollectortasksources as(Name alias) {
        return new Crcollectortasksources(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcollectortasksources rename(String name) {
        return new Crcollectortasksources(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcollectortasksources rename(Name name) {
        return new Crcollectortasksources(name, null);
    }
}
