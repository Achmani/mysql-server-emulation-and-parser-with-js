/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.Hwbsce1t1Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hwbsce1t1 extends TableImpl<Hwbsce1t1Record> {

    private static final long serialVersionUID = -1379830143;

    /**
     * The reference instance of <code>chrono.hwbsce1t1</code>
     */
    public static final Hwbsce1t1 HWBSCE1T1 = new Hwbsce1t1();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Hwbsce1t1Record> getRecordType() {
        return Hwbsce1t1Record.class;
    }

    /**
     * The column <code>chrono.hwbsce1t1.hwbsce1t1_id</code>.
     */
    public final TableField<Hwbsce1t1Record, ULong> HWBSCE1T1_ID = createField("hwbsce1t1_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.hwbsce1t1_crcollectortaskfiles</code>.
     */
    public final TableField<Hwbsce1t1Record, ULong> HWBSCE1T1_CRCOLLECTORTASKFILES = createField("hwbsce1t1_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.hwbsce1t1_date</code>.
     */
    public final TableField<Hwbsce1t1Record, UInteger> HWBSCE1T1_DATE = createField("hwbsce1t1_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.hwbsce1t1_datefrom</code>.
     */
    public final TableField<Hwbsce1t1Record, Integer> HWBSCE1T1_DATEFROM = createField("hwbsce1t1_datefrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwbsce1t1.hwbsce1t1_hwbsc</code>.
     */
    public final TableField<Hwbsce1t1Record, ULong> HWBSCE1T1_HWBSC = createField("hwbsce1t1_hwbsc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.hwbsce1t1_hwbscbrd</code>.
     */
    public final TableField<Hwbsce1t1Record, ULong> HWBSCE1T1_HWBSCBRD = createField("hwbsce1t1_hwbscbrd", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.hwbsce1t1.EXPORTTIME</code>.
     */
    public final TableField<Hwbsce1t1Record, String> EXPORTTIME = createField("EXPORTTIME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.SRN</code>.
     */
    public final TableField<Hwbsce1t1Record, String> SRN = createField("SRN", org.jooq.impl.SQLDataType.CHAR(4), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.SN</code>.
     */
    public final TableField<Hwbsce1t1Record, String> SN = createField("SN", org.jooq.impl.SQLDataType.CHAR(4), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.PN</code>.
     */
    public final TableField<Hwbsce1t1Record, String> PN = createField("PN", org.jooq.impl.SQLDataType.CHAR(4), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.BT</code>.
     */
    public final TableField<Hwbsce1t1Record, String> BT = createField("BT", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.PS</code>.
     */
    public final TableField<Hwbsce1t1Record, String> PS = createField("PS", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.WORKMODE</code>.
     */
    public final TableField<Hwbsce1t1Record, String> WORKMODE = createField("WORKMODE", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.PTTXT</code>.
     */
    public final TableField<Hwbsce1t1Record, String> PTTXT = createField("PTTXT", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.PTRXT</code>.
     */
    public final TableField<Hwbsce1t1Record, String> PTRXT = createField("PTRXT", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.PTTYPE</code>.
     */
    public final TableField<Hwbsce1t1Record, String> PTTYPE = createField("PTTYPE", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.hwbsce1t1.PTCODE</code>.
     */
    public final TableField<Hwbsce1t1Record, String> PTCODE = createField("PTCODE", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * Create a <code>chrono.hwbsce1t1</code> table reference
     */
    public Hwbsce1t1() {
        this(DSL.name("hwbsce1t1"), null);
    }

    /**
     * Create an aliased <code>chrono.hwbsce1t1</code> table reference
     */
    public Hwbsce1t1(String alias) {
        this(DSL.name(alias), HWBSCE1T1);
    }

    /**
     * Create an aliased <code>chrono.hwbsce1t1</code> table reference
     */
    public Hwbsce1t1(Name alias) {
        this(alias, HWBSCE1T1);
    }

    private Hwbsce1t1(Name alias, Table<Hwbsce1t1Record> aliased) {
        this(alias, aliased, null);
    }

    private Hwbsce1t1(Name alias, Table<Hwbsce1t1Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HWBSCE1T1_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Hwbsce1t1Record> getPrimaryKey() {
        return Keys.KEY_HWBSCE1T1_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Hwbsce1t1Record>> getKeys() {
        return Arrays.<UniqueKey<Hwbsce1t1Record>>asList(Keys.KEY_HWBSCE1T1_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwbsce1t1 as(String alias) {
        return new Hwbsce1t1(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwbsce1t1 as(Name alias) {
        return new Hwbsce1t1(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwbsce1t1 rename(String name) {
        return new Hwbsce1t1(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwbsce1t1 rename(Name name) {
        return new Hwbsce1t1(name, null);
    }
}
