/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrcompanyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crcompany extends TableImpl<CrcompanyRecord> {

    private static final long serialVersionUID = -375799757;

    /**
     * The reference instance of <code>chrono.crcompany</code>
     */
    public static final Crcompany CRCOMPANY = new Crcompany();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrcompanyRecord> getRecordType() {
        return CrcompanyRecord.class;
    }

    /**
     * The column <code>chrono.crcompany.company_id</code>.
     */
    public final TableField<CrcompanyRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crcompany.company_code</code>.
     */
    public final TableField<CrcompanyRecord, String> COMPANY_CODE = createField("company_code", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crcompany.company_name</code>.
     */
    public final TableField<CrcompanyRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>chrono.crcompany.company_address</code>.
     */
    public final TableField<CrcompanyRecord, String> COMPANY_ADDRESS = createField("company_address", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crcompany.company_postalcode</code>.
     */
    public final TableField<CrcompanyRecord, String> COMPANY_POSTALCODE = createField("company_postalcode", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crcompany.company_phone</code>.
     */
    public final TableField<CrcompanyRecord, String> COMPANY_PHONE = createField("company_phone", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>chrono.crcompany.company_fax</code>.
     */
    public final TableField<CrcompanyRecord, String> COMPANY_FAX = createField("company_fax", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>chrono.crcompany.company_website</code>.
     */
    public final TableField<CrcompanyRecord, String> COMPANY_WEBSITE = createField("company_website", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>chrono.crcompany</code> table reference
     */
    public Crcompany() {
        this(DSL.name("crcompany"), null);
    }

    /**
     * Create an aliased <code>chrono.crcompany</code> table reference
     */
    public Crcompany(String alias) {
        this(DSL.name(alias), CRCOMPANY);
    }

    /**
     * Create an aliased <code>chrono.crcompany</code> table reference
     */
    public Crcompany(Name alias) {
        this(alias, CRCOMPANY);
    }

    private Crcompany(Name alias, Table<CrcompanyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crcompany(Name alias, Table<CrcompanyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRCOMPANY_COMPANY_CODE, Indexes.CRCOMPANY_COMPANY_NAME, Indexes.CRCOMPANY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrcompanyRecord> getPrimaryKey() {
        return Keys.KEY_CRCOMPANY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrcompanyRecord>> getKeys() {
        return Arrays.<UniqueKey<CrcompanyRecord>>asList(Keys.KEY_CRCOMPANY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcompany as(String alias) {
        return new Crcompany(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcompany as(Name alias) {
        return new Crcompany(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcompany rename(String name) {
        return new Crcompany(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcompany rename(Name name) {
        return new Crcompany(name, null);
    }
}
