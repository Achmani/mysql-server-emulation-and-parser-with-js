/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.Crgeomap2Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crgeomap2 extends TableImpl<Crgeomap2Record> {

    private static final long serialVersionUID = -110702906;

    /**
     * The reference instance of <code>chrono.crgeomap2</code>
     */
    public static final Crgeomap2 CRGEOMAP2 = new Crgeomap2();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Crgeomap2Record> getRecordType() {
        return Crgeomap2Record.class;
    }

    /**
     * The column <code>chrono.crgeomap2.geomap_id</code>.
     */
    public final TableField<Crgeomap2Record, Integer> GEOMAP_ID = createField("geomap_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<Crgeomap2Record, Object> GEOMAP_DATA = createField("geomap_data", org.jooq.impl.DefaultDataType.getDefaultDataType("geometry"), this, "");

    /**
     * The column <code>chrono.crgeomap2.gid_0</code>.
     */
    public final TableField<Crgeomap2Record, String> GID_0 = createField("gid_0", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.geomap_attr0</code>.
     */
    public final TableField<Crgeomap2Record, String> GEOMAP_ATTR0 = createField("geomap_attr0", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.gid_1</code>.
     */
    public final TableField<Crgeomap2Record, String> GID_1 = createField("gid_1", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.geomap_attr1</code>.
     */
    public final TableField<Crgeomap2Record, String> GEOMAP_ATTR1 = createField("geomap_attr1", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.gid_2</code>.
     */
    public final TableField<Crgeomap2Record, String> GID_2 = createField("gid_2", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.geomap_attr2</code>.
     */
    public final TableField<Crgeomap2Record, String> GEOMAP_ATTR2 = createField("geomap_attr2", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.gid_3</code>.
     */
    public final TableField<Crgeomap2Record, String> GID_3 = createField("gid_3", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.geomap_attr3</code>.
     */
    public final TableField<Crgeomap2Record, String> GEOMAP_ATTR3 = createField("geomap_attr3", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.gid_4</code>.
     */
    public final TableField<Crgeomap2Record, String> GID_4 = createField("gid_4", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.geomap_attr4</code>.
     */
    public final TableField<Crgeomap2Record, String> GEOMAP_ATTR4 = createField("geomap_attr4", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.varname_4</code>.
     */
    public final TableField<Crgeomap2Record, String> VARNAME_4 = createField("varname_4", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.type_4</code>.
     */
    public final TableField<Crgeomap2Record, String> TYPE_4 = createField("type_4", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.engtype_4</code>.
     */
    public final TableField<Crgeomap2Record, String> ENGTYPE_4 = createField("engtype_4", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>chrono.crgeomap2.cc_4</code>.
     */
    public final TableField<Crgeomap2Record, String> CC_4 = createField("cc_4", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * Create a <code>chrono.crgeomap2</code> table reference
     */
    public Crgeomap2() {
        this(DSL.name("crgeomap2"), null);
    }

    /**
     * Create an aliased <code>chrono.crgeomap2</code> table reference
     */
    public Crgeomap2(String alias) {
        this(DSL.name(alias), CRGEOMAP2);
    }

    /**
     * Create an aliased <code>chrono.crgeomap2</code> table reference
     */
    public Crgeomap2(Name alias) {
        this(alias, CRGEOMAP2);
    }

    private Crgeomap2(Name alias, Table<Crgeomap2Record> aliased) {
        this(alias, aliased, null);
    }

    private Crgeomap2(Name alias, Table<Crgeomap2Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Crgeomap2Record>> getKeys() {
        return Arrays.<UniqueKey<Crgeomap2Record>>asList(Keys.KEY_CRGEOMAP2_OGR_FID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crgeomap2 as(String alias) {
        return new Crgeomap2(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crgeomap2 as(Name alias) {
        return new Crgeomap2(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crgeomap2 rename(String name) {
        return new Crgeomap2(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crgeomap2 rename(Name name) {
        return new Crgeomap2(name, null);
    }
}
