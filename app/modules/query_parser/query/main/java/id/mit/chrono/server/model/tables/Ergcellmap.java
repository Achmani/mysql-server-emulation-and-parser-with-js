/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.ErgcellmapRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ergcellmap extends TableImpl<ErgcellmapRecord> {

    private static final long serialVersionUID = -1898605819;

    /**
     * The reference instance of <code>chrono.ergcellmap</code>
     */
    public static final Ergcellmap ERGCELLMAP = new Ergcellmap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ErgcellmapRecord> getRecordType() {
        return ErgcellmapRecord.class;
    }

    /**
     * The column <code>chrono.ergcellmap.ergcellmap_id</code>.
     */
    public final TableField<ErgcellmapRecord, UInteger> ERGCELLMAP_ID = createField("ergcellmap_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ergcellmap.ergcellmap_code</code>.
     */
    public final TableField<ErgcellmapRecord, String> ERGCELLMAP_CODE = createField("ergcellmap_code", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ergcellmap.ergcellmap_key</code>.
     */
    public final TableField<ErgcellmapRecord, String> ERGCELLMAP_KEY = createField("ergcellmap_key", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ergcellmap.ergcellmap_value</code>.
     */
    public final TableField<ErgcellmapRecord, String> ERGCELLMAP_VALUE = createField("ergcellmap_value", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ergcellmap.ergcellmap_backup_orig</code>.
     */
    public final TableField<ErgcellmapRecord, String> ERGCELLMAP_BACKUP_ORIG = createField("ergcellmap_backup_orig", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * Create a <code>chrono.ergcellmap</code> table reference
     */
    public Ergcellmap() {
        this(DSL.name("ergcellmap"), null);
    }

    /**
     * Create an aliased <code>chrono.ergcellmap</code> table reference
     */
    public Ergcellmap(String alias) {
        this(DSL.name(alias), ERGCELLMAP);
    }

    /**
     * Create an aliased <code>chrono.ergcellmap</code> table reference
     */
    public Ergcellmap(Name alias) {
        this(alias, ERGCELLMAP);
    }

    private Ergcellmap(Name alias, Table<ErgcellmapRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ergcellmap(Name alias, Table<ErgcellmapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ErgcellmapRecord> getPrimaryKey() {
        return Keys.KEY_ERGCELLMAP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ErgcellmapRecord>> getKeys() {
        return Arrays.<UniqueKey<ErgcellmapRecord>>asList(Keys.KEY_ERGCELLMAP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ergcellmap as(String alias) {
        return new Ergcellmap(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ergcellmap as(Name alias) {
        return new Ergcellmap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ergcellmap rename(String name) {
        return new Ergcellmap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ergcellmap rename(Name name) {
        return new Ergcellmap(name, null);
    }
}
