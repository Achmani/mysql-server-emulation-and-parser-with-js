/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrcellRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crcell extends TableImpl<CrcellRecord> {

    private static final long serialVersionUID = -1600170746;

    /**
     * The reference instance of <code>chrono.crcell</code>
     */
    public static final Crcell CRCELL = new Crcell();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrcellRecord> getRecordType() {
        return CrcellRecord.class;
    }

    /**
     * The column <code>chrono.crcell.cell_id</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_ID = createField("cell_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crcell.cell_antenna</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_ANTENNA = createField("cell_antenna", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_node</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_NODE = createField("cell_node", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_site</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_SITE = createField("cell_site", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_siteinfo</code>.
     */
    public final TableField<CrcellRecord, String> CELL_SITEINFO = createField("cell_siteinfo", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crcell.cell_siteinfo2</code>.
     */
    public final TableField<CrcellRecord, String> CELL_SITEINFO2 = createField("cell_siteinfo2", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crcell.cell_siteinfolatitude</code>.
     */
    public final TableField<CrcellRecord, Double> CELL_SITEINFOLATITUDE = createField("cell_siteinfolatitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcell.cell_siteinfolongitude</code>.
     */
    public final TableField<CrcellRecord, Double> CELL_SITEINFOLONGITUDE = createField("cell_siteinfolongitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcell.cell_cellclass</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_CELLCLASS = createField("cell_cellclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_cellcoverage</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_CELLCOVERAGE = createField("cell_cellcoverage", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_revenueclass</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_REVENUECLASS = createField("cell_revenueclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_namingvalid</code>.
     */
    public final TableField<CrcellRecord, Byte> CELL_NAMINGVALID = createField("cell_namingvalid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.crcell.cell_cgi</code>.
     */
    public final TableField<CrcellRecord, String> CELL_CGI = createField("cell_cgi", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crcell.cell_ecgi</code>.
     */
    public final TableField<CrcellRecord, String> CELL_ECGI = createField("cell_ecgi", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crcell.cell_mcc</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_MCC = createField("cell_mcc", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_mnc</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_MNC = createField("cell_mnc", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_lac</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_LAC = createField("cell_lac", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_tac</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_TAC = createField("cell_tac", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_ci</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_CI = createField("cell_ci", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_pci</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_PCI = createField("cell_pci", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_bsic</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_BSIC = createField("cell_bsic", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_rncid</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_RNCID = createField("cell_rncid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_enbid</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_ENBID = createField("cell_enbid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_sac</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_SAC = createField("cell_sac", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_rac</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_RAC = createField("cell_rac", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_psc</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_PSC = createField("cell_psc", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_uluarfcn</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_ULUARFCN = createField("cell_uluarfcn", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_dluarfcn</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_DLUARFCN = createField("cell_dluarfcn", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_latitude</code>.
     */
    public final TableField<CrcellRecord, Double> CELL_LATITUDE = createField("cell_latitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcell.cell_longitude</code>.
     */
    public final TableField<CrcellRecord, Double> CELL_LONGITUDE = createField("cell_longitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcell.cell_direction</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_DIRECTION = createField("cell_direction", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_lastupdate</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_LASTUPDATE = createField("cell_lastupdate", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_validationtime</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_VALIDATIONTIME = createField("cell_validationtime", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_validationnote</code>.
     */
    public final TableField<CrcellRecord, String> CELL_VALIDATIONNOTE = createField("cell_validationnote", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crcell.cell_verificator</code>.
     */
    public final TableField<CrcellRecord, Integer> CELL_VERIFICATOR = createField("cell_verificator", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcell.cell_verificationnote</code>.
     */
    public final TableField<CrcellRecord, String> CELL_VERIFICATIONNOTE = createField("cell_verificationnote", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crcell.cell_ncgi</code>.
     */
    public final TableField<CrcellRecord, String> CELL_NCGI = createField("cell_ncgi", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * Create a <code>chrono.crcell</code> table reference
     */
    public Crcell() {
        this(DSL.name("crcell"), null);
    }

    /**
     * Create an aliased <code>chrono.crcell</code> table reference
     */
    public Crcell(String alias) {
        this(DSL.name(alias), CRCELL);
    }

    /**
     * Create an aliased <code>chrono.crcell</code> table reference
     */
    public Crcell(Name alias) {
        this(alias, CRCELL);
    }

    private Crcell(Name alias, Table<CrcellRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crcell(Name alias, Table<CrcellRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRCELL_CELL_CELLCLASS, Indexes.CRCELL_CELL_CELLCLASS_2, Indexes.CRCELL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrcellRecord> getPrimaryKey() {
        return Keys.KEY_CRCELL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrcellRecord>> getKeys() {
        return Arrays.<UniqueKey<CrcellRecord>>asList(Keys.KEY_CRCELL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcell as(String alias) {
        return new Crcell(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcell as(Name alias) {
        return new Crcell(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcell rename(String name) {
        return new Crcell(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcell rename(Name name) {
        return new Crcell(name, null);
    }
}
