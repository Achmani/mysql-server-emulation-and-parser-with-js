/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Nokenodeb;

import javax.annotation.Generated;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NokenodebRecord extends UpdatableRecordImpl<NokenodebRecord> {

    private static final long serialVersionUID = 1592713816;

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_id</code>.
     */
    public void setNokenodebId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_id</code>.
     */
    public ULong getNokenodebId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_crcollectortaskfiles</code>.
     */
    public void setNokenodebCrcollectortaskfiles(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_crcollectortaskfiles</code>.
     */
    public ULong getNokenodebCrcollectortaskfiles() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_date</code>.
     */
    public void setNokenodebDate(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_date</code>.
     */
    public UInteger getNokenodebDate() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_datefrom</code>.
     */
    public void setNokenodebDatefrom(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_datefrom</code>.
     */
    public UInteger getNokenodebDatefrom() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_node</code>.
     */
    public void setNokenodebNode(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_node</code>.
     */
    public Integer getNokenodebNode() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_nodephysical</code>.
     */
    public void setNokenodebNodephysical(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_nodephysical</code>.
     */
    public Integer getNokenodebNodephysical() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_nodestatus</code>.
     */
    public void setNokenodebNodestatus(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_nodestatus</code>.
     */
    public Integer getNokenodebNodestatus() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_revenueclass</code>.
     */
    public void setNokenodebRevenueclass(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_revenueclass</code>.
     */
    public Integer getNokenodebRevenueclass() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_vendor</code>.
     */
    public void setNokenodebVendor(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_vendor</code>.
     */
    public Integer getNokenodebVendor() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_namingvalid</code>.
     */
    public void setNokenodebNamingvalid(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_namingvalid</code>.
     */
    public Byte getNokenodebNamingvalid() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>chrono.nokenodeb.TOTALCELL</code>.
     */
    public void setTotalcell(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.TOTALCELL</code>.
     */
    public Integer getTotalcell() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>chrono.nokenodeb.ENODEBFUNCTIONNAME</code>.
     */
    public void setEnodebfunctionname(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.ENODEBFUNCTIONNAME</code>.
     */
    public String getEnodebfunctionname() {
        return (String) get(11);
    }

    /**
     * Setter for <code>chrono.nokenodeb.distName</code>.
     */
    public void setDistname(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.distName</code>.
     */
    public String getDistname() {
        return (String) get(12);
    }

    /**
     * Setter for <code>chrono.nokenodeb.distName2</code>.
     */
    public void setDistname2(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.distName2</code>.
     */
    public String getDistname2() {
        return (String) get(13);
    }

    /**
     * Setter for <code>chrono.nokenodeb.version</code>.
     */
    public void setVersion(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.version</code>.
     */
    public String getVersion() {
        return (String) get(14);
    }

    /**
     * Setter for <code>chrono.nokenodeb.mcc</code>.
     */
    public void setMcc(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.mcc</code>.
     */
    public String getMcc() {
        return (String) get(15);
    }

    /**
     * Setter for <code>chrono.nokenodeb.mnc</code>.
     */
    public void setMnc(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.mnc</code>.
     */
    public String getMnc() {
        return (String) get(16);
    }

    /**
     * Setter for <code>chrono.nokenodeb.eNodeBId</code>.
     */
    public void setEnodebid(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.eNodeBId</code>.
     */
    public String getEnodebid() {
        return (String) get(17);
    }

    /**
     * Setter for <code>chrono.nokenodeb.caMinDlAmbr</code>.
     */
    public void setCamindlambr(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.caMinDlAmbr</code>.
     */
    public String getCamindlambr() {
        return (String) get(18);
    }

    /**
     * Setter for <code>chrono.nokenodeb.caMinUlAmbr</code>.
     */
    public void setCaminulambr(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.caMinUlAmbr</code>.
     */
    public String getCaminulambr() {
        return (String) get(19);
    }

    /**
     * Setter for <code>chrono.nokenodeb.enbName</code>.
     */
    public void setEnbname(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.enbName</code>.
     */
    public String getEnbname() {
        return (String) get(20);
    }

    /**
     * Setter for <code>chrono.nokenodeb.keyRefrMarg</code>.
     */
    public void setKeyrefrmarg(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.keyRefrMarg</code>.
     */
    public String getKeyrefrmarg() {
        return (String) get(21);
    }

    /**
     * Setter for <code>chrono.nokenodeb.maxNumAnrMoiAllowed</code>.
     */
    public void setMaxnumanrmoiallowed(String value) {
        set(22, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.maxNumAnrMoiAllowed</code>.
     */
    public String getMaxnumanrmoiallowed() {
        return (String) get(22);
    }

    /**
     * Setter for <code>chrono.nokenodeb.maxNumOfLnadjLimit</code>.
     */
    public void setMaxnumoflnadjlimit(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.maxNumOfLnadjLimit</code>.
     */
    public String getMaxnumoflnadjlimit() {
        return (String) get(23);
    }

    /**
     * Setter for <code>chrono.nokenodeb.maxNumPreEmptions</code>.
     */
    public void setMaxnumpreemptions(String value) {
        set(24, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.maxNumPreEmptions</code>.
     */
    public String getMaxnumpreemptions() {
        return (String) get(24);
    }

    /**
     * Setter for <code>chrono.nokenodeb.supportedNumOfAnrMoi</code>.
     */
    public void setSupportednumofanrmoi(String value) {
        set(25, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.supportedNumOfAnrMoi</code>.
     */
    public String getSupportednumofanrmoi() {
        return (String) get(25);
    }

    /**
     * Setter for <code>chrono.nokenodeb.supportedNumOfLnadj</code>.
     */
    public void setSupportednumoflnadj(String value) {
        set(26, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.supportedNumOfLnadj</code>.
     */
    public String getSupportednumoflnadj() {
        return (String) get(26);
    }

    /**
     * Setter for <code>chrono.nokenodeb.nokenodeb_remark</code>.
     */
    public void setNokenodebRemark(String value) {
        set(27, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.nokenodeb_remark</code>.
     */
    public String getNokenodebRemark() {
        return (String) get(27);
    }

    /**
     * Setter for <code>chrono.nokenodeb.latitude</code>.
     */
    public void setLatitude(String value) {
        set(28, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.latitude</code>.
     */
    public String getLatitude() {
        return (String) get(28);
    }

    /**
     * Setter for <code>chrono.nokenodeb.longitude</code>.
     */
    public void setLongitude(String value) {
        set(29, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.longitude</code>.
     */
    public String getLongitude() {
        return (String) get(29);
    }

    /**
     * Setter for <code>chrono.nokenodeb.EXTPROP1</code>.
     */
    public void setExtprop1(Integer value) {
        set(30, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.EXTPROP1</code>.
     */
    public Integer getExtprop1() {
        return (Integer) get(30);
    }

    /**
     * Setter for <code>chrono.nokenodeb.EXTPROP2</code>.
     */
    public void setExtprop2(String value) {
        set(31, value);
    }

    /**
     * Getter for <code>chrono.nokenodeb.EXTPROP2</code>.
     */
    public String getExtprop2() {
        return (String) get(31);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<ULong, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NokenodebRecord
     */
    public NokenodebRecord() {
        super(Nokenodeb.NOKENODEB);
    }

    /**
     * Create a detached, initialised NokenodebRecord
     */
    public NokenodebRecord(ULong nokenodebId, ULong nokenodebCrcollectortaskfiles, UInteger nokenodebDate, UInteger nokenodebDatefrom, Integer nokenodebNode, Integer nokenodebNodephysical, Integer nokenodebNodestatus, Integer nokenodebRevenueclass, Integer nokenodebVendor, Byte nokenodebNamingvalid, Integer totalcell, String enodebfunctionname, String distname, String distname2, String version, String mcc, String mnc, String enodebid, String camindlambr, String caminulambr, String enbname, String keyrefrmarg, String maxnumanrmoiallowed, String maxnumoflnadjlimit, String maxnumpreemptions, String supportednumofanrmoi, String supportednumoflnadj, String nokenodebRemark, String latitude, String longitude, Integer extprop1, String extprop2) {
        super(Nokenodeb.NOKENODEB);

        set(0, nokenodebId);
        set(1, nokenodebCrcollectortaskfiles);
        set(2, nokenodebDate);
        set(3, nokenodebDatefrom);
        set(4, nokenodebNode);
        set(5, nokenodebNodephysical);
        set(6, nokenodebNodestatus);
        set(7, nokenodebRevenueclass);
        set(8, nokenodebVendor);
        set(9, nokenodebNamingvalid);
        set(10, totalcell);
        set(11, enodebfunctionname);
        set(12, distname);
        set(13, distname2);
        set(14, version);
        set(15, mcc);
        set(16, mnc);
        set(17, enodebid);
        set(18, camindlambr);
        set(19, caminulambr);
        set(20, enbname);
        set(21, keyrefrmarg);
        set(22, maxnumanrmoiallowed);
        set(23, maxnumoflnadjlimit);
        set(24, maxnumpreemptions);
        set(25, supportednumofanrmoi);
        set(26, supportednumoflnadj);
        set(27, nokenodebRemark);
        set(28, latitude);
        set(29, longitude);
        set(30, extprop1);
        set(31, extprop2);
    }
}
