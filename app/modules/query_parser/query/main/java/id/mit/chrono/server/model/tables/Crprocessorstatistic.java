/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrprocessorstatisticRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crprocessorstatistic extends TableImpl<CrprocessorstatisticRecord> {

    private static final long serialVersionUID = -985743319;

    /**
     * The reference instance of <code>chrono.crprocessorstatistic</code>
     */
    public static final Crprocessorstatistic CRPROCESSORSTATISTIC = new Crprocessorstatistic();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrprocessorstatisticRecord> getRecordType() {
        return CrprocessorstatisticRecord.class;
    }

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_id</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Long> PROCESSORSTATISTIC_ID = createField("processorstatistic_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_date</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_DATE = createField("processorstatistic_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_collectortask</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_COLLECTORTASK = createField("processorstatistic_collectortask", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_datagroup</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_DATAGROUP = createField("processorstatistic_datagroup", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_collectortaskfiles</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Long> PROCESSORSTATISTIC_COLLECTORTASKFILES = createField("processorstatistic_collectortaskfiles", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_time</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_TIME = createField("processorstatistic_time", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_class</code>.
     */
    public final TableField<CrprocessorstatisticRecord, String> PROCESSORSTATISTIC_CLASS = createField("processorstatistic_class", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_key</code>.
     */
    public final TableField<CrprocessorstatisticRecord, String> PROCESSORSTATISTIC_KEY = createField("processorstatistic_key", org.jooq.impl.SQLDataType.CHAR(128), this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_state</code>.
     */
    public final TableField<CrprocessorstatisticRecord, String> PROCESSORSTATISTIC_STATE = createField("processorstatistic_state", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_duration</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_DURATION = createField("processorstatistic_duration", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_totalselect</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_TOTALSELECT = createField("processorstatistic_totalselect", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_avgselecttime</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_AVGSELECTTIME = createField("processorstatistic_avgselecttime", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_totalinsert</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_TOTALINSERT = createField("processorstatistic_totalinsert", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_avginserttime</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_AVGINSERTTIME = createField("processorstatistic_avginserttime", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_totalupdate</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_TOTALUPDATE = createField("processorstatistic_totalupdate", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crprocessorstatistic.processorstatistic_avgupdatetime</code>.
     */
    public final TableField<CrprocessorstatisticRecord, Integer> PROCESSORSTATISTIC_AVGUPDATETIME = createField("processorstatistic_avgupdatetime", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>chrono.crprocessorstatistic</code> table reference
     */
    public Crprocessorstatistic() {
        this(DSL.name("crprocessorstatistic"), null);
    }

    /**
     * Create an aliased <code>chrono.crprocessorstatistic</code> table reference
     */
    public Crprocessorstatistic(String alias) {
        this(DSL.name(alias), CRPROCESSORSTATISTIC);
    }

    /**
     * Create an aliased <code>chrono.crprocessorstatistic</code> table reference
     */
    public Crprocessorstatistic(Name alias) {
        this(alias, CRPROCESSORSTATISTIC);
    }

    private Crprocessorstatistic(Name alias, Table<CrprocessorstatisticRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crprocessorstatistic(Name alias, Table<CrprocessorstatisticRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRPROCESSORSTATISTIC_COLLECTORTASK_ID, Indexes.CRPROCESSORSTATISTIC_COLLECTORTASK_SOURCES_DATASOURCE, Indexes.CRPROCESSORSTATISTIC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrprocessorstatisticRecord> getPrimaryKey() {
        return Keys.KEY_CRPROCESSORSTATISTIC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrprocessorstatisticRecord>> getKeys() {
        return Arrays.<UniqueKey<CrprocessorstatisticRecord>>asList(Keys.KEY_CRPROCESSORSTATISTIC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crprocessorstatistic as(String alias) {
        return new Crprocessorstatistic(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crprocessorstatistic as(Name alias) {
        return new Crprocessorstatistic(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crprocessorstatistic rename(String name) {
        return new Crprocessorstatistic(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crprocessorstatistic rename(Name name) {
        return new Crprocessorstatistic(name, null);
    }
}
