/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrcellnodeidRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crcellnodeid extends TableImpl<CrcellnodeidRecord> {

    private static final long serialVersionUID = -1339706345;

    /**
     * The reference instance of <code>chrono.crcellnodeid</code>
     */
    public static final Crcellnodeid CRCELLNODEID = new Crcellnodeid();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrcellnodeidRecord> getRecordType() {
        return CrcellnodeidRecord.class;
    }

    /**
     * The column <code>chrono.crcellnodeid.cellnodeid_id</code>.
     */
    public final TableField<CrcellnodeidRecord, Integer> CELLNODEID_ID = createField("cellnodeid_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crcellnodeid.cellnodeid_vendor</code>.
     */
    public final TableField<CrcellnodeidRecord, Integer> CELLNODEID_VENDOR = createField("cellnodeid_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcellnodeid.cellnodeid_cellclass</code>.
     */
    public final TableField<CrcellnodeidRecord, Integer> CELLNODEID_CELLCLASS = createField("cellnodeid_cellclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcellnodeid.cellnodeid_cellname</code>.
     */
    public final TableField<CrcellnodeidRecord, String> CELLNODEID_CELLNAME = createField("cellnodeid_cellname", org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellnodeid.cellnodeid_nodeid</code>.
     */
    public final TableField<CrcellnodeidRecord, String> CELLNODEID_NODEID = createField("cellnodeid_nodeid", org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellnodeid.cellnodeid_desc</code>.
     */
    public final TableField<CrcellnodeidRecord, String> CELLNODEID_DESC = createField("cellnodeid_desc", org.jooq.impl.SQLDataType.CHAR(72), this, "");

    /**
     * The column <code>chrono.crcellnodeid.cellnodeid_enabled</code>.
     */
    public final TableField<CrcellnodeidRecord, Byte> CELLNODEID_ENABLED = createField("cellnodeid_enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>chrono.crcellnodeid</code> table reference
     */
    public Crcellnodeid() {
        this(DSL.name("crcellnodeid"), null);
    }

    /**
     * Create an aliased <code>chrono.crcellnodeid</code> table reference
     */
    public Crcellnodeid(String alias) {
        this(DSL.name(alias), CRCELLNODEID);
    }

    /**
     * Create an aliased <code>chrono.crcellnodeid</code> table reference
     */
    public Crcellnodeid(Name alias) {
        this(alias, CRCELLNODEID);
    }

    private Crcellnodeid(Name alias, Table<CrcellnodeidRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crcellnodeid(Name alias, Table<CrcellnodeidRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrcellnodeidRecord> getPrimaryKey() {
        return Keys.KEY_CRCELLNODEID_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrcellnodeidRecord>> getKeys() {
        return Arrays.<UniqueKey<CrcellnodeidRecord>>asList(Keys.KEY_CRCELLNODEID_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcellnodeid as(String alias) {
        return new Crcellnodeid(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcellnodeid as(Name alias) {
        return new Crcellnodeid(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcellnodeid rename(String name) {
        return new Crcellnodeid(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcellnodeid rename(Name name) {
        return new Crcellnodeid(name, null);
    }
}
