/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrsettingsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crsettings extends TableImpl<CrsettingsRecord> {

    private static final long serialVersionUID = -346208399;

    /**
     * The reference instance of <code>chrono.crsettings</code>
     */
    public static final Crsettings CRSETTINGS = new Crsettings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrsettingsRecord> getRecordType() {
        return CrsettingsRecord.class;
    }

    /**
     * The column <code>chrono.crsettings.settings_id</code>.
     */
    public final TableField<CrsettingsRecord, Integer> SETTINGS_ID = createField("settings_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crsettings.settings_code</code>.
     */
    public final TableField<CrsettingsRecord, String> SETTINGS_CODE = createField("settings_code", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crsettings.settings_name</code>.
     */
    public final TableField<CrsettingsRecord, String> SETTINGS_NAME = createField("settings_name", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crsettings.settings_order</code>.
     */
    public final TableField<CrsettingsRecord, Integer> SETTINGS_ORDER = createField("settings_order", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crsettings.settings_description</code>.
     */
    public final TableField<CrsettingsRecord, String> SETTINGS_DESCRIPTION = createField("settings_description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crsettings.settings_value</code>.
     */
    public final TableField<CrsettingsRecord, String> SETTINGS_VALUE = createField("settings_value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>chrono.crsettings.settings_enabled</code>.
     */
    public final TableField<CrsettingsRecord, Byte> SETTINGS_ENABLED = createField("settings_enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>chrono.crsettings</code> table reference
     */
    public Crsettings() {
        this(DSL.name("crsettings"), null);
    }

    /**
     * Create an aliased <code>chrono.crsettings</code> table reference
     */
    public Crsettings(String alias) {
        this(DSL.name(alias), CRSETTINGS);
    }

    /**
     * Create an aliased <code>chrono.crsettings</code> table reference
     */
    public Crsettings(Name alias) {
        this(alias, CRSETTINGS);
    }

    private Crsettings(Name alias, Table<CrsettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crsettings(Name alias, Table<CrsettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrsettingsRecord> getPrimaryKey() {
        return Keys.KEY_CRSETTINGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrsettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<CrsettingsRecord>>asList(Keys.KEY_CRSETTINGS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crsettings as(String alias) {
        return new Crsettings(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crsettings as(Name alias) {
        return new Crsettings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crsettings rename(String name) {
        return new Crsettings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crsettings rename(Name name) {
        return new Crsettings(name, null);
    }
}
