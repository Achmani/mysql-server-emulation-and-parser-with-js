/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.ErrncRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Errnc extends TableImpl<ErrncRecord> {

    private static final long serialVersionUID = -1406802544;

    /**
     * The reference instance of <code>chrono.errnc</code>
     */
    public static final Errnc ERRNC = new Errnc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ErrncRecord> getRecordType() {
        return ErrncRecord.class;
    }

    /**
     * The column <code>chrono.errnc.errnc_id</code>.
     */
    public final TableField<ErrncRecord, ULong> ERRNC_ID = createField("errnc_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.errnc.errnc_crcollectortaskfiles</code>.
     */
    public final TableField<ErrncRecord, ULong> ERRNC_CRCOLLECTORTASKFILES = createField("errnc_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.errnc.errnc_date</code>.
     */
    public final TableField<ErrncRecord, UInteger> ERRNC_DATE = createField("errnc_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.errnc.errnc_node</code>.
     */
    public final TableField<ErrncRecord, Integer> ERRNC_NODE = createField("errnc_node", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.errnc_vendor</code>.
     */
    public final TableField<ErrncRecord, Integer> ERRNC_VENDOR = createField("errnc_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.RNCNAME</code>.
     */
    public final TableField<ErrncRecord, String> RNCNAME = createField("RNCNAME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.errnc.TOTALSUBRACK</code>.
     */
    public final TableField<ErrncRecord, Integer> TOTALSUBRACK = createField("TOTALSUBRACK", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.TOTALBRD</code>.
     */
    public final TableField<ErrncRecord, Integer> TOTALBRD = createField("TOTALBRD", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.TOTALNODEB</code>.
     */
    public final TableField<ErrncRecord, Integer> TOTALNODEB = createField("TOTALNODEB", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.TOTALCELL</code>.
     */
    public final TableField<ErrncRecord, Integer> TOTALCELL = createField("TOTALCELL", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.RNCID</code>.
     */
    public final TableField<ErrncRecord, String> RNCID = createField("RNCID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.errnc.MCC</code>.
     */
    public final TableField<ErrncRecord, String> MCC = createField("MCC", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.errnc.MNC</code>.
     */
    public final TableField<ErrncRecord, String> MNC = createField("MNC", org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>chrono.errnc.MANAGEDBY</code>.
     */
    public final TableField<ErrncRecord, String> MANAGEDBY = createField("MANAGEDBY", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.errnc.BCTLASTCHANGE</code>.
     */
    public final TableField<ErrncRecord, Integer> BCTLASTCHANGE = createField("BCTLASTCHANGE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.BCRLASTCHANGE</code>.
     */
    public final TableField<ErrncRecord, Integer> BCRLASTCHANGE = createField("BCRLASTCHANGE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.SYNCSTATUS</code>.
     */
    public final TableField<ErrncRecord, String> SYNCSTATUS = createField("SYNCSTATUS", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.errnc.NEMIMVERSION</code>.
     */
    public final TableField<ErrncRecord, String> NEMIMVERSION = createField("NEMIMVERSION", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.errnc.MIRRORMIBVERSION</code>.
     */
    public final TableField<ErrncRecord, String> MIRRORMIBVERSION = createField("MIRRORMIBVERSION", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.errnc.MANAGEDELEMENTTYPE</code>.
     */
    public final TableField<ErrncRecord, String> MANAGEDELEMENTTYPE = createField("MANAGEDELEMENTTYPE", org.jooq.impl.SQLDataType.CHAR(12), this, "");

    /**
     * The column <code>chrono.errnc.SWVERSION</code>.
     */
    public final TableField<ErrncRecord, String> SWVERSION = createField("SWVERSION", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.errnc.IPADDRESS</code>.
     */
    public final TableField<ErrncRecord, String> IPADDRESS = createField("IPADDRESS", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.errnc.LOCATIONNAME</code>.
     */
    public final TableField<ErrncRecord, String> LOCATIONNAME = createField("LOCATIONNAME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.errnc.PRODUCTNAME</code>.
     */
    public final TableField<ErrncRecord, String> PRODUCTNAME = createField("PRODUCTNAME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.errnc.errnc_remark</code>.
     */
    public final TableField<ErrncRecord, String> ERRNC_REMARK = createField("errnc_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.errnc.vsRncFunction_id</code>.
     */
    public final TableField<ErrncRecord, String> VSRNCFUNCTION_ID = createField("vsRncFunction_id", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.errnc.EXTPROP1</code>.
     */
    public final TableField<ErrncRecord, Integer> EXTPROP1 = createField("EXTPROP1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.errnc.EXTPROP2</code>.
     */
    public final TableField<ErrncRecord, String> EXTPROP2 = createField("EXTPROP2", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.errnc</code> table reference
     */
    public Errnc() {
        this(DSL.name("errnc"), null);
    }

    /**
     * Create an aliased <code>chrono.errnc</code> table reference
     */
    public Errnc(String alias) {
        this(DSL.name(alias), ERRNC);
    }

    /**
     * Create an aliased <code>chrono.errnc</code> table reference
     */
    public Errnc(Name alias) {
        this(alias, ERRNC);
    }

    private Errnc(Name alias, Table<ErrncRecord> aliased) {
        this(alias, aliased, null);
    }

    private Errnc(Name alias, Table<ErrncRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ErrncRecord> getPrimaryKey() {
        return Keys.KEY_ERRNC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ErrncRecord>> getKeys() {
        return Arrays.<UniqueKey<ErrncRecord>>asList(Keys.KEY_ERRNC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Errnc as(String alias) {
        return new Errnc(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Errnc as(Name alias) {
        return new Errnc(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Errnc rename(String name) {
        return new Errnc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Errnc rename(Name name) {
        return new Errnc(name, null);
    }
}
