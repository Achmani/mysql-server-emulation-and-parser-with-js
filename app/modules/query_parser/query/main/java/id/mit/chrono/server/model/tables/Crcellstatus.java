/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrcellstatusRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crcellstatus extends TableImpl<CrcellstatusRecord> {

    private static final long serialVersionUID = -1491082235;

    /**
     * The reference instance of <code>chrono.crcellstatus</code>
     */
    public static final Crcellstatus CRCELLSTATUS = new Crcellstatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrcellstatusRecord> getRecordType() {
        return CrcellstatusRecord.class;
    }

    /**
     * The column <code>chrono.crcellstatus.cellstatus_id</code>.
     */
    public final TableField<CrcellstatusRecord, Integer> CELLSTATUS_ID = createField("cellstatus_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crcellstatus.cellstatus_code</code>.
     */
    public final TableField<CrcellstatusRecord, String> CELLSTATUS_CODE = createField("cellstatus_code", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crcellstatus.cellstatus_name</code>.
     */
    public final TableField<CrcellstatusRecord, String> CELLSTATUS_NAME = createField("cellstatus_name", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crcellstatus.cellstatus_prefix</code>.
     */
    public final TableField<CrcellstatusRecord, String> CELLSTATUS_PREFIX = createField("cellstatus_prefix", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.crcellstatus</code> table reference
     */
    public Crcellstatus() {
        this(DSL.name("crcellstatus"), null);
    }

    /**
     * Create an aliased <code>chrono.crcellstatus</code> table reference
     */
    public Crcellstatus(String alias) {
        this(DSL.name(alias), CRCELLSTATUS);
    }

    /**
     * Create an aliased <code>chrono.crcellstatus</code> table reference
     */
    public Crcellstatus(Name alias) {
        this(alias, CRCELLSTATUS);
    }

    private Crcellstatus(Name alias, Table<CrcellstatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crcellstatus(Name alias, Table<CrcellstatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrcellstatusRecord> getPrimaryKey() {
        return Keys.KEY_CRCELLSTATUS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrcellstatusRecord>> getKeys() {
        return Arrays.<UniqueKey<CrcellstatusRecord>>asList(Keys.KEY_CRCELLSTATUS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcellstatus as(String alias) {
        return new Crcellstatus(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcellstatus as(Name alias) {
        return new Crcellstatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcellstatus rename(String name) {
        return new Crcellstatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcellstatus rename(Name name) {
        return new Crcellstatus(name, null);
    }
}
