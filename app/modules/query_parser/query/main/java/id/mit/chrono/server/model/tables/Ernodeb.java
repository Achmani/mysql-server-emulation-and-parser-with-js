/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.ErnodebRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ernodeb extends TableImpl<ErnodebRecord> {

    private static final long serialVersionUID = -1280091712;

    /**
     * The reference instance of <code>chrono.ernodeb</code>
     */
    public static final Ernodeb ERNODEB = new Ernodeb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ErnodebRecord> getRecordType() {
        return ErnodebRecord.class;
    }

    /**
     * The column <code>chrono.ernodeb.ernodeb_id</code>.
     */
    public final TableField<ErnodebRecord, ULong> ERNODEB_ID = createField("ernodeb_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_crcollectortaskfiles</code>.
     */
    public final TableField<ErnodebRecord, ULong> ERNODEB_CRCOLLECTORTASKFILES = createField("ernodeb_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_date</code>.
     */
    public final TableField<ErnodebRecord, UInteger> ERNODEB_DATE = createField("ernodeb_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_datefrom</code>.
     */
    public final TableField<ErnodebRecord, Integer> ERNODEB_DATEFROM = createField("ernodeb_datefrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_errnc</code>.
     */
    public final TableField<ErnodebRecord, ULong> ERNODEB_ERRNC = createField("ernodeb_errnc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_node</code>.
     */
    public final TableField<ErnodebRecord, Integer> ERNODEB_NODE = createField("ernodeb_node", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_nodephysical</code>.
     */
    public final TableField<ErnodebRecord, Integer> ERNODEB_NODEPHYSICAL = createField("ernodeb_nodephysical", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_nodestatus</code>.
     */
    public final TableField<ErnodebRecord, Integer> ERNODEB_NODESTATUS = createField("ernodeb_nodestatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_revenueclass</code>.
     */
    public final TableField<ErnodebRecord, Integer> ERNODEB_REVENUECLASS = createField("ernodeb_revenueclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_vendor</code>.
     */
    public final TableField<ErnodebRecord, Integer> ERNODEB_VENDOR = createField("ernodeb_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ernodeb.ernodeb_namingvalid</code>.
     */
    public final TableField<ErnodebRecord, Byte> ERNODEB_NAMINGVALID = createField("ernodeb_namingvalid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.ernodeb.TOTALCELL</code>.
     */
    public final TableField<ErnodebRecord, Integer> TOTALCELL = createField("TOTALCELL", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ernodeb.EXPORTTIME</code>.
     */
    public final TableField<ErnodebRecord, String> EXPORTTIME = createField("EXPORTTIME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.NODEBID</code>.
     */
    public final TableField<ErnodebRecord, String> NODEBID = createField("NODEBID", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.IUBID</code>.
     */
    public final TableField<ErnodebRecord, String> IUBID = createField("IUBID", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.RBSID</code>.
     */
    public final TableField<ErnodebRecord, String> RBSID = createField("RBSID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ernodeb.NODEBNAME</code>.
     */
    public final TableField<ErnodebRecord, String> NODEBNAME = createField("NODEBNAME", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ernodeb.IUBLINK</code>.
     */
    public final TableField<ErnodebRecord, String> IUBLINK = createField("IUBLINK", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.ernodeb.TNLBEARERTYPE</code>.
     */
    public final TableField<ErnodebRecord, String> TNLBEARERTYPE = createField("TNLBEARERTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.TRANSDELAY</code>.
     */
    public final TableField<ErnodebRecord, String> TRANSDELAY = createField("TRANSDELAY", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.NODEBPROTCLVER</code>.
     */
    public final TableField<ErnodebRecord, String> NODEBPROTCLVER = createField("NODEBPROTCLVER", org.jooq.impl.SQLDataType.CHAR(12), this, "");

    /**
     * The column <code>chrono.ernodeb.SHARINGTYPE</code>.
     */
    public final TableField<ErnodebRecord, String> SHARINGTYPE = createField("SHARINGTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.HOSTTYPE</code>.
     */
    public final TableField<ErnodebRecord, String> HOSTTYPE = createField("HOSTTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.SIGNALCREATETYPE</code>.
     */
    public final TableField<ErnodebRecord, String> SIGNALCREATETYPE = createField("SIGNALCREATETYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.NBTRANTP</code>.
     */
    public final TableField<ErnodebRecord, String> NBTRANTP = createField("NBTRANTP", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.NBIPOAMIP</code>.
     */
    public final TableField<ErnodebRecord, String> NBIPOAMIP = createField("NBIPOAMIP", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.NBIPOAMMASK</code>.
     */
    public final TableField<ErnodebRecord, String> NBIPOAMMASK = createField("NBIPOAMMASK", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.IPSRN</code>.
     */
    public final TableField<ErnodebRecord, String> IPSRN = createField("IPSRN", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.IPSN</code>.
     */
    public final TableField<ErnodebRecord, String> IPSN = createField("IPSN", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.VLANFLAG</code>.
     */
    public final TableField<ErnodebRecord, String> VLANFLAG = createField("VLANFLAG", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.SLAVENBIPOAMIP</code>.
     */
    public final TableField<ErnodebRecord, String> SLAVENBIPOAMIP = createField("SLAVENBIPOAMIP", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.SLAVENBIPOAMMASK</code>.
     */
    public final TableField<ErnodebRecord, String> SLAVENBIPOAMMASK = createField("SLAVENBIPOAMMASK", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.ADMSTATE</code>.
     */
    public final TableField<ErnodebRecord, String> ADMSTATE = createField("ADMSTATE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.STATE</code>.
     */
    public final TableField<ErnodebRecord, String> STATE = createField("STATE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ernodeb.hwnodeb_remark</code>.
     */
    public final TableField<ErnodebRecord, String> HWNODEB_REMARK = createField("hwnodeb_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.ernodeb.userPlaneGbrAdmBandwidthDl</code>.
     */
    public final TableField<ErnodebRecord, String> USERPLANEGBRADMBANDWIDTHDL = createField("userPlaneGbrAdmBandwidthDl", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ernodeb.userPlaneGbrAdmBandwidthUl</code>.
     */
    public final TableField<ErnodebRecord, String> USERPLANEGBRADMBANDWIDTHUL = createField("userPlaneGbrAdmBandwidthUl", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ernodeb.EXTPROP1</code>.
     */
    public final TableField<ErnodebRecord, Integer> EXTPROP1 = createField("EXTPROP1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ernodeb.EXTPROP2</code>.
     */
    public final TableField<ErnodebRecord, String> EXTPROP2 = createField("EXTPROP2", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.ernodeb</code> table reference
     */
    public Ernodeb() {
        this(DSL.name("ernodeb"), null);
    }

    /**
     * Create an aliased <code>chrono.ernodeb</code> table reference
     */
    public Ernodeb(String alias) {
        this(DSL.name(alias), ERNODEB);
    }

    /**
     * Create an aliased <code>chrono.ernodeb</code> table reference
     */
    public Ernodeb(Name alias) {
        this(alias, ERNODEB);
    }

    private Ernodeb(Name alias, Table<ErnodebRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ernodeb(Name alias, Table<ErnodebRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ErnodebRecord> getPrimaryKey() {
        return Keys.KEY_ERNODEB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ErnodebRecord>> getKeys() {
        return Arrays.<UniqueKey<ErnodebRecord>>asList(Keys.KEY_ERNODEB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ernodeb as(String alias) {
        return new Ernodeb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ernodeb as(Name alias) {
        return new Ernodeb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ernodeb rename(String name) {
        return new Ernodeb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ernodeb rename(Name name) {
        return new Ernodeb(name, null);
    }
}
