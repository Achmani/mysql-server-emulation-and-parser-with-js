/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crcountry;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrcountryRecord extends UpdatableRecordImpl<CrcountryRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 793149183;

    /**
     * Setter for <code>chrono.crcountry.country_id</code>.
     */
    public void setCountryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crcountry.country_id</code>.
     */
    public Integer getCountryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crcountry.country_code</code>.
     */
    public void setCountryCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crcountry.country_code</code>.
     */
    public String getCountryCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chrono.crcountry.country_name</code>.
     */
    public void setCountryName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crcountry.country_name</code>.
     */
    public String getCountryName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chrono.crcountry.country_polygon</code>.
     */
    public void setCountryPolygon(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crcountry.country_polygon</code>.
     */
    public String getCountryPolygon() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crcountry.CRCOUNTRY.COUNTRY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Crcountry.CRCOUNTRY.COUNTRY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Crcountry.CRCOUNTRY.COUNTRY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Crcountry.CRCOUNTRY.COUNTRY_POLYGON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getCountryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCountryCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCountryName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCountryPolygon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCountryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCountryCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCountryName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCountryPolygon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcountryRecord value1(Integer value) {
        setCountryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcountryRecord value2(String value) {
        setCountryCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcountryRecord value3(String value) {
        setCountryName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcountryRecord value4(String value) {
        setCountryPolygon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcountryRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrcountryRecord
     */
    public CrcountryRecord() {
        super(Crcountry.CRCOUNTRY);
    }

    /**
     * Create a detached, initialised CrcountryRecord
     */
    public CrcountryRecord(Integer countryId, String countryCode, String countryName, String countryPolygon) {
        super(Crcountry.CRCOUNTRY);

        set(0, countryId);
        set(1, countryCode);
        set(2, countryName);
        set(3, countryPolygon);
    }
}
