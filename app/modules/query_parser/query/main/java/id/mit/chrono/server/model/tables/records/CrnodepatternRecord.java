/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crnodepattern;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrnodepatternRecord extends UpdatableRecordImpl<CrnodepatternRecord> implements Record8<Integer, Integer, Integer, Integer, String, String, String, Byte> {

    private static final long serialVersionUID = -1142810227;

    /**
     * Setter for <code>chrono.crnodepattern.nodepattern_id</code>.
     */
    public void setNodepatternId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crnodepattern.nodepattern_id</code>.
     */
    public Integer getNodepatternId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crnodepattern.nodepattern_vendor</code>.
     */
    public void setNodepatternVendor(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crnodepattern.nodepattern_vendor</code>.
     */
    public Integer getNodepatternVendor() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>chrono.crnodepattern.nodepattern_nodecategory</code>.
     */
    public void setNodepatternNodecategory(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crnodepattern.nodepattern_nodecategory</code>.
     */
    public Integer getNodepatternNodecategory() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>chrono.crnodepattern.nodepattern_order</code>.
     */
    public void setNodepatternOrder(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crnodepattern.nodepattern_order</code>.
     */
    public Integer getNodepatternOrder() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>chrono.crnodepattern.nodepattern_pattern</code>.
     */
    public void setNodepatternPattern(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crnodepattern.nodepattern_pattern</code>.
     */
    public String getNodepatternPattern() {
        return (String) get(4);
    }

    /**
     * Setter for <code>chrono.crnodepattern.nodepattern_sitepattern</code>.
     */
    public void setNodepatternSitepattern(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.crnodepattern.nodepattern_sitepattern</code>.
     */
    public String getNodepatternSitepattern() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chrono.crnodepattern.nodepattern_desc</code>.
     */
    public void setNodepatternDesc(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.crnodepattern.nodepattern_desc</code>.
     */
    public String getNodepatternDesc() {
        return (String) get(6);
    }

    /**
     * Setter for <code>chrono.crnodepattern.nodepattern_enabled</code>.
     */
    public void setNodepatternEnabled(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.crnodepattern.nodepattern_enabled</code>.
     */
    public Byte getNodepatternEnabled() {
        return (Byte) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, Integer, Integer, String, String, String, Byte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, Integer, Integer, String, String, String, Byte> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crnodepattern.CRNODEPATTERN.NODEPATTERN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Crnodepattern.CRNODEPATTERN.NODEPATTERN_VENDOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Crnodepattern.CRNODEPATTERN.NODEPATTERN_NODECATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Crnodepattern.CRNODEPATTERN.NODEPATTERN_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Crnodepattern.CRNODEPATTERN.NODEPATTERN_PATTERN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Crnodepattern.CRNODEPATTERN.NODEPATTERN_SITEPATTERN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Crnodepattern.CRNODEPATTERN.NODEPATTERN_DESC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return Crnodepattern.CRNODEPATTERN.NODEPATTERN_ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getNodepatternId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getNodepatternVendor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getNodepatternNodecategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getNodepatternOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getNodepatternPattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getNodepatternSitepattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getNodepatternDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component8() {
        return getNodepatternEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getNodepatternId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getNodepatternVendor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getNodepatternNodecategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getNodepatternOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getNodepatternPattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getNodepatternSitepattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getNodepatternDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getNodepatternEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord value1(Integer value) {
        setNodepatternId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord value2(Integer value) {
        setNodepatternVendor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord value3(Integer value) {
        setNodepatternNodecategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord value4(Integer value) {
        setNodepatternOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord value5(String value) {
        setNodepatternPattern(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord value6(String value) {
        setNodepatternSitepattern(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord value7(String value) {
        setNodepatternDesc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord value8(Byte value) {
        setNodepatternEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrnodepatternRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, String value6, String value7, Byte value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrnodepatternRecord
     */
    public CrnodepatternRecord() {
        super(Crnodepattern.CRNODEPATTERN);
    }

    /**
     * Create a detached, initialised CrnodepatternRecord
     */
    public CrnodepatternRecord(Integer nodepatternId, Integer nodepatternVendor, Integer nodepatternNodecategory, Integer nodepatternOrder, String nodepatternPattern, String nodepatternSitepattern, String nodepatternDesc, Byte nodepatternEnabled) {
        super(Crnodepattern.CRNODEPATTERN);

        set(0, nodepatternId);
        set(1, nodepatternVendor);
        set(2, nodepatternNodecategory);
        set(3, nodepatternOrder);
        set(4, nodepatternPattern);
        set(5, nodepatternSitepattern);
        set(6, nodepatternDesc);
        set(7, nodepatternEnabled);
    }
}
