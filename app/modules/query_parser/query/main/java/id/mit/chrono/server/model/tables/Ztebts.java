/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.ZtebtsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ztebts extends TableImpl<ZtebtsRecord> {

    private static final long serialVersionUID = 703164382;

    /**
     * The reference instance of <code>chrono.ztebts</code>
     */
    public static final Ztebts ZTEBTS = new Ztebts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ZtebtsRecord> getRecordType() {
        return ZtebtsRecord.class;
    }

    /**
     * The column <code>chrono.ztebts.ztebts_id</code>.
     */
    public final TableField<ZtebtsRecord, ULong> ZTEBTS_ID = createField("ztebts_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_crcollectortaskfiles</code>.
     */
    public final TableField<ZtebtsRecord, ULong> ZTEBTS_CRCOLLECTORTASKFILES = createField("ztebts_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_date</code>.
     */
    public final TableField<ZtebtsRecord, UInteger> ZTEBTS_DATE = createField("ztebts_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_datefrom</code>.
     */
    public final TableField<ZtebtsRecord, UInteger> ZTEBTS_DATEFROM = createField("ztebts_datefrom", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_ztebsc</code>.
     */
    public final TableField<ZtebtsRecord, ULong> ZTEBTS_ZTEBSC = createField("ztebts_ztebsc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_node</code>.
     */
    public final TableField<ZtebtsRecord, Integer> ZTEBTS_NODE = createField("ztebts_node", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_nodephysical</code>.
     */
    public final TableField<ZtebtsRecord, Integer> ZTEBTS_NODEPHYSICAL = createField("ztebts_nodephysical", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_nodestatus</code>.
     */
    public final TableField<ZtebtsRecord, Integer> ZTEBTS_NODESTATUS = createField("ztebts_nodestatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_revenueclass</code>.
     */
    public final TableField<ZtebtsRecord, Integer> ZTEBTS_REVENUECLASS = createField("ztebts_revenueclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_vendor</code>.
     */
    public final TableField<ZtebtsRecord, Integer> ZTEBTS_VENDOR = createField("ztebts_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_namingvalid</code>.
     */
    public final TableField<ZtebtsRecord, Byte> ZTEBTS_NAMINGVALID = createField("ztebts_namingvalid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.ztebts.TOTALCELL</code>.
     */
    public final TableField<ZtebtsRecord, Integer> TOTALCELL = createField("TOTALCELL", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebts.TOTALTRX</code>.
     */
    public final TableField<ZtebtsRecord, Integer> TOTALTRX = createField("TOTALTRX", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebts.BTSNAME</code>.
     */
    public final TableField<ZtebtsRecord, String> BTSNAME = createField("BTSNAME", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ztebts.MOI</code>.
     */
    public final TableField<ZtebtsRecord, String> MOI = createField("MOI", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ztebts.SubNetwork</code>.
     */
    public final TableField<ZtebtsRecord, String> SUBNETWORK = createField("SubNetwork", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztebts.MEID</code>.
     */
    public final TableField<ZtebtsRecord, String> MEID = createField("MEID", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztebts.GBssFunction</code>.
     */
    public final TableField<ZtebtsRecord, String> GBSSFUNCTION = createField("GBssFunction", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztebts.GBtsSiteManager</code>.
     */
    public final TableField<ZtebtsRecord, String> GBTSSITEMANAGER = createField("GBtsSiteManager", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztebts.userLabel</code>.
     */
    public final TableField<ZtebtsRecord, String> USERLABEL = createField("userLabel", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ztebts.description</code>.
     */
    public final TableField<ZtebtsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ztebts.MasterPwCtrlGNode</code>.
     */
    public final TableField<ZtebtsRecord, String> MASTERPWCTRLGNODE = createField("MasterPwCtrlGNode", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.refGBtsEquipment</code>.
     */
    public final TableField<ZtebtsRecord, String> REFGBTSEQUIPMENT = createField("refGBtsEquipment", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ztebts.CfgPagingRepSupport</code>.
     */
    public final TableField<ZtebtsRecord, String> CFGPAGINGREPSUPPORT = createField("CfgPagingRepSupport", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.SubCellHO</code>.
     */
    public final TableField<ZtebtsRecord, String> SUBCELLHO = createField("SubCellHO", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.SupNewAbisPsMsg</code>.
     */
    public final TableField<ZtebtsRecord, String> SUPNEWABISPSMSG = createField("SupNewAbisPsMsg", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.bwrestorelimit</code>.
     */
    public final TableField<ZtebtsRecord, String> BWRESTORELIMIT = createField("bwrestorelimit", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.frtohrbwlimit</code>.
     */
    public final TableField<ZtebtsRecord, String> FRTOHRBWLIMIT = createField("frtohrbwlimit", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.MinAccessAbisThsE1</code>.
     */
    public final TableField<ZtebtsRecord, String> MINACCESSABISTHSE1 = createField("MinAccessAbisThsE1", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.MinAccessAbisThsIP</code>.
     */
    public final TableField<ZtebtsRecord, String> MINACCESSABISTHSIP = createField("MinAccessAbisThsIP", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.BtsMasterPwCtrlOp</code>.
     */
    public final TableField<ZtebtsRecord, String> BTSMASTERPWCTRLOP = createField("BtsMasterPwCtrlOp", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.MasterPwrOffTime</code>.
     */
    public final TableField<ZtebtsRecord, String> MASTERPWROFFTIME = createField("MasterPwrOffTime", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.TrxOffTime</code>.
     */
    public final TableField<ZtebtsRecord, String> TRXOFFTIME = createField("TrxOffTime", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.TrxOffPercent</code>.
     */
    public final TableField<ZtebtsRecord, String> TRXOFFPERCENT = createField("TrxOffPercent", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.BenchmarkSite</code>.
     */
    public final TableField<ZtebtsRecord, String> BENCHMARKSITE = createField("BenchmarkSite", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztebts.Longitude</code>.
     */
    public final TableField<ZtebtsRecord, String> LONGITUDE = createField("Longitude", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.ztebts.Latitude</code>.
     */
    public final TableField<ZtebtsRecord, String> LATITUDE = createField("Latitude", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.ztebts.ztebts_remark</code>.
     */
    public final TableField<ZtebtsRecord, String> ZTEBTS_REMARK = createField("ztebts_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.ztebts.GSiteBaseBandShare</code>.
     */
    public final TableField<ZtebtsRecord, String> GSITEBASEBANDSHARE = createField("GSiteBaseBandShare", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ztebts.bbRequestTraThs</code>.
     */
    public final TableField<ZtebtsRecord, String> BBREQUESTTRATHS = createField("bbRequestTraThs", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ztebts.bbReleaseTraThs</code>.
     */
    public final TableField<ZtebtsRecord, String> BBRELEASETRATHS = createField("bbReleaseTraThs", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ztebts.bbOverThs</code>.
     */
    public final TableField<ZtebtsRecord, String> BBOVERTHS = createField("bbOverThs", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ztebts.bbLowerThs</code>.
     */
    public final TableField<ZtebtsRecord, String> BBLOWERTHS = createField("bbLowerThs", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ztebts.EXTPROP1</code>.
     */
    public final TableField<ZtebtsRecord, Integer> EXTPROP1 = createField("EXTPROP1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ztebts.EXTPROP2</code>.
     */
    public final TableField<ZtebtsRecord, String> EXTPROP2 = createField("EXTPROP2", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.ztebts</code> table reference
     */
    public Ztebts() {
        this(DSL.name("ztebts"), null);
    }

    /**
     * Create an aliased <code>chrono.ztebts</code> table reference
     */
    public Ztebts(String alias) {
        this(DSL.name(alias), ZTEBTS);
    }

    /**
     * Create an aliased <code>chrono.ztebts</code> table reference
     */
    public Ztebts(Name alias) {
        this(alias, ZTEBTS);
    }

    private Ztebts(Name alias, Table<ZtebtsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ztebts(Name alias, Table<ZtebtsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ZTEBTS_PRIMARY, Indexes.ZTEBTS_ZTEBTS_DATE, Indexes.ZTEBTS_ZTEBTS_DATE_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ZtebtsRecord> getPrimaryKey() {
        return Keys.KEY_ZTEBTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ZtebtsRecord>> getKeys() {
        return Arrays.<UniqueKey<ZtebtsRecord>>asList(Keys.KEY_ZTEBTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ztebts as(String alias) {
        return new Ztebts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ztebts as(Name alias) {
        return new Ztebts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ztebts rename(String name) {
        return new Ztebts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ztebts rename(Name name) {
        return new Ztebts(name, null);
    }
}
