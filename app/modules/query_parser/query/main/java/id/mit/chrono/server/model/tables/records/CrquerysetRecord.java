/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crqueryset;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrquerysetRecord extends UpdatableRecordImpl<CrquerysetRecord> implements Record13<UInteger, String, Integer, Integer, Integer, String, String, String, String, String, Integer, Byte, String> {

    private static final long serialVersionUID = 876071314;

    /**
     * Setter for <code>chrono.crqueryset.queryset_id</code>.
     */
    public void setQuerysetId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_id</code>.
     */
    public UInteger getQuerysetId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_code</code>.
     */
    public void setQuerysetCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_code</code>.
     */
    public String getQuerysetCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_vendor</code>.
     */
    public void setQuerysetVendor(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_vendor</code>.
     */
    public Integer getQuerysetVendor() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_datagroup</code>.
     */
    public void setQuerysetDatagroup(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_datagroup</code>.
     */
    public Integer getQuerysetDatagroup() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_datasourcetype</code>.
     */
    public void setQuerysetDatasourcetype(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_datasourcetype</code>.
     */
    public Integer getQuerysetDatasourcetype() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_entitygroup</code>.
     */
    public void setQuerysetEntitygroup(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_entitygroup</code>.
     */
    public String getQuerysetEntitygroup() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_entity</code>.
     */
    public void setQuerysetEntity(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_entity</code>.
     */
    public String getQuerysetEntity() {
        return (String) get(6);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_tabletarget</code>.
     */
    public void setQuerysetTabletarget(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_tabletarget</code>.
     */
    public String getQuerysetTabletarget() {
        return (String) get(7);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_mo_level</code>.
     */
    public void setQuerysetMoLevel(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_mo_level</code>.
     */
    public String getQuerysetMoLevel() {
        return (String) get(8);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_sql</code>.
     */
    public void setQuerysetSql(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_sql</code>.
     */
    public String getQuerysetSql() {
        return (String) get(9);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_nodecategory</code>.
     */
    public void setQuerysetNodecategory(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_nodecategory</code>.
     */
    public Integer getQuerysetNodecategory() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_enabled</code>.
     */
    public void setQuerysetEnabled(Byte value) {
        set(11, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_enabled</code>.
     */
    public Byte getQuerysetEnabled() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>chrono.crqueryset.queryset_description</code>.
     */
    public void setQuerysetDescription(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>chrono.crqueryset.queryset_description</code>.
     */
    public String getQuerysetDescription() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<UInteger, String, Integer, Integer, Integer, String, String, String, String, String, Integer, Byte, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<UInteger, String, Integer, Integer, Integer, String, String, String, String, String, Integer, Byte, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Crqueryset.CRQUERYSET.QUERYSET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Crqueryset.CRQUERYSET.QUERYSET_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Crqueryset.CRQUERYSET.QUERYSET_VENDOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Crqueryset.CRQUERYSET.QUERYSET_DATAGROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Crqueryset.CRQUERYSET.QUERYSET_DATASOURCETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Crqueryset.CRQUERYSET.QUERYSET_ENTITYGROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Crqueryset.CRQUERYSET.QUERYSET_ENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Crqueryset.CRQUERYSET.QUERYSET_TABLETARGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Crqueryset.CRQUERYSET.QUERYSET_MO_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Crqueryset.CRQUERYSET.QUERYSET_SQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Crqueryset.CRQUERYSET.QUERYSET_NODECATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field12() {
        return Crqueryset.CRQUERYSET.QUERYSET_ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Crqueryset.CRQUERYSET.QUERYSET_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getQuerysetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getQuerysetCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getQuerysetVendor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getQuerysetDatagroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getQuerysetDatasourcetype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getQuerysetEntitygroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getQuerysetEntity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getQuerysetTabletarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getQuerysetMoLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getQuerysetSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getQuerysetNodecategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component12() {
        return getQuerysetEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getQuerysetDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getQuerysetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getQuerysetCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getQuerysetVendor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getQuerysetDatagroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getQuerysetDatasourcetype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getQuerysetEntitygroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getQuerysetEntity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getQuerysetTabletarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getQuerysetMoLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getQuerysetSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getQuerysetNodecategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value12() {
        return getQuerysetEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getQuerysetDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value1(UInteger value) {
        setQuerysetId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value2(String value) {
        setQuerysetCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value3(Integer value) {
        setQuerysetVendor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value4(Integer value) {
        setQuerysetDatagroup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value5(Integer value) {
        setQuerysetDatasourcetype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value6(String value) {
        setQuerysetEntitygroup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value7(String value) {
        setQuerysetEntity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value8(String value) {
        setQuerysetTabletarget(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value9(String value) {
        setQuerysetMoLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value10(String value) {
        setQuerysetSql(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value11(Integer value) {
        setQuerysetNodecategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value12(Byte value) {
        setQuerysetEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord value13(String value) {
        setQuerysetDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrquerysetRecord values(UInteger value1, String value2, Integer value3, Integer value4, Integer value5, String value6, String value7, String value8, String value9, String value10, Integer value11, Byte value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrquerysetRecord
     */
    public CrquerysetRecord() {
        super(Crqueryset.CRQUERYSET);
    }

    /**
     * Create a detached, initialised CrquerysetRecord
     */
    public CrquerysetRecord(UInteger querysetId, String querysetCode, Integer querysetVendor, Integer querysetDatagroup, Integer querysetDatasourcetype, String querysetEntitygroup, String querysetEntity, String querysetTabletarget, String querysetMoLevel, String querysetSql, Integer querysetNodecategory, Byte querysetEnabled, String querysetDescription) {
        super(Crqueryset.CRQUERYSET);

        set(0, querysetId);
        set(1, querysetCode);
        set(2, querysetVendor);
        set(3, querysetDatagroup);
        set(4, querysetDatasourcetype);
        set(5, querysetEntitygroup);
        set(6, querysetEntity);
        set(7, querysetTabletarget);
        set(8, querysetMoLevel);
        set(9, querysetSql);
        set(10, querysetNodecategory);
        set(11, querysetEnabled);
        set(12, querysetDescription);
    }
}
