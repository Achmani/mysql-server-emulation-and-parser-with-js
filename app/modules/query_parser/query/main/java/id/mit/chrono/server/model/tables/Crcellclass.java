/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrcellclassRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crcellclass extends TableImpl<CrcellclassRecord> {

    private static final long serialVersionUID = 45012201;

    /**
     * The reference instance of <code>chrono.crcellclass</code>
     */
    public static final Crcellclass CRCELLCLASS = new Crcellclass();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrcellclassRecord> getRecordType() {
        return CrcellclassRecord.class;
    }

    /**
     * The column <code>chrono.crcellclass.cellclass_id</code>.
     */
    public final TableField<CrcellclassRecord, UInteger> CELLCLASS_ID = createField("cellclass_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_code</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_CODE = createField("cellclass_code", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_rat</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_RAT = createField("cellclass_rat", org.jooq.impl.SQLDataType.CHAR(8).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_rattype</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_RATTYPE = createField("cellclass_rattype", org.jooq.impl.SQLDataType.CHAR(8).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_multiplex</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_MULTIPLEX = createField("cellclass_multiplex", org.jooq.impl.SQLDataType.CHAR(8).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_label1</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_LABEL1 = createField("cellclass_label1", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_label2</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_LABEL2 = createField("cellclass_label2", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_freq</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_FREQ = createField("cellclass_freq", org.jooq.impl.SQLDataType.CHAR(16).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_lookup</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_LOOKUP = createField("cellclass_lookup", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_vallookup</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_VALLOOKUP = createField("cellclass_vallookup", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_necodesuffix</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_NECODESUFFIX = createField("cellclass_necodesuffix", org.jooq.impl.SQLDataType.CHAR(8).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_necodesuffixmixed</code>.
     */
    public final TableField<CrcellclassRecord, String> CELLCLASS_NECODESUFFIXMIXED = createField("cellclass_necodesuffixmixed", org.jooq.impl.SQLDataType.CHAR(8).nullable(false), this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_band</code>.
     */
    public final TableField<CrcellclassRecord, Integer> CELLCLASS_BAND = createField("cellclass_band", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_dlonly</code>.
     */
    public final TableField<CrcellclassRecord, Byte> CELLCLASS_DLONLY = createField("cellclass_dlonly", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_fdllow</code>.
     */
    public final TableField<CrcellclassRecord, Double> CELLCLASS_FDLLOW = createField("cellclass_fdllow", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_fdlhigh</code>.
     */
    public final TableField<CrcellclassRecord, Double> CELLCLASS_FDLHIGH = createField("cellclass_fdlhigh", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_ndlmin</code>.
     */
    public final TableField<CrcellclassRecord, Double> CELLCLASS_NDLMIN = createField("cellclass_ndlmin", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_ndlmax</code>.
     */
    public final TableField<CrcellclassRecord, Double> CELLCLASS_NDLMAX = createField("cellclass_ndlmax", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_fullow</code>.
     */
    public final TableField<CrcellclassRecord, Double> CELLCLASS_FULLOW = createField("cellclass_fullow", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_fulhigh</code>.
     */
    public final TableField<CrcellclassRecord, Double> CELLCLASS_FULHIGH = createField("cellclass_fulhigh", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_nulmin</code>.
     */
    public final TableField<CrcellclassRecord, Double> CELLCLASS_NULMIN = createField("cellclass_nulmin", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.crcellclass.cellclass_nulhigh</code>.
     */
    public final TableField<CrcellclassRecord, Double> CELLCLASS_NULHIGH = createField("cellclass_nulhigh", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>chrono.crcellclass</code> table reference
     */
    public Crcellclass() {
        this(DSL.name("crcellclass"), null);
    }

    /**
     * Create an aliased <code>chrono.crcellclass</code> table reference
     */
    public Crcellclass(String alias) {
        this(DSL.name(alias), CRCELLCLASS);
    }

    /**
     * Create an aliased <code>chrono.crcellclass</code> table reference
     */
    public Crcellclass(Name alias) {
        this(alias, CRCELLCLASS);
    }

    private Crcellclass(Name alias, Table<CrcellclassRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crcellclass(Name alias, Table<CrcellclassRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRCELLCLASS_CELLCLASS_CODE, Indexes.CRCELLCLASS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrcellclassRecord> getPrimaryKey() {
        return Keys.KEY_CRCELLCLASS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrcellclassRecord>> getKeys() {
        return Arrays.<UniqueKey<CrcellclassRecord>>asList(Keys.KEY_CRCELLCLASS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcellclass as(String alias) {
        return new Crcellclass(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcellclass as(Name alias) {
        return new Crcellclass(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcellclass rename(String name) {
        return new Crcellclass(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcellclass rename(Name name) {
        return new Crcellclass(name, null);
    }
}
