/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crcollectorstatus;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrcollectorstatusRecord extends UpdatableRecordImpl<CrcollectorstatusRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1466167039;

    /**
     * Setter for <code>chrono.crcollectorstatus.collectorstatus_id</code>.
     */
    public void setCollectorstatusId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crcollectorstatus.collectorstatus_id</code>.
     */
    public Integer getCollectorstatusId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crcollectorstatus.collectorstatus_code</code>.
     */
    public void setCollectorstatusCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crcollectorstatus.collectorstatus_code</code>.
     */
    public String getCollectorstatusCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chrono.crcollectorstatus.collectorstatus_name</code>.
     */
    public void setCollectorstatusName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crcollectorstatus.collectorstatus_name</code>.
     */
    public String getCollectorstatusName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crcollectorstatus.CRCOLLECTORSTATUS.COLLECTORSTATUS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Crcollectorstatus.CRCOLLECTORSTATUS.COLLECTORSTATUS_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Crcollectorstatus.CRCOLLECTORSTATUS.COLLECTORSTATUS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getCollectorstatusId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCollectorstatusCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCollectorstatusName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCollectorstatusId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCollectorstatusCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCollectorstatusName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcollectorstatusRecord value1(Integer value) {
        setCollectorstatusId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcollectorstatusRecord value2(String value) {
        setCollectorstatusCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcollectorstatusRecord value3(String value) {
        setCollectorstatusName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcollectorstatusRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrcollectorstatusRecord
     */
    public CrcollectorstatusRecord() {
        super(Crcollectorstatus.CRCOLLECTORSTATUS);
    }

    /**
     * Create a detached, initialised CrcollectorstatusRecord
     */
    public CrcollectorstatusRecord(Integer collectorstatusId, String collectorstatusCode, String collectorstatusName) {
        super(Crcollectorstatus.CRCOLLECTORSTATUS);

        set(0, collectorstatusId);
        set(1, collectorstatusCode);
        set(2, collectorstatusName);
    }
}
