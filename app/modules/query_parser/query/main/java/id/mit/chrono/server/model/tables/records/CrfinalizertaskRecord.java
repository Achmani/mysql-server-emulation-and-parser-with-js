/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crfinalizertask;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrfinalizertaskRecord extends UpdatableRecordImpl<CrfinalizertaskRecord> implements Record10<Integer, String, String, String, String, String, String, String, String, Byte> {

    private static final long serialVersionUID = -207799662;

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_id</code>.
     */
    public void setFinalizertaskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_id</code>.
     */
    public Integer getFinalizertaskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_code</code>.
     */
    public void setFinalizertaskCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_code</code>.
     */
    public String getFinalizertaskCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_tasktype</code>.
     */
    public void setFinalizertaskTasktype(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_tasktype</code>.
     */
    public String getFinalizertaskTasktype() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_query</code>.
     */
    public void setFinalizertaskQuery(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_query</code>.
     */
    public String getFinalizertaskQuery() {
        return (String) get(3);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_name</code>.
     */
    public void setFinalizertaskName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_name</code>.
     */
    public String getFinalizertaskName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_columns</code>.
     */
    public void setFinalizertaskColumns(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_columns</code>.
     */
    public String getFinalizertaskColumns() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_columnstarget</code>.
     */
    public void setFinalizertaskColumnstarget(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_columnstarget</code>.
     */
    public String getFinalizertaskColumnstarget() {
        return (String) get(6);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_customtarget</code>.
     */
    public void setFinalizertaskCustomtarget(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_customtarget</code>.
     */
    public String getFinalizertaskCustomtarget() {
        return (String) get(7);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_customfunction</code>.
     */
    public void setFinalizertaskCustomfunction(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_customfunction</code>.
     */
    public String getFinalizertaskCustomfunction() {
        return (String) get(8);
    }

    /**
     * Setter for <code>chrono.crfinalizertask.finalizertask_enabled</code>.
     */
    public void setFinalizertaskEnabled(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.crfinalizertask.finalizertask_enabled</code>.
     */
    public Byte getFinalizertaskEnabled() {
        return (Byte) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, String, String, String, String, String, String, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, String, String, String, String, String, String, Byte> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_TASKTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_QUERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_COLUMNS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_COLUMNSTARGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_CUSTOMTARGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_CUSTOMFUNCTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return Crfinalizertask.CRFINALIZERTASK.FINALIZERTASK_ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getFinalizertaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getFinalizertaskCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getFinalizertaskTasktype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getFinalizertaskQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getFinalizertaskName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getFinalizertaskColumns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getFinalizertaskColumnstarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getFinalizertaskCustomtarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getFinalizertaskCustomfunction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component10() {
        return getFinalizertaskEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getFinalizertaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getFinalizertaskCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getFinalizertaskTasktype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFinalizertaskQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getFinalizertaskName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFinalizertaskColumns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getFinalizertaskColumnstarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getFinalizertaskCustomtarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getFinalizertaskCustomfunction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getFinalizertaskEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value1(Integer value) {
        setFinalizertaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value2(String value) {
        setFinalizertaskCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value3(String value) {
        setFinalizertaskTasktype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value4(String value) {
        setFinalizertaskQuery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value5(String value) {
        setFinalizertaskName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value6(String value) {
        setFinalizertaskColumns(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value7(String value) {
        setFinalizertaskColumnstarget(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value8(String value) {
        setFinalizertaskCustomtarget(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value9(String value) {
        setFinalizertaskCustomfunction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord value10(Byte value) {
        setFinalizertaskEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrfinalizertaskRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, Byte value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrfinalizertaskRecord
     */
    public CrfinalizertaskRecord() {
        super(Crfinalizertask.CRFINALIZERTASK);
    }

    /**
     * Create a detached, initialised CrfinalizertaskRecord
     */
    public CrfinalizertaskRecord(Integer finalizertaskId, String finalizertaskCode, String finalizertaskTasktype, String finalizertaskQuery, String finalizertaskName, String finalizertaskColumns, String finalizertaskColumnstarget, String finalizertaskCustomtarget, String finalizertaskCustomfunction, Byte finalizertaskEnabled) {
        super(Crfinalizertask.CRFINALIZERTASK);

        set(0, finalizertaskId);
        set(1, finalizertaskCode);
        set(2, finalizertaskTasktype);
        set(3, finalizertaskQuery);
        set(4, finalizertaskName);
        set(5, finalizertaskColumns);
        set(6, finalizertaskColumnstarget);
        set(7, finalizertaskCustomtarget);
        set(8, finalizertaskCustomfunction);
        set(9, finalizertaskEnabled);
    }
}
