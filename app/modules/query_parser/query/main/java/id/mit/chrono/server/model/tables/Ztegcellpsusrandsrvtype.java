/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.ZtegcellpsusrandsrvtypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ztegcellpsusrandsrvtype extends TableImpl<ZtegcellpsusrandsrvtypeRecord> {

    private static final long serialVersionUID = 813311358;

    /**
     * The reference instance of <code>chrono.ztegcellpsusrandsrvtype</code>
     */
    public static final Ztegcellpsusrandsrvtype ZTEGCELLPSUSRANDSRVTYPE = new Ztegcellpsusrandsrvtype();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ZtegcellpsusrandsrvtypeRecord> getRecordType() {
        return ZtegcellpsusrandsrvtypeRecord.class;
    }

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ztegcellpsusrandsrvtype_id</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, ULong> ZTEGCELLPSUSRANDSRVTYPE_ID = createField("ztegcellpsusrandsrvtype_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ztegcellpsusrandsrvtype_crcollectortaskfiles</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, ULong> ZTEGCELLPSUSRANDSRVTYPE_CRCOLLECTORTASKFILES = createField("ztegcellpsusrandsrvtype_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ztegcellpsusrandsrvtype_date</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, UInteger> ZTEGCELLPSUSRANDSRVTYPE_DATE = createField("ztegcellpsusrandsrvtype_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ztegcellpsusrandsrvtype_datefrom</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, UInteger> ZTEGCELLPSUSRANDSRVTYPE_DATEFROM = createField("ztegcellpsusrandsrvtype_datefrom", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ztegcellpsusrandsrvtype_ztebsc</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, ULong> ZTEGCELLPSUSRANDSRVTYPE_ZTEBSC = createField("ztegcellpsusrandsrvtype_ztebsc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ztegcellpsusrandsrvtype_ztebts</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, ULong> ZTEGCELLPSUSRANDSRVTYPE_ZTEBTS = createField("ztegcellpsusrandsrvtype_ztebts", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ztegcellpsusrandsrvtype_ztegcell</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, ULong> ZTEGCELLPSUSRANDSRVTYPE_ZTEGCELL = createField("ztegcellpsusrandsrvtype_ztegcell", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.MOI</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> MOI = createField("MOI", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.SubNetwork</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> SUBNETWORK = createField("SubNetwork", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.MEID</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> MEID = createField("MEID", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.GBssFunction</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> GBSSFUNCTION = createField("GBssFunction", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.GBtsSiteManager</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> GBTSSITEMANAGER = createField("GBtsSiteManager", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.GGsmCell</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> GGSMCELL = createField("GGsmCell", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.GCellPs</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> GCELLPS = createField("GCellPs", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.GPsUserAndSrvType</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> GPSUSERANDSRVTYPE = createField("GPsUserAndSrvType", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.userType</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> USERTYPE = createField("userType", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ServType</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> SERVTYPE = createField("ServType", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.SchedulePriority</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> SCHEDULEPRIORITY = createField("SchedulePriority", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.DlDelayTimeOfService</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> DLDELAYTIMEOFSERVICE = createField("DlDelayTimeOfService", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.TBFNum</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> TBFNUM = createField("TBFNum", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.MaxPdtchNum</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> MAXPDTCHNUM = createField("MaxPdtchNum", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.PreemptPriority</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> PREEMPTPRIORITY = createField("PreemptPriority", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.TimeSlotOff</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> TIMESLOTOFF = createField("TimeSlotOff", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ztegcellpsusrandsrvtype.ForceRel</code>.
     */
    public final TableField<ZtegcellpsusrandsrvtypeRecord, String> FORCEREL = createField("ForceRel", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.ztegcellpsusrandsrvtype</code> table reference
     */
    public Ztegcellpsusrandsrvtype() {
        this(DSL.name("ztegcellpsusrandsrvtype"), null);
    }

    /**
     * Create an aliased <code>chrono.ztegcellpsusrandsrvtype</code> table reference
     */
    public Ztegcellpsusrandsrvtype(String alias) {
        this(DSL.name(alias), ZTEGCELLPSUSRANDSRVTYPE);
    }

    /**
     * Create an aliased <code>chrono.ztegcellpsusrandsrvtype</code> table reference
     */
    public Ztegcellpsusrandsrvtype(Name alias) {
        this(alias, ZTEGCELLPSUSRANDSRVTYPE);
    }

    private Ztegcellpsusrandsrvtype(Name alias, Table<ZtegcellpsusrandsrvtypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ztegcellpsusrandsrvtype(Name alias, Table<ZtegcellpsusrandsrvtypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ZtegcellpsusrandsrvtypeRecord> getPrimaryKey() {
        return Keys.KEY_ZTEGCELLPSUSRANDSRVTYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ZtegcellpsusrandsrvtypeRecord>> getKeys() {
        return Arrays.<UniqueKey<ZtegcellpsusrandsrvtypeRecord>>asList(Keys.KEY_ZTEGCELLPSUSRANDSRVTYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ztegcellpsusrandsrvtype as(String alias) {
        return new Ztegcellpsusrandsrvtype(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ztegcellpsusrandsrvtype as(Name alias) {
        return new Ztegcellpsusrandsrvtype(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ztegcellpsusrandsrvtype rename(String name) {
        return new Ztegcellpsusrandsrvtype(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ztegcellpsusrandsrvtype rename(Name name) {
        return new Ztegcellpsusrandsrvtype(name, null);
    }
}
