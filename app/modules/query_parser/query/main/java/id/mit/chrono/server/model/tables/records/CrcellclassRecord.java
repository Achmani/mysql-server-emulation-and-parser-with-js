/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crcellclass;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrcellclassRecord extends UpdatableRecordImpl<CrcellclassRecord> implements Record22<UInteger, String, String, String, String, String, String, String, String, String, String, String, Integer, Byte, Double, Double, Double, Double, Double, Double, Double, Double> {

    private static final long serialVersionUID = 1681081067;

    /**
     * Setter for <code>chrono.crcellclass.cellclass_id</code>.
     */
    public void setCellclassId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_id</code>.
     */
    public UInteger getCellclassId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_code</code>.
     */
    public void setCellclassCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_code</code>.
     */
    public String getCellclassCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_rat</code>.
     */
    public void setCellclassRat(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_rat</code>.
     */
    public String getCellclassRat() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_rattype</code>.
     */
    public void setCellclassRattype(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_rattype</code>.
     */
    public String getCellclassRattype() {
        return (String) get(3);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_multiplex</code>.
     */
    public void setCellclassMultiplex(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_multiplex</code>.
     */
    public String getCellclassMultiplex() {
        return (String) get(4);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_label1</code>.
     */
    public void setCellclassLabel1(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_label1</code>.
     */
    public String getCellclassLabel1() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_label2</code>.
     */
    public void setCellclassLabel2(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_label2</code>.
     */
    public String getCellclassLabel2() {
        return (String) get(6);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_freq</code>.
     */
    public void setCellclassFreq(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_freq</code>.
     */
    public String getCellclassFreq() {
        return (String) get(7);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_lookup</code>.
     */
    public void setCellclassLookup(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_lookup</code>.
     */
    public String getCellclassLookup() {
        return (String) get(8);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_vallookup</code>.
     */
    public void setCellclassVallookup(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_vallookup</code>.
     */
    public String getCellclassVallookup() {
        return (String) get(9);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_necodesuffix</code>.
     */
    public void setCellclassNecodesuffix(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_necodesuffix</code>.
     */
    public String getCellclassNecodesuffix() {
        return (String) get(10);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_necodesuffixmixed</code>.
     */
    public void setCellclassNecodesuffixmixed(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_necodesuffixmixed</code>.
     */
    public String getCellclassNecodesuffixmixed() {
        return (String) get(11);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_band</code>.
     */
    public void setCellclassBand(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_band</code>.
     */
    public Integer getCellclassBand() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_dlonly</code>.
     */
    public void setCellclassDlonly(Byte value) {
        set(13, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_dlonly</code>.
     */
    public Byte getCellclassDlonly() {
        return (Byte) get(13);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_fdllow</code>.
     */
    public void setCellclassFdllow(Double value) {
        set(14, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_fdllow</code>.
     */
    public Double getCellclassFdllow() {
        return (Double) get(14);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_fdlhigh</code>.
     */
    public void setCellclassFdlhigh(Double value) {
        set(15, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_fdlhigh</code>.
     */
    public Double getCellclassFdlhigh() {
        return (Double) get(15);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_ndlmin</code>.
     */
    public void setCellclassNdlmin(Double value) {
        set(16, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_ndlmin</code>.
     */
    public Double getCellclassNdlmin() {
        return (Double) get(16);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_ndlmax</code>.
     */
    public void setCellclassNdlmax(Double value) {
        set(17, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_ndlmax</code>.
     */
    public Double getCellclassNdlmax() {
        return (Double) get(17);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_fullow</code>.
     */
    public void setCellclassFullow(Double value) {
        set(18, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_fullow</code>.
     */
    public Double getCellclassFullow() {
        return (Double) get(18);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_fulhigh</code>.
     */
    public void setCellclassFulhigh(Double value) {
        set(19, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_fulhigh</code>.
     */
    public Double getCellclassFulhigh() {
        return (Double) get(19);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_nulmin</code>.
     */
    public void setCellclassNulmin(Double value) {
        set(20, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_nulmin</code>.
     */
    public Double getCellclassNulmin() {
        return (Double) get(20);
    }

    /**
     * Setter for <code>chrono.crcellclass.cellclass_nulhigh</code>.
     */
    public void setCellclassNulhigh(Double value) {
        set(21, value);
    }

    /**
     * Getter for <code>chrono.crcellclass.cellclass_nulhigh</code>.
     */
    public Double getCellclassNulhigh() {
        return (Double) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<UInteger, String, String, String, String, String, String, String, String, String, String, String, Integer, Byte, Double, Double, Double, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<UInteger, String, String, String, String, String, String, String, String, String, String, String, Integer, Byte, Double, Double, Double, Double, Double, Double, Double, Double> valuesRow() {
        return (Row22) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_RAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_RATTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_MULTIPLEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_LABEL1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_LABEL2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_FREQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_LOOKUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_VALLOOKUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_NECODESUFFIX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_NECODESUFFIXMIXED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_BAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field14() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_DLONLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field15() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_FDLLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field16() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_FDLHIGH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field17() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_NDLMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field18() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_NDLMAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field19() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_FULLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field20() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_FULHIGH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field21() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_NULMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field22() {
        return Crcellclass.CRCELLCLASS.CELLCLASS_NULHIGH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getCellclassId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCellclassCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCellclassRat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCellclassRattype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCellclassMultiplex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getCellclassLabel1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getCellclassLabel2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getCellclassFreq();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getCellclassLookup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getCellclassVallookup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getCellclassNecodesuffix();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getCellclassNecodesuffixmixed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getCellclassBand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component14() {
        return getCellclassDlonly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component15() {
        return getCellclassFdllow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component16() {
        return getCellclassFdlhigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component17() {
        return getCellclassNdlmin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component18() {
        return getCellclassNdlmax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component19() {
        return getCellclassFullow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component20() {
        return getCellclassFulhigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component21() {
        return getCellclassNulmin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component22() {
        return getCellclassNulhigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getCellclassId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCellclassCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCellclassRat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCellclassRattype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCellclassMultiplex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCellclassLabel1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getCellclassLabel2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getCellclassFreq();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getCellclassLookup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getCellclassVallookup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getCellclassNecodesuffix();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getCellclassNecodesuffixmixed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getCellclassBand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value14() {
        return getCellclassDlonly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value15() {
        return getCellclassFdllow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value16() {
        return getCellclassFdlhigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value17() {
        return getCellclassNdlmin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value18() {
        return getCellclassNdlmax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value19() {
        return getCellclassFullow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value20() {
        return getCellclassFulhigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value21() {
        return getCellclassNulmin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value22() {
        return getCellclassNulhigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value1(UInteger value) {
        setCellclassId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value2(String value) {
        setCellclassCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value3(String value) {
        setCellclassRat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value4(String value) {
        setCellclassRattype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value5(String value) {
        setCellclassMultiplex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value6(String value) {
        setCellclassLabel1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value7(String value) {
        setCellclassLabel2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value8(String value) {
        setCellclassFreq(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value9(String value) {
        setCellclassLookup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value10(String value) {
        setCellclassVallookup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value11(String value) {
        setCellclassNecodesuffix(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value12(String value) {
        setCellclassNecodesuffixmixed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value13(Integer value) {
        setCellclassBand(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value14(Byte value) {
        setCellclassDlonly(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value15(Double value) {
        setCellclassFdllow(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value16(Double value) {
        setCellclassFdlhigh(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value17(Double value) {
        setCellclassNdlmin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value18(Double value) {
        setCellclassNdlmax(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value19(Double value) {
        setCellclassFullow(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value20(Double value) {
        setCellclassFulhigh(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value21(Double value) {
        setCellclassNulmin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord value22(Double value) {
        setCellclassNulhigh(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrcellclassRecord values(UInteger value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, Integer value13, Byte value14, Double value15, Double value16, Double value17, Double value18, Double value19, Double value20, Double value21, Double value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrcellclassRecord
     */
    public CrcellclassRecord() {
        super(Crcellclass.CRCELLCLASS);
    }

    /**
     * Create a detached, initialised CrcellclassRecord
     */
    public CrcellclassRecord(UInteger cellclassId, String cellclassCode, String cellclassRat, String cellclassRattype, String cellclassMultiplex, String cellclassLabel1, String cellclassLabel2, String cellclassFreq, String cellclassLookup, String cellclassVallookup, String cellclassNecodesuffix, String cellclassNecodesuffixmixed, Integer cellclassBand, Byte cellclassDlonly, Double cellclassFdllow, Double cellclassFdlhigh, Double cellclassNdlmin, Double cellclassNdlmax, Double cellclassFullow, Double cellclassFulhigh, Double cellclassNulmin, Double cellclassNulhigh) {
        super(Crcellclass.CRCELLCLASS);

        set(0, cellclassId);
        set(1, cellclassCode);
        set(2, cellclassRat);
        set(3, cellclassRattype);
        set(4, cellclassMultiplex);
        set(5, cellclassLabel1);
        set(6, cellclassLabel2);
        set(7, cellclassFreq);
        set(8, cellclassLookup);
        set(9, cellclassVallookup);
        set(10, cellclassNecodesuffix);
        set(11, cellclassNecodesuffixmixed);
        set(12, cellclassBand);
        set(13, cellclassDlonly);
        set(14, cellclassFdllow);
        set(15, cellclassFdlhigh);
        set(16, cellclassNdlmin);
        set(17, cellclassNdlmax);
        set(18, cellclassFullow);
        set(19, cellclassFulhigh);
        set(20, cellclassNulmin);
        set(21, cellclassNulhigh);
    }
}
