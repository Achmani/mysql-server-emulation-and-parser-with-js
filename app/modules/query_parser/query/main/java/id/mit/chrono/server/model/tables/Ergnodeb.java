/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.ErgnodebRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ergnodeb extends TableImpl<ErgnodebRecord> {

    private static final long serialVersionUID = -910403388;

    /**
     * The reference instance of <code>chrono.ergnodeb</code>
     */
    public static final Ergnodeb ERGNODEB = new Ergnodeb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ErgnodebRecord> getRecordType() {
        return ErgnodebRecord.class;
    }

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_id</code>.
     */
    public final TableField<ErgnodebRecord, ULong> ERGNODEB_ID = createField("ergnodeb_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_crcollectortaskfiles</code>.
     */
    public final TableField<ErgnodebRecord, ULong> ERGNODEB_CRCOLLECTORTASKFILES = createField("ergnodeb_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_date</code>.
     */
    public final TableField<ErgnodebRecord, UInteger> ERGNODEB_DATE = createField("ergnodeb_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_datefrom</code>.
     */
    public final TableField<ErgnodebRecord, Integer> ERGNODEB_DATEFROM = createField("ergnodeb_datefrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_node</code>.
     */
    public final TableField<ErgnodebRecord, Integer> ERGNODEB_NODE = createField("ergnodeb_node", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_nodephysical</code>.
     */
    public final TableField<ErgnodebRecord, Integer> ERGNODEB_NODEPHYSICAL = createField("ergnodeb_nodephysical", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_nodestatus</code>.
     */
    public final TableField<ErgnodebRecord, Integer> ERGNODEB_NODESTATUS = createField("ergnodeb_nodestatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_revenueclass</code>.
     */
    public final TableField<ErgnodebRecord, Integer> ERGNODEB_REVENUECLASS = createField("ergnodeb_revenueclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_vendor</code>.
     */
    public final TableField<ErgnodebRecord, Integer> ERGNODEB_VENDOR = createField("ergnodeb_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_namingvalid</code>.
     */
    public final TableField<ErgnodebRecord, Byte> ERGNODEB_NAMINGVALID = createField("ergnodeb_namingvalid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.ergnodeb.TOTALCELL</code>.
     */
    public final TableField<ErgnodebRecord, Integer> TOTALCELL = createField("TOTALCELL", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.ergnodeb.GNODEBID</code>.
     */
    public final TableField<ErgnodebRecord, String> GNODEBID = createField("GNODEBID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.ergnodeb.GNODEBFUNCTIONNAME</code>.
     */
    public final TableField<ErgnodebRecord, String> GNODEBFUNCTIONNAME = createField("GNODEBFUNCTIONNAME", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ergnodeb.MANAGEDELEMENTTYPE</code>.
     */
    public final TableField<ErgnodebRecord, String> MANAGEDELEMENTTYPE = createField("MANAGEDELEMENTTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ergnodeb.SWVERSION</code>.
     */
    public final TableField<ErgnodebRecord, String> SWVERSION = createField("SWVERSION", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ergnodeb.SUBNETWORK</code>.
     */
    public final TableField<ErgnodebRecord, String> SUBNETWORK = createField("SUBNETWORK", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ergnodeb.SITEREF</code>.
     */
    public final TableField<ErgnodebRecord, String> SITEREF = createField("SITEREF", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.ergnodeb.PRODUCTTYPE</code>.
     */
    public final TableField<ErgnodebRecord, String> PRODUCTTYPE = createField("PRODUCTTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ergnodeb.PRODUCTNAME</code>.
     */
    public final TableField<ErgnodebRecord, String> PRODUCTNAME = createField("PRODUCTNAME", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ergnodeb.CABINETINFO</code>.
     */
    public final TableField<ErgnodebRecord, String> CABINETINFO = createField("CABINETINFO", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.ergnodeb.MCC</code>.
     */
    public final TableField<ErgnodebRecord, String> MCC = createField("MCC", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ergnodeb.MNC</code>.
     */
    public final TableField<ErgnodebRecord, String> MNC = createField("MNC", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ergnodeb.GGNODEBID</code>.
     */
    public final TableField<ErgnodebRecord, String> GGNODEBID = createField("GGNODEBID", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.ergnodeb.TIMEZONE</code>.
     */
    public final TableField<ErgnodebRecord, String> TIMEZONE = createField("TIMEZONE", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.ergnodeb.NODEIPADDRESS</code>.
     */
    public final TableField<ErgnodebRecord, String> NODEIPADDRESS = createField("NODEIPADDRESS", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ergnodeb.ADMSTATE</code>.
     */
    public final TableField<ErgnodebRecord, String> ADMSTATE = createField("ADMSTATE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.ergnodeb.ergnodeb_remark</code>.
     */
    public final TableField<ErgnodebRecord, String> ERGNODEB_REMARK = createField("ergnodeb_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>chrono.ergnodeb</code> table reference
     */
    public Ergnodeb() {
        this(DSL.name("ergnodeb"), null);
    }

    /**
     * Create an aliased <code>chrono.ergnodeb</code> table reference
     */
    public Ergnodeb(String alias) {
        this(DSL.name(alias), ERGNODEB);
    }

    /**
     * Create an aliased <code>chrono.ergnodeb</code> table reference
     */
    public Ergnodeb(Name alias) {
        this(alias, ERGNODEB);
    }

    private Ergnodeb(Name alias, Table<ErgnodebRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ergnodeb(Name alias, Table<ErgnodebRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ErgnodebRecord> getPrimaryKey() {
        return Keys.KEY_ERGNODEB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ErgnodebRecord>> getKeys() {
        return Arrays.<UniqueKey<ErgnodebRecord>>asList(Keys.KEY_ERGNODEB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ergnodeb as(String alias) {
        return new Ergnodeb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ergnodeb as(Name alias) {
        return new Ergnodeb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ergnodeb rename(String name) {
        return new Ergnodeb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ergnodeb rename(Name name) {
        return new Ergnodeb(name, null);
    }
}
