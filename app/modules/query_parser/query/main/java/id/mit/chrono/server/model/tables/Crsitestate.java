/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrsitestateRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crsitestate extends TableImpl<CrsitestateRecord> {

    private static final long serialVersionUID = -1022380103;

    /**
     * The reference instance of <code>chrono.crsitestate</code>
     */
    public static final Crsitestate CRSITESTATE = new Crsitestate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrsitestateRecord> getRecordType() {
        return CrsitestateRecord.class;
    }

    /**
     * The column <code>chrono.crsitestate.sitestate_id</code>.
     */
    public final TableField<CrsitestateRecord, Integer> SITESTATE_ID = createField("sitestate_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crsitestate.sitestate_code</code>.
     */
    public final TableField<CrsitestateRecord, String> SITESTATE_CODE = createField("sitestate_code", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.crsitestate.sitestate_name</code>.
     */
    public final TableField<CrsitestateRecord, String> SITESTATE_NAME = createField("sitestate_name", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * Create a <code>chrono.crsitestate</code> table reference
     */
    public Crsitestate() {
        this(DSL.name("crsitestate"), null);
    }

    /**
     * Create an aliased <code>chrono.crsitestate</code> table reference
     */
    public Crsitestate(String alias) {
        this(DSL.name(alias), CRSITESTATE);
    }

    /**
     * Create an aliased <code>chrono.crsitestate</code> table reference
     */
    public Crsitestate(Name alias) {
        this(alias, CRSITESTATE);
    }

    private Crsitestate(Name alias, Table<CrsitestateRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crsitestate(Name alias, Table<CrsitestateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRSITESTATE_PRIMARY, Indexes.CRSITESTATE_SITESTATE_CODE, Indexes.CRSITESTATE_SITESTATE_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrsitestateRecord> getPrimaryKey() {
        return Keys.KEY_CRSITESTATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrsitestateRecord>> getKeys() {
        return Arrays.<UniqueKey<CrsitestateRecord>>asList(Keys.KEY_CRSITESTATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crsitestate as(String alias) {
        return new Crsitestate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crsitestate as(Name alias) {
        return new Crsitestate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crsitestate rename(String name) {
        return new Crsitestate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crsitestate rename(Name name) {
        return new Crsitestate(name, null);
    }
}
