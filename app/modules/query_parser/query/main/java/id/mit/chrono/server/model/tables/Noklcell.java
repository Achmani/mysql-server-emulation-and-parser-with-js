/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.NoklcellRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Noklcell extends TableImpl<NoklcellRecord> {

    private static final long serialVersionUID = 51040989;

    /**
     * The reference instance of <code>chrono.noklcell</code>
     */
    public static final Noklcell NOKLCELL = new Noklcell();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NoklcellRecord> getRecordType() {
        return NoklcellRecord.class;
    }

    /**
     * The column <code>chrono.noklcell.noklcell_id</code>.
     */
    public final TableField<NoklcellRecord, ULong> NOKLCELL_ID = createField("noklcell_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_crcollectortaskfiles</code>.
     */
    public final TableField<NoklcellRecord, ULong> NOKLCELL_CRCOLLECTORTASKFILES = createField("noklcell_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_date</code>.
     */
    public final TableField<NoklcellRecord, UInteger> NOKLCELL_DATE = createField("noklcell_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_datefrom</code>.
     */
    public final TableField<NoklcellRecord, UInteger> NOKLCELL_DATEFROM = createField("noklcell_datefrom", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_nokenodeb</code>.
     */
    public final TableField<NoklcellRecord, ULong> NOKLCELL_NOKENODEB = createField("noklcell_nokenodeb", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_nodealias</code>.
     */
    public final TableField<NoklcellRecord, Integer> NOKLCELL_NODEALIAS = createField("noklcell_nodealias", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_cell</code>.
     */
    public final TableField<NoklcellRecord, Integer> NOKLCELL_CELL = createField("noklcell_cell", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_cellclass</code>.
     */
    public final TableField<NoklcellRecord, Integer> NOKLCELL_CELLCLASS = createField("noklcell_cellclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_cellclassgroup</code>.
     */
    public final TableField<NoklcellRecord, Integer> NOKLCELL_CELLCLASSGROUP = createField("noklcell_cellclassgroup", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_cellcoverage</code>.
     */
    public final TableField<NoklcellRecord, Integer> NOKLCELL_CELLCOVERAGE = createField("noklcell_cellcoverage", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_revenueclass</code>.
     */
    public final TableField<NoklcellRecord, Integer> NOKLCELL_REVENUECLASS = createField("noklcell_revenueclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_cellstatus</code>.
     */
    public final TableField<NoklcellRecord, Integer> NOKLCELL_CELLSTATUS = createField("noklcell_cellstatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_vendor</code>.
     */
    public final TableField<NoklcellRecord, Integer> NOKLCELL_VENDOR = createField("noklcell_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_latitude</code>.
     */
    public final TableField<NoklcellRecord, Double> NOKLCELL_LATITUDE = createField("noklcell_latitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_longitude</code>.
     */
    public final TableField<NoklcellRecord, Double> NOKLCELL_LONGITUDE = createField("noklcell_longitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_namingvalid</code>.
     */
    public final TableField<NoklcellRecord, Byte> NOKLCELL_NAMINGVALID = createField("noklcell_namingvalid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.noklcell.distName</code>.
     */
    public final TableField<NoklcellRecord, String> DISTNAME = createField("distName", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.noklcell.distName2</code>.
     */
    public final TableField<NoklcellRecord, String> DISTNAME2 = createField("distName2", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.noklcell.siteId</code>.
     */
    public final TableField<NoklcellRecord, String> SITEID = createField("siteId", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.noklcell.siteCId</code>.
     */
    public final TableField<NoklcellRecord, String> SITECID = createField("siteCId", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.mcc</code>.
     */
    public final TableField<NoklcellRecord, String> MCC = createField("mcc", org.jooq.impl.SQLDataType.CHAR(4), this, "");

    /**
     * The column <code>chrono.noklcell.mnc</code>.
     */
    public final TableField<NoklcellRecord, String> MNC = createField("mnc", org.jooq.impl.SQLDataType.CHAR(4), this, "");

    /**
     * The column <code>chrono.noklcell.name</code>.
     */
    public final TableField<NoklcellRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.noklcell.cellName</code>.
     */
    public final TableField<NoklcellRecord, String> CELLNAME = createField("cellName", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.noklcell.administrativeState</code>.
     */
    public final TableField<NoklcellRecord, String> ADMINISTRATIVESTATE = createField("administrativeState", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.cellType</code>.
     */
    public final TableField<NoklcellRecord, String> CELLTYPE = createField("cellType", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.dlMimoMode</code>.
     */
    public final TableField<NoklcellRecord, String> DLMIMOMODE = createField("dlMimoMode", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.earfcnDL</code>.
     */
    public final TableField<NoklcellRecord, Double> EARFCNDL = createField("earfcnDL", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.noklcell.earfcnUL</code>.
     */
    public final TableField<NoklcellRecord, Double> EARFCNUL = createField("earfcnUL", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.noklcell.earfcn</code>.
     */
    public final TableField<NoklcellRecord, Double> EARFCN = createField("earfcn", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>chrono.noklcell.eutraCelId</code>.
     */
    public final TableField<NoklcellRecord, String> EUTRACELID = createField("eutraCelId", org.jooq.impl.SQLDataType.CHAR(12), this, "");

    /**
     * The column <code>chrono.noklcell.cellId</code>.
     */
    public final TableField<NoklcellRecord, String> CELLID = createField("cellId", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.lcrId</code>.
     */
    public final TableField<NoklcellRecord, String> LCRID = createField("lcrId", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.cellCapClass</code>.
     */
    public final TableField<NoklcellRecord, String> CELLCAPCLASS = createField("cellCapClass", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.maxBitrateDl</code>.
     */
    public final TableField<NoklcellRecord, String> MAXBITRATEDL = createField("maxBitrateDl", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.maxBitrateUl</code>.
     */
    public final TableField<NoklcellRecord, String> MAXBITRATEUL = createField("maxBitrateUl", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.maxGbrTrafficLimit</code>.
     */
    public final TableField<NoklcellRecord, String> MAXGBRTRAFFICLIMIT = createField("maxGbrTrafficLimit", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.maxNbrTrafficLimit</code>.
     */
    public final TableField<NoklcellRecord, String> MAXNBRTRAFFICLIMIT = createField("maxNbrTrafficLimit", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.maxNumRrc</code>.
     */
    public final TableField<NoklcellRecord, String> MAXNUMRRC = createField("maxNumRrc", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.phyCellId</code>.
     */
    public final TableField<NoklcellRecord, String> PHYCELLID = createField("phyCellId", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.tac</code>.
     */
    public final TableField<NoklcellRecord, String> TAC = createField("tac", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.dlChBw</code>.
     */
    public final TableField<NoklcellRecord, String> DLCHBW = createField("dlChBw", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.ulChBw</code>.
     */
    public final TableField<NoklcellRecord, String> ULCHBW = createField("ulChBw", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.redBwMaxRbDl</code>.
     */
    public final TableField<NoklcellRecord, String> REDBWMAXRBDL = createField("redBwMaxRbDl", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.redBwMaxRbUl</code>.
     */
    public final TableField<NoklcellRecord, String> REDBWMAXRBUL = createField("redBwMaxRbUl", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.noklcell.eNodeBId</code>.
     */
    public final TableField<NoklcellRecord, String> ENODEBID = createField("eNodeBId", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.noklcell.TAI</code>.
     */
    public final TableField<NoklcellRecord, String> TAI = createField("TAI", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.noklcell.ECI</code>.
     */
    public final TableField<NoklcellRecord, String> ECI = createField("ECI", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.noklcell.ECGI</code>.
     */
    public final TableField<NoklcellRecord, String> ECGI = createField("ECGI", org.jooq.impl.SQLDataType.CHAR(24), this, "");

    /**
     * The column <code>chrono.noklcell.GENODEBID</code>.
     */
    public final TableField<NoklcellRecord, String> GENODEBID = createField("GENODEBID", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.noklcell.LATITUDE</code>.
     */
    public final TableField<NoklcellRecord, String> LATITUDE = createField("LATITUDE", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.noklcell.LONGITUDE</code>.
     */
    public final TableField<NoklcellRecord, String> LONGITUDE = createField("LONGITUDE", org.jooq.impl.SQLDataType.CHAR(16), this, "");

    /**
     * The column <code>chrono.noklcell.noklcell_remark</code>.
     */
    public final TableField<NoklcellRecord, String> NOKLCELL_REMARK = createField("noklcell_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.noklcell.EXTPROP1</code>.
     */
    public final TableField<NoklcellRecord, Integer> EXTPROP1 = createField("EXTPROP1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.noklcell.EXTPROP2</code>.
     */
    public final TableField<NoklcellRecord, String> EXTPROP2 = createField("EXTPROP2", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.noklcell</code> table reference
     */
    public Noklcell() {
        this(DSL.name("noklcell"), null);
    }

    /**
     * Create an aliased <code>chrono.noklcell</code> table reference
     */
    public Noklcell(String alias) {
        this(DSL.name(alias), NOKLCELL);
    }

    /**
     * Create an aliased <code>chrono.noklcell</code> table reference
     */
    public Noklcell(Name alias) {
        this(alias, NOKLCELL);
    }

    private Noklcell(Name alias, Table<NoklcellRecord> aliased) {
        this(alias, aliased, null);
    }

    private Noklcell(Name alias, Table<NoklcellRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NOKLCELL_HWLCELL_DATE, Indexes.NOKLCELL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NoklcellRecord> getPrimaryKey() {
        return Keys.KEY_NOKLCELL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NoklcellRecord>> getKeys() {
        return Arrays.<UniqueKey<NoklcellRecord>>asList(Keys.KEY_NOKLCELL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Noklcell as(String alias) {
        return new Noklcell(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Noklcell as(Name alias) {
        return new Noklcell(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Noklcell rename(String name) {
        return new Noklcell(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Noklcell rename(Name name) {
        return new Noklcell(name, null);
    }
}
