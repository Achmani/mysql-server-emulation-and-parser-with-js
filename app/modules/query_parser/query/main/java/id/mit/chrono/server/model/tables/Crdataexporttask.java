/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrdataexporttaskRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crdataexporttask extends TableImpl<CrdataexporttaskRecord> {

    private static final long serialVersionUID = -968249235;

    /**
     * The reference instance of <code>chrono.crdataexporttask</code>
     */
    public static final Crdataexporttask CRDATAEXPORTTASK = new Crdataexporttask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrdataexporttaskRecord> getRecordType() {
        return CrdataexporttaskRecord.class;
    }

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_id</code>.
     */
    public final TableField<CrdataexporttaskRecord, Integer> DATAEXPORTTASK_ID = createField("dataexporttask_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_code</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_CODE = createField("dataexporttask_code", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_priority</code>.
     */
    public final TableField<CrdataexporttaskRecord, Integer> DATAEXPORTTASK_PRIORITY = createField("dataexporttask_priority", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_dataexporttype</code>.
     */
    public final TableField<CrdataexporttaskRecord, Integer> DATAEXPORTTASK_DATAEXPORTTYPE = createField("dataexporttask_dataexporttype", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_location</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_LOCATION = createField("dataexporttask_location", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_filename</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_FILENAME = createField("dataexporttask_filename", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_extension</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_EXTENSION = createField("dataexporttask_extension", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_sql</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_SQL = createField("dataexporttask_sql", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_columns</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_COLUMNS = createField("dataexporttask_columns", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_delimiter</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_DELIMITER = createField("dataexporttask_delimiter", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_compress</code>.
     */
    public final TableField<CrdataexporttaskRecord, Byte> DATAEXPORTTASK_COMPRESS = createField("dataexporttask_compress", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_compressformat</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_COMPRESSFORMAT = createField("dataexporttask_compressformat", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_sftphost</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_SFTPHOST = createField("dataexporttask_sftphost", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_sftpport</code>.
     */
    public final TableField<CrdataexporttaskRecord, Integer> DATAEXPORTTASK_SFTPPORT = createField("dataexporttask_sftpport", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_sftpuser</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_SFTPUSER = createField("dataexporttask_sftpuser", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_sftppassword</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_SFTPPASSWORD = createField("dataexporttask_sftppassword", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_sftpdir</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_SFTPDIR = createField("dataexporttask_sftpdir", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_localdir</code>.
     */
    public final TableField<CrdataexporttaskRecord, String> DATAEXPORTTASK_LOCALDIR = createField("dataexporttask_localdir", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crdataexporttask.dataexporttask_enabled</code>.
     */
    public final TableField<CrdataexporttaskRecord, Byte> DATAEXPORTTASK_ENABLED = createField("dataexporttask_enabled", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>chrono.crdataexporttask</code> table reference
     */
    public Crdataexporttask() {
        this(DSL.name("crdataexporttask"), null);
    }

    /**
     * Create an aliased <code>chrono.crdataexporttask</code> table reference
     */
    public Crdataexporttask(String alias) {
        this(DSL.name(alias), CRDATAEXPORTTASK);
    }

    /**
     * Create an aliased <code>chrono.crdataexporttask</code> table reference
     */
    public Crdataexporttask(Name alias) {
        this(alias, CRDATAEXPORTTASK);
    }

    private Crdataexporttask(Name alias, Table<CrdataexporttaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crdataexporttask(Name alias, Table<CrdataexporttaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrdataexporttaskRecord> getPrimaryKey() {
        return Keys.KEY_CRDATAEXPORTTASK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrdataexporttaskRecord>> getKeys() {
        return Arrays.<UniqueKey<CrdataexporttaskRecord>>asList(Keys.KEY_CRDATAEXPORTTASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask as(String alias) {
        return new Crdataexporttask(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crdataexporttask as(Name alias) {
        return new Crdataexporttask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crdataexporttask rename(String name) {
        return new Crdataexporttask(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crdataexporttask rename(Name name) {
        return new Crdataexporttask(name, null);
    }
}
