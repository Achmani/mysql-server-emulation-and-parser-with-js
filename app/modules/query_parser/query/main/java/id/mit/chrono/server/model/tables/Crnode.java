/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrnodeRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crnode extends TableImpl<CrnodeRecord> {

    private static final long serialVersionUID = -833344601;

    /**
     * The reference instance of <code>chrono.crnode</code>
     */
    public static final Crnode CRNODE = new Crnode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrnodeRecord> getRecordType() {
        return CrnodeRecord.class;
    }

    /**
     * The column <code>chrono.crnode.node_id</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_ID = createField("node_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crnode.node_code</code>.
     */
    public final TableField<CrnodeRecord, String> NODE_CODE = createField("node_code", org.jooq.impl.SQLDataType.CHAR(72).nullable(false), this, "");

    /**
     * The column <code>chrono.crnode.node_site</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_SITE = createField("node_site", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crnode.node_nodecategory</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_NODECATEGORY = createField("node_nodecategory", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crnode.node_nodetype</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_NODETYPE = createField("node_nodetype", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crnode.node_revenueclass</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_REVENUECLASS = createField("node_revenueclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crnode.node_nodeplace</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_NODEPLACE = createField("node_nodeplace", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crnode.node_timezone</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_TIMEZONE = createField("node_timezone", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crnode.node_builddate</code>.
     */
    public final TableField<CrnodeRecord, Date> NODE_BUILDDATE = createField("node_builddate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>chrono.crnode.node_nodestate</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_NODESTATE = createField("node_nodestate", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crnode.node_lastupdate</code>.
     */
    public final TableField<CrnodeRecord, Integer> NODE_LASTUPDATE = createField("node_lastupdate", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>chrono.crnode</code> table reference
     */
    public Crnode() {
        this(DSL.name("crnode"), null);
    }

    /**
     * Create an aliased <code>chrono.crnode</code> table reference
     */
    public Crnode(String alias) {
        this(DSL.name(alias), CRNODE);
    }

    /**
     * Create an aliased <code>chrono.crnode</code> table reference
     */
    public Crnode(Name alias) {
        this(alias, CRNODE);
    }

    private Crnode(Name alias, Table<CrnodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crnode(Name alias, Table<CrnodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRNODE_NODE_CODE, Indexes.CRNODE_NODE_CODE_2, Indexes.CRNODE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrnodeRecord> getPrimaryKey() {
        return Keys.KEY_CRNODE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrnodeRecord>> getKeys() {
        return Arrays.<UniqueKey<CrnodeRecord>>asList(Keys.KEY_CRNODE_PRIMARY, Keys.KEY_CRNODE_NODE_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crnode as(String alias) {
        return new Crnode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crnode as(Name alias) {
        return new Crnode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crnode rename(String name) {
        return new Crnode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crnode rename(Name name) {
        return new Crnode(name, null);
    }
}
