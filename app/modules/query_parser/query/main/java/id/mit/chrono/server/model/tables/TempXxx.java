/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.TempXxxRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TempXxx extends TableImpl<TempXxxRecord> {

    private static final long serialVersionUID = -1909048008;

    /**
     * The reference instance of <code>chrono.temp_xxx</code>
     */
    public static final TempXxx TEMP_XXX = new TempXxx();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TempXxxRecord> getRecordType() {
        return TempXxxRecord.class;
    }

    /**
     * The column <code>chrono.temp_xxx.id</code>.
     */
    public final TableField<TempXxxRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.temp_xxx.key</code>.
     */
    public final TableField<TempXxxRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_xxx.value</code>.
     */
    public final TableField<TempXxxRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.temp_xxx.ext1_key</code>.
     */
    public final TableField<TempXxxRecord, String> EXT1_KEY = createField("ext1_key", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>chrono.temp_xxx.ext1_value</code>.
     */
    public final TableField<TempXxxRecord, String> EXT1_VALUE = createField("ext1_value", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>chrono.temp_xxx.ext2_key</code>.
     */
    public final TableField<TempXxxRecord, String> EXT2_KEY = createField("ext2_key", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>chrono.temp_xxx.ext2_value</code>.
     */
    public final TableField<TempXxxRecord, String> EXT2_VALUE = createField("ext2_value", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>chrono.temp_xxx</code> table reference
     */
    public TempXxx() {
        this(DSL.name("temp_xxx"), null);
    }

    /**
     * Create an aliased <code>chrono.temp_xxx</code> table reference
     */
    public TempXxx(String alias) {
        this(DSL.name(alias), TEMP_XXX);
    }

    /**
     * Create an aliased <code>chrono.temp_xxx</code> table reference
     */
    public TempXxx(Name alias) {
        this(alias, TEMP_XXX);
    }

    private TempXxx(Name alias, Table<TempXxxRecord> aliased) {
        this(alias, aliased, null);
    }

    private TempXxx(Name alias, Table<TempXxxRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TempXxxRecord> getPrimaryKey() {
        return Keys.KEY_TEMP_XXX_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TempXxxRecord>> getKeys() {
        return Arrays.<UniqueKey<TempXxxRecord>>asList(Keys.KEY_TEMP_XXX_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TempXxx as(String alias) {
        return new TempXxx(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TempXxx as(Name alias) {
        return new TempXxx(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TempXxx rename(String name) {
        return new TempXxx(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TempXxx rename(Name name) {
        return new TempXxx(name, null);
    }
}
