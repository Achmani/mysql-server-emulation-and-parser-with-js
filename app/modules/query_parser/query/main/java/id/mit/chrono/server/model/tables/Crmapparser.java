/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrmapparserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crmapparser extends TableImpl<CrmapparserRecord> {

    private static final long serialVersionUID = -974491225;

    /**
     * The reference instance of <code>chrono.crmapparser</code>
     */
    public static final Crmapparser CRMAPPARSER = new Crmapparser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrmapparserRecord> getRecordType() {
        return CrmapparserRecord.class;
    }

    /**
     * The column <code>chrono.crmapparser.mapparser_id</code>.
     */
    public final TableField<CrmapparserRecord, Integer> MAPPARSER_ID = createField("mapparser_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_vendor</code>.
     */
    public final TableField<CrmapparserRecord, Integer> MAPPARSER_VENDOR = createField("mapparser_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_datagroup</code>.
     */
    public final TableField<CrmapparserRecord, Integer> MAPPARSER_DATAGROUP = createField("mapparser_datagroup", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_datasourcetype</code>.
     */
    public final TableField<CrmapparserRecord, Integer> MAPPARSER_DATASOURCETYPE = createField("mapparser_datasourcetype", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_pattern</code>.
     */
    public final TableField<CrmapparserRecord, String> MAPPARSER_PATTERN = createField("mapparser_pattern", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_identitypattern</code>.
     */
    public final TableField<CrmapparserRecord, String> MAPPARSER_IDENTITYPATTERN = createField("mapparser_identitypattern", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_dependencies</code>.
     */
    public final TableField<CrmapparserRecord, String> MAPPARSER_DEPENDENCIES = createField("mapparser_dependencies", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_class</code>.
     */
    public final TableField<CrmapparserRecord, String> MAPPARSER_CLASS = createField("mapparser_class", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_description</code>.
     */
    public final TableField<CrmapparserRecord, String> MAPPARSER_DESCRIPTION = createField("mapparser_description", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crmapparser.mapparser_enabled</code>.
     */
    public final TableField<CrmapparserRecord, Byte> MAPPARSER_ENABLED = createField("mapparser_enabled", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>chrono.crmapparser</code> table reference
     */
    public Crmapparser() {
        this(DSL.name("crmapparser"), null);
    }

    /**
     * Create an aliased <code>chrono.crmapparser</code> table reference
     */
    public Crmapparser(String alias) {
        this(DSL.name(alias), CRMAPPARSER);
    }

    /**
     * Create an aliased <code>chrono.crmapparser</code> table reference
     */
    public Crmapparser(Name alias) {
        this(alias, CRMAPPARSER);
    }

    private Crmapparser(Name alias, Table<CrmapparserRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crmapparser(Name alias, Table<CrmapparserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRMAPPARSER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrmapparserRecord> getPrimaryKey() {
        return Keys.KEY_CRMAPPARSER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrmapparserRecord>> getKeys() {
        return Arrays.<UniqueKey<CrmapparserRecord>>asList(Keys.KEY_CRMAPPARSER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crmapparser as(String alias) {
        return new Crmapparser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crmapparser as(Name alias) {
        return new Crmapparser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crmapparser rename(String name) {
        return new Crmapparser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crmapparser rename(Name name) {
        return new Crmapparser(name, null);
    }
}
