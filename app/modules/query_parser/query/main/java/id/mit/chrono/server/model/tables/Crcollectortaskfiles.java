/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.CrcollectortaskfilesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crcollectortaskfiles extends TableImpl<CrcollectortaskfilesRecord> {

    private static final long serialVersionUID = 1488246443;

    /**
     * The reference instance of <code>chrono.crcollectortaskfiles</code>
     */
    public static final Crcollectortaskfiles CRCOLLECTORTASKFILES = new Crcollectortaskfiles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrcollectortaskfilesRecord> getRecordType() {
        return CrcollectortaskfilesRecord.class;
    }

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_id</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Long> COLLECTORTASKFILES_ID = createField("collectortaskfiles_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.crcollectortaskfiles_date</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Integer> CRCOLLECTORTASKFILES_DATE = createField("crcollectortaskfiles_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_collectortask</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Integer> COLLECTORTASKFILES_COLLECTORTASK = createField("collectortaskfiles_collectortask", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_datasource</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Integer> COLLECTORTASKFILES_DATASOURCE = createField("collectortaskfiles_datasource", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_remotedir</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, String> COLLECTORTASKFILES_REMOTEDIR = createField("collectortaskfiles_remotedir", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_remotefilename</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, String> COLLECTORTASKFILES_REMOTEFILENAME = createField("collectortaskfiles_remotefilename", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_localdir</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, String> COLLECTORTASKFILES_LOCALDIR = createField("collectortaskfiles_localdir", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_localfilename</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, String> COLLECTORTASKFILES_LOCALFILENAME = createField("collectortaskfiles_localfilename", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_created</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Integer> COLLECTORTASKFILES_CREATED = createField("collectortaskfiles_created", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_added</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Integer> COLLECTORTASKFILES_ADDED = createField("collectortaskfiles_added", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_modified</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Integer> COLLECTORTASKFILES_MODIFIED = createField("collectortaskfiles_modified", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_size</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Long> COLLECTORTASKFILES_SIZE = createField("collectortaskfiles_size", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_type</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, String> COLLECTORTASKFILES_TYPE = createField("collectortaskfiles_type", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_checksum</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, String> COLLECTORTASKFILES_CHECKSUM = createField("collectortaskfiles_checksum", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_processtime</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Integer> COLLECTORTASKFILES_PROCESSTIME = createField("collectortaskfiles_processtime", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_processstatus</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, Integer> COLLECTORTASKFILES_PROCESSSTATUS = createField("collectortaskfiles_processstatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.crcollectortaskfiles.collectortaskfiles_processstatusreason</code>.
     */
    public final TableField<CrcollectortaskfilesRecord, String> COLLECTORTASKFILES_PROCESSSTATUSREASON = createField("collectortaskfiles_processstatusreason", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * Create a <code>chrono.crcollectortaskfiles</code> table reference
     */
    public Crcollectortaskfiles() {
        this(DSL.name("crcollectortaskfiles"), null);
    }

    /**
     * Create an aliased <code>chrono.crcollectortaskfiles</code> table reference
     */
    public Crcollectortaskfiles(String alias) {
        this(DSL.name(alias), CRCOLLECTORTASKFILES);
    }

    /**
     * Create an aliased <code>chrono.crcollectortaskfiles</code> table reference
     */
    public Crcollectortaskfiles(Name alias) {
        this(alias, CRCOLLECTORTASKFILES);
    }

    private Crcollectortaskfiles(Name alias, Table<CrcollectortaskfilesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crcollectortaskfiles(Name alias, Table<CrcollectortaskfilesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CRCOLLECTORTASKFILES_COLLECTORTASK_FILES_CHECKSUM, Indexes.CRCOLLECTORTASKFILES_COLLECTORTASK_FILES_DATASOURCE, Indexes.CRCOLLECTORTASKFILES_COLLECTORTASK_ID, Indexes.CRCOLLECTORTASKFILES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrcollectortaskfilesRecord> getPrimaryKey() {
        return Keys.KEY_CRCOLLECTORTASKFILES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrcollectortaskfilesRecord>> getKeys() {
        return Arrays.<UniqueKey<CrcollectortaskfilesRecord>>asList(Keys.KEY_CRCOLLECTORTASKFILES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcollectortaskfiles as(String alias) {
        return new Crcollectortaskfiles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crcollectortaskfiles as(Name alias) {
        return new Crcollectortaskfiles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcollectortaskfiles rename(String name) {
        return new Crcollectortaskfiles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crcollectortaskfiles rename(Name name) {
        return new Crcollectortaskfiles(name, null);
    }
}
