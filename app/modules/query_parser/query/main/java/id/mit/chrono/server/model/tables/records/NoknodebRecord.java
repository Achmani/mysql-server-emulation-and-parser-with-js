/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Noknodeb;

import javax.annotation.Generated;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoknodebRecord extends UpdatableRecordImpl<NoknodebRecord> {

    private static final long serialVersionUID = 850029731;

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_id</code>.
     */
    public void setNoknodebId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_id</code>.
     */
    public ULong getNoknodebId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_crcollectortaskfiles</code>.
     */
    public void setNoknodebCrcollectortaskfiles(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_crcollectortaskfiles</code>.
     */
    public ULong getNoknodebCrcollectortaskfiles() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_date</code>.
     */
    public void setNoknodebDate(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_date</code>.
     */
    public UInteger getNoknodebDate() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_datefrom</code>.
     */
    public void setNoknodebDatefrom(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_datefrom</code>.
     */
    public UInteger getNoknodebDatefrom() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_nokrnc</code>.
     */
    public void setNoknodebNokrnc(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_nokrnc</code>.
     */
    public ULong getNoknodebNokrnc() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_node</code>.
     */
    public void setNoknodebNode(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_node</code>.
     */
    public Integer getNoknodebNode() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_nodephysical</code>.
     */
    public void setNoknodebNodephysical(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_nodephysical</code>.
     */
    public Integer getNoknodebNodephysical() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_nodestatus</code>.
     */
    public void setNoknodebNodestatus(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_nodestatus</code>.
     */
    public Integer getNoknodebNodestatus() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_revenueclass</code>.
     */
    public void setNoknodebRevenueclass(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_revenueclass</code>.
     */
    public Integer getNoknodebRevenueclass() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_vendor</code>.
     */
    public void setNoknodebVendor(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_vendor</code>.
     */
    public Integer getNoknodebVendor() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_namingvalid</code>.
     */
    public void setNoknodebNamingvalid(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_namingvalid</code>.
     */
    public Byte getNoknodebNamingvalid() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>chrono.noknodeb.TOTALCELL</code>.
     */
    public void setTotalcell(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.TOTALCELL</code>.
     */
    public Integer getTotalcell() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>chrono.noknodeb.NODEBNAME</code>.
     */
    public void setNodebname(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.NODEBNAME</code>.
     */
    public String getNodebname() {
        return (String) get(12);
    }

    /**
     * Setter for <code>chrono.noknodeb.NODEBID</code>.
     */
    public void setNodebid(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.NODEBID</code>.
     */
    public Integer getNodebid() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>chrono.noknodeb.distName</code>.
     */
    public void setDistname(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.distName</code>.
     */
    public String getDistname() {
        return (String) get(14);
    }

    /**
     * Setter for <code>chrono.noknodeb.version</code>.
     */
    public void setVersion(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.version</code>.
     */
    public String getVersion() {
        return (String) get(15);
    }

    /**
     * Setter for <code>chrono.noknodeb.siteId</code>.
     */
    public void setSiteid(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.siteId</code>.
     */
    public String getSiteid() {
        return (String) get(16);
    }

    /**
     * Setter for <code>chrono.noknodeb.siteCId</code>.
     */
    public void setSitecid(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.siteCId</code>.
     */
    public String getSitecid() {
        return (String) get(17);
    }

    /**
     * Setter for <code>chrono.noknodeb.name</code>.
     */
    public void setName(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.name</code>.
     */
    public String getName() {
        return (String) get(18);
    }

    /**
     * Setter for <code>chrono.noknodeb.ATMInterfaceID</code>.
     */
    public void setAtminterfaceid(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.ATMInterfaceID</code>.
     */
    public String getAtminterfaceid() {
        return (String) get(19);
    }

    /**
     * Setter for <code>chrono.noknodeb.BTSIPAddress</code>.
     */
    public void setBtsipaddress(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.BTSIPAddress</code>.
     */
    public String getBtsipaddress() {
        return (String) get(20);
    }

    /**
     * Setter for <code>chrono.noknodeb.IPBasedRouteIdIub</code>.
     */
    public void setIpbasedrouteidiub(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.IPBasedRouteIdIub</code>.
     */
    public String getIpbasedrouteidiub() {
        return (String) get(21);
    }

    /**
     * Setter for <code>chrono.noknodeb.IPNBId</code>.
     */
    public void setIpnbid(String value) {
        set(22, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.IPNBId</code>.
     */
    public String getIpnbid() {
        return (String) get(22);
    }

    /**
     * Setter for <code>chrono.noknodeb.BTSSupportForHSPACM</code>.
     */
    public void setBtssupportforhspacm(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.BTSSupportForHSPACM</code>.
     */
    public String getBtssupportforhspacm() {
        return (String) get(23);
    }

    /**
     * Setter for <code>chrono.noknodeb.WBTSName</code>.
     */
    public void setWbtsname(String value) {
        set(24, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.WBTSName</code>.
     */
    public String getWbtsname() {
        return (String) get(24);
    }

    /**
     * Setter for <code>chrono.noknodeb.WBTSSWBuildId</code>.
     */
    public void setWbtsswbuildid(String value) {
        set(25, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.WBTSSWBuildId</code>.
     */
    public String getWbtsswbuildid() {
        return (String) get(25);
    }

    /**
     * Setter for <code>chrono.noknodeb.noknodeb_remark</code>.
     */
    public void setNoknodebRemark(String value) {
        set(26, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.noknodeb_remark</code>.
     */
    public String getNoknodebRemark() {
        return (String) get(26);
    }

    /**
     * Setter for <code>chrono.noknodeb.longitude</code>.
     */
    public void setLongitude(String value) {
        set(27, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.longitude</code>.
     */
    public String getLongitude() {
        return (String) get(27);
    }

    /**
     * Setter for <code>chrono.noknodeb.latitude</code>.
     */
    public void setLatitude(String value) {
        set(28, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.latitude</code>.
     */
    public String getLatitude() {
        return (String) get(28);
    }

    /**
     * Setter for <code>chrono.noknodeb.MaxDLPowerCapability</code>.
     */
    public void setMaxdlpowercapability(String value) {
        set(29, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.MaxDLPowerCapability</code>.
     */
    public String getMaxdlpowercapability() {
        return (String) get(29);
    }

    /**
     * Setter for <code>chrono.noknodeb.EXTPROP1</code>.
     */
    public void setExtprop1(Integer value) {
        set(30, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.EXTPROP1</code>.
     */
    public Integer getExtprop1() {
        return (Integer) get(30);
    }

    /**
     * Setter for <code>chrono.noknodeb.EXTPROP2</code>.
     */
    public void setExtprop2(String value) {
        set(31, value);
    }

    /**
     * Getter for <code>chrono.noknodeb.EXTPROP2</code>.
     */
    public String getExtprop2() {
        return (String) get(31);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<ULong, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NoknodebRecord
     */
    public NoknodebRecord() {
        super(Noknodeb.NOKNODEB);
    }

    /**
     * Create a detached, initialised NoknodebRecord
     */
    public NoknodebRecord(ULong noknodebId, ULong noknodebCrcollectortaskfiles, UInteger noknodebDate, UInteger noknodebDatefrom, ULong noknodebNokrnc, Integer noknodebNode, Integer noknodebNodephysical, Integer noknodebNodestatus, Integer noknodebRevenueclass, Integer noknodebVendor, Byte noknodebNamingvalid, Integer totalcell, String nodebname, Integer nodebid, String distname, String version, String siteid, String sitecid, String name, String atminterfaceid, String btsipaddress, String ipbasedrouteidiub, String ipnbid, String btssupportforhspacm, String wbtsname, String wbtsswbuildid, String noknodebRemark, String longitude, String latitude, String maxdlpowercapability, Integer extprop1, String extprop2) {
        super(Noknodeb.NOKNODEB);

        set(0, noknodebId);
        set(1, noknodebCrcollectortaskfiles);
        set(2, noknodebDate);
        set(3, noknodebDatefrom);
        set(4, noknodebNokrnc);
        set(5, noknodebNode);
        set(6, noknodebNodephysical);
        set(7, noknodebNodestatus);
        set(8, noknodebRevenueclass);
        set(9, noknodebVendor);
        set(10, noknodebNamingvalid);
        set(11, totalcell);
        set(12, nodebname);
        set(13, nodebid);
        set(14, distname);
        set(15, version);
        set(16, siteid);
        set(17, sitecid);
        set(18, name);
        set(19, atminterfaceid);
        set(20, btsipaddress);
        set(21, ipbasedrouteidiub);
        set(22, ipnbid);
        set(23, btssupportforhspacm);
        set(24, wbtsname);
        set(25, wbtsswbuildid);
        set(26, noknodebRemark);
        set(27, longitude);
        set(28, latitude);
        set(29, maxdlpowercapability);
        set(30, extprop1);
        set(31, extprop2);
    }
}
