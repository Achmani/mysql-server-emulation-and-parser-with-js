/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.ZtebscroutingareaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ztebscroutingarea extends TableImpl<ZtebscroutingareaRecord> {

    private static final long serialVersionUID = 2076093694;

    /**
     * The reference instance of <code>chrono.ztebscroutingarea</code>
     */
    public static final Ztebscroutingarea ZTEBSCROUTINGAREA = new Ztebscroutingarea();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ZtebscroutingareaRecord> getRecordType() {
        return ZtebscroutingareaRecord.class;
    }

    /**
     * The column <code>chrono.ztebscroutingarea.ztebscroutingarea_id</code>.
     */
    public final TableField<ZtebscroutingareaRecord, ULong> ZTEBSCROUTINGAREA_ID = createField("ztebscroutingarea_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.ztebscroutingarea_crcollectortaskfiles</code>.
     */
    public final TableField<ZtebscroutingareaRecord, ULong> ZTEBSCROUTINGAREA_CRCOLLECTORTASKFILES = createField("ztebscroutingarea_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.ztebscroutingarea_date</code>.
     */
    public final TableField<ZtebscroutingareaRecord, UInteger> ZTEBSCROUTINGAREA_DATE = createField("ztebscroutingarea_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.ztebscroutingarea_datefrom</code>.
     */
    public final TableField<ZtebscroutingareaRecord, UInteger> ZTEBSCROUTINGAREA_DATEFROM = createField("ztebscroutingarea_datefrom", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.ztebscroutingarea_ztebsc</code>.
     */
    public final TableField<ZtebscroutingareaRecord, ULong> ZTEBSCROUTINGAREA_ZTEBSC = createField("ztebscroutingarea_ztebsc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.MOI</code>.
     */
    public final TableField<ZtebscroutingareaRecord, String> MOI = createField("MOI", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.SubNetwork</code>.
     */
    public final TableField<ZtebscroutingareaRecord, String> SUBNETWORK = createField("SubNetwork", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.MEID</code>.
     */
    public final TableField<ZtebscroutingareaRecord, String> MEID = createField("MEID", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.GBssFunction</code>.
     */
    public final TableField<ZtebscroutingareaRecord, String> GBSSFUNCTION = createField("GBssFunction", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.GRoutingArea</code>.
     */
    public final TableField<ZtebscroutingareaRecord, String> GROUTINGAREA = createField("GRoutingArea", org.jooq.impl.SQLDataType.CHAR(6), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.userLabel</code>.
     */
    public final TableField<ZtebscroutingareaRecord, String> USERLABEL = createField("userLabel", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.ztebscroutingarea.rac</code>.
     */
    public final TableField<ZtebscroutingareaRecord, String> RAC = createField("rac", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.ztebscroutingarea</code> table reference
     */
    public Ztebscroutingarea() {
        this(DSL.name("ztebscroutingarea"), null);
    }

    /**
     * Create an aliased <code>chrono.ztebscroutingarea</code> table reference
     */
    public Ztebscroutingarea(String alias) {
        this(DSL.name(alias), ZTEBSCROUTINGAREA);
    }

    /**
     * Create an aliased <code>chrono.ztebscroutingarea</code> table reference
     */
    public Ztebscroutingarea(Name alias) {
        this(alias, ZTEBSCROUTINGAREA);
    }

    private Ztebscroutingarea(Name alias, Table<ZtebscroutingareaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ztebscroutingarea(Name alias, Table<ZtebscroutingareaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ZtebscroutingareaRecord> getPrimaryKey() {
        return Keys.KEY_ZTEBSCROUTINGAREA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ZtebscroutingareaRecord>> getKeys() {
        return Arrays.<UniqueKey<ZtebscroutingareaRecord>>asList(Keys.KEY_ZTEBSCROUTINGAREA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ztebscroutingarea as(String alias) {
        return new Ztebscroutingarea(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ztebscroutingarea as(Name alias) {
        return new Ztebscroutingarea(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ztebscroutingarea rename(String name) {
        return new Ztebscroutingarea(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ztebscroutingarea rename(Name name) {
        return new Ztebscroutingarea(name, null);
    }
}
