/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables.records;


import id.mit.chrono.server.model.tables.Crdatasourcecommands;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrdatasourcecommandsRecord extends UpdatableRecordImpl<CrdatasourcecommandsRecord> implements Record8<Integer, Integer, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1237056257;

    /**
     * Setter for <code>chrono.crdatasourcecommands.datasourcecommands_id</code>.
     */
    public void setDatasourcecommandsId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chrono.crdatasourcecommands.datasourcecommands_id</code>.
     */
    public Integer getDatasourcecommandsId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chrono.crdatasourcecommands.datasourcecommands_datasource</code>.
     */
    public void setDatasourcecommandsDatasource(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>chrono.crdatasourcecommands.datasourcecommands_datasource</code>.
     */
    public Integer getDatasourcecommandsDatasource() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>chrono.crdatasourcecommands.datasourcecommands_type</code>.
     */
    public void setDatasourcecommandsType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>chrono.crdatasourcecommands.datasourcecommands_type</code>.
     */
    public String getDatasourcecommandsType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chrono.crdatasourcecommands.datasourcecommands_command</code>.
     */
    public void setDatasourcecommandsCommand(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>chrono.crdatasourcecommands.datasourcecommands_command</code>.
     */
    public String getDatasourcecommandsCommand() {
        return (String) get(3);
    }

    /**
     * Setter for <code>chrono.crdatasourcecommands.datasourcecommands_outputtarget</code>.
     */
    public void setDatasourcecommandsOutputtarget(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>chrono.crdatasourcecommands.datasourcecommands_outputtarget</code>.
     */
    public String getDatasourcecommandsOutputtarget() {
        return (String) get(4);
    }

    /**
     * Setter for <code>chrono.crdatasourcecommands.datasourcecommands_outputformat</code>.
     */
    public void setDatasourcecommandsOutputformat(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chrono.crdatasourcecommands.datasourcecommands_outputformat</code>.
     */
    public String getDatasourcecommandsOutputformat() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chrono.crdatasourcecommands.datasourcecommands_outputlocation</code>.
     */
    public void setDatasourcecommandsOutputlocation(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chrono.crdatasourcecommands.datasourcecommands_outputlocation</code>.
     */
    public String getDatasourcecommandsOutputlocation() {
        return (String) get(6);
    }

    /**
     * Setter for <code>chrono.crdatasourcecommands.datasourcecommands_description</code>.
     */
    public void setDatasourcecommandsDescription(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>chrono.crdatasourcecommands.datasourcecommands_description</code>.
     */
    public String getDatasourcecommandsDescription() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Crdatasourcecommands.CRDATASOURCECOMMANDS.DATASOURCECOMMANDS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Crdatasourcecommands.CRDATASOURCECOMMANDS.DATASOURCECOMMANDS_DATASOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Crdatasourcecommands.CRDATASOURCECOMMANDS.DATASOURCECOMMANDS_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Crdatasourcecommands.CRDATASOURCECOMMANDS.DATASOURCECOMMANDS_COMMAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Crdatasourcecommands.CRDATASOURCECOMMANDS.DATASOURCECOMMANDS_OUTPUTTARGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Crdatasourcecommands.CRDATASOURCECOMMANDS.DATASOURCECOMMANDS_OUTPUTFORMAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Crdatasourcecommands.CRDATASOURCECOMMANDS.DATASOURCECOMMANDS_OUTPUTLOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Crdatasourcecommands.CRDATASOURCECOMMANDS.DATASOURCECOMMANDS_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDatasourcecommandsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getDatasourcecommandsDatasource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDatasourcecommandsType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDatasourcecommandsCommand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDatasourcecommandsOutputtarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDatasourcecommandsOutputformat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDatasourcecommandsOutputlocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getDatasourcecommandsDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDatasourcecommandsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDatasourcecommandsDatasource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDatasourcecommandsType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDatasourcecommandsCommand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDatasourcecommandsOutputtarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDatasourcecommandsOutputformat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDatasourcecommandsOutputlocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDatasourcecommandsDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord value1(Integer value) {
        setDatasourcecommandsId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord value2(Integer value) {
        setDatasourcecommandsDatasource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord value3(String value) {
        setDatasourcecommandsType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord value4(String value) {
        setDatasourcecommandsCommand(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord value5(String value) {
        setDatasourcecommandsOutputtarget(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord value6(String value) {
        setDatasourcecommandsOutputformat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord value7(String value) {
        setDatasourcecommandsOutputlocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord value8(String value) {
        setDatasourcecommandsDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrdatasourcecommandsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrdatasourcecommandsRecord
     */
    public CrdatasourcecommandsRecord() {
        super(Crdatasourcecommands.CRDATASOURCECOMMANDS);
    }

    /**
     * Create a detached, initialised CrdatasourcecommandsRecord
     */
    public CrdatasourcecommandsRecord(Integer datasourcecommandsId, Integer datasourcecommandsDatasource, String datasourcecommandsType, String datasourcecommandsCommand, String datasourcecommandsOutputtarget, String datasourcecommandsOutputformat, String datasourcecommandsOutputlocation, String datasourcecommandsDescription) {
        super(Crdatasourcecommands.CRDATASOURCECOMMANDS);

        set(0, datasourcecommandsId);
        set(1, datasourcecommandsDatasource);
        set(2, datasourcecommandsType);
        set(3, datasourcecommandsCommand);
        set(4, datasourcecommandsOutputtarget);
        set(5, datasourcecommandsOutputformat);
        set(6, datasourcecommandsOutputlocation);
        set(7, datasourcecommandsDescription);
    }
}
