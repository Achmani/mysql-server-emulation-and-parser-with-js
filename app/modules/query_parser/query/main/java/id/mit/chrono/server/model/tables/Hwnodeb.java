/*
 * This file is generated by jOOQ.
*/
package id.mit.chrono.server.model.tables;


import id.mit.chrono.server.model.Chrono;
import id.mit.chrono.server.model.Indexes;
import id.mit.chrono.server.model.Keys;
import id.mit.chrono.server.model.tables.records.HwnodebRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hwnodeb extends TableImpl<HwnodebRecord> {

    private static final long serialVersionUID = 1382189071;

    /**
     * The reference instance of <code>chrono.hwnodeb</code>
     */
    public static final Hwnodeb HWNODEB = new Hwnodeb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HwnodebRecord> getRecordType() {
        return HwnodebRecord.class;
    }

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_id</code>.
     */
    public final TableField<HwnodebRecord, ULong> HWNODEB_ID = createField("hwnodeb_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_crcollectortaskfiles</code>.
     */
    public final TableField<HwnodebRecord, ULong> HWNODEB_CRCOLLECTORTASKFILES = createField("hwnodeb_crcollectortaskfiles", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_date</code>.
     */
    public final TableField<HwnodebRecord, UInteger> HWNODEB_DATE = createField("hwnodeb_date", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_datefrom</code>.
     */
    public final TableField<HwnodebRecord, Integer> HWNODEB_DATEFROM = createField("hwnodeb_datefrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_hwrnc</code>.
     */
    public final TableField<HwnodebRecord, ULong> HWNODEB_HWRNC = createField("hwnodeb_hwrnc", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_node</code>.
     */
    public final TableField<HwnodebRecord, Integer> HWNODEB_NODE = createField("hwnodeb_node", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_nodephysical</code>.
     */
    public final TableField<HwnodebRecord, Integer> HWNODEB_NODEPHYSICAL = createField("hwnodeb_nodephysical", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_nodestatus</code>.
     */
    public final TableField<HwnodebRecord, Integer> HWNODEB_NODESTATUS = createField("hwnodeb_nodestatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_revenueclass</code>.
     */
    public final TableField<HwnodebRecord, Integer> HWNODEB_REVENUECLASS = createField("hwnodeb_revenueclass", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_vendor</code>.
     */
    public final TableField<HwnodebRecord, Integer> HWNODEB_VENDOR = createField("hwnodeb_vendor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_namingvalid</code>.
     */
    public final TableField<HwnodebRecord, Byte> HWNODEB_NAMINGVALID = createField("hwnodeb_namingvalid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>chrono.hwnodeb.NODEBID</code>.
     */
    public final TableField<HwnodebRecord, String> NODEBID = createField("NODEBID", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.LOGICRNCID</code>.
     */
    public final TableField<HwnodebRecord, String> LOGICRNCID = createField("LOGICRNCID", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwnodeb.NODEBNAME</code>.
     */
    public final TableField<HwnodebRecord, String> NODEBNAME = createField("NODEBNAME", org.jooq.impl.SQLDataType.CHAR(96), this, "");

    /**
     * The column <code>chrono.hwnodeb.TOTALCELL</code>.
     */
    public final TableField<HwnodebRecord, Integer> TOTALCELL = createField("TOTALCELL", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.FDN</code>.
     */
    public final TableField<HwnodebRecord, String> FDN = createField("FDN", org.jooq.impl.SQLDataType.CHAR(64), this, "");

    /**
     * The column <code>chrono.hwnodeb.HOSTTYPE</code>.
     */
    public final TableField<HwnodebRecord, String> HOSTTYPE = createField("HOSTTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.BTSTYPE</code>.
     */
    public final TableField<HwnodebRecord, String> BTSTYPE = createField("BTSTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.NBOAMIP</code>.
     */
    public final TableField<HwnodebRecord, String> NBOAMIP = createField("NBOAMIP", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.NBOAMMASK</code>.
     */
    public final TableField<HwnodebRecord, String> NBOAMMASK = createField("NBOAMMASK", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.TNLBEARERTYPE</code>.
     */
    public final TableField<HwnodebRecord, String> TNLBEARERTYPE = createField("TNLBEARERTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.RSCMNGMODE</code>.
     */
    public final TableField<HwnodebRecord, String> RSCMNGMODE = createField("RSCMNGMODE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.SATELLITEIND</code>.
     */
    public final TableField<HwnodebRecord, String> SATELLITEIND = createField("SATELLITEIND", org.jooq.impl.SQLDataType.CHAR(12), this, "");

    /**
     * The column <code>chrono.hwnodeb.SHARINGTYPE</code>.
     */
    public final TableField<HwnodebRecord, String> SHARINGTYPE = createField("SHARINGTYPE", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.TRANSDELAY</code>.
     */
    public final TableField<HwnodebRecord, Integer> TRANSDELAY = createField("TRANSDELAY", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.NAME</code>.
     */
    public final TableField<HwnodebRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.hwnodeb.NEID</code>.
     */
    public final TableField<HwnodebRecord, Integer> NEID = createField("NEID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.BLKSTATUS</code>.
     */
    public final TableField<HwnodebRecord, String> BLKSTATUS = createField("BLKSTATUS", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.NODEBPROTCLVER</code>.
     */
    public final TableField<HwnodebRecord, String> NODEBPROTCLVER = createField("NODEBPROTCLVER", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>chrono.hwnodeb.ANI</code>.
     */
    public final TableField<HwnodebRecord, String> ANI = createField("ANI", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwnodeb.hwnodeb_remark</code>.
     */
    public final TableField<HwnodebRecord, String> HWNODEB_REMARK = createField("hwnodeb_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>chrono.hwnodeb.TXBW</code>.
     */
    public final TableField<HwnodebRecord, String> TXBW = createField("TXBW", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwnodeb.RXBW</code>.
     */
    public final TableField<HwnodebRecord, String> RXBW = createField("RXBW", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>chrono.hwnodeb.EXTPROP1</code>.
     */
    public final TableField<HwnodebRecord, Integer> EXTPROP1 = createField("EXTPROP1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>chrono.hwnodeb.EXTPROP2</code>.
     */
    public final TableField<HwnodebRecord, String> EXTPROP2 = createField("EXTPROP2", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * Create a <code>chrono.hwnodeb</code> table reference
     */
    public Hwnodeb() {
        this(DSL.name("hwnodeb"), null);
    }

    /**
     * Create an aliased <code>chrono.hwnodeb</code> table reference
     */
    public Hwnodeb(String alias) {
        this(DSL.name(alias), HWNODEB);
    }

    /**
     * Create an aliased <code>chrono.hwnodeb</code> table reference
     */
    public Hwnodeb(Name alias) {
        this(alias, HWNODEB);
    }

    private Hwnodeb(Name alias, Table<HwnodebRecord> aliased) {
        this(alias, aliased, null);
    }

    private Hwnodeb(Name alias, Table<HwnodebRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Chrono.CHRONO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HWNODEB_HWBTS_DATE, Indexes.HWNODEB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HwnodebRecord> getPrimaryKey() {
        return Keys.KEY_HWNODEB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HwnodebRecord>> getKeys() {
        return Arrays.<UniqueKey<HwnodebRecord>>asList(Keys.KEY_HWNODEB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwnodeb as(String alias) {
        return new Hwnodeb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hwnodeb as(Name alias) {
        return new Hwnodeb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwnodeb rename(String name) {
        return new Hwnodeb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Hwnodeb rename(Name name) {
        return new Hwnodeb(name, null);
    }
}
